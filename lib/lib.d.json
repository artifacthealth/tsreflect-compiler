{
	"noDefaultLib": true,
	"declares": [
		{
			"kind": "variable",
			"name": "NaN",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "Infinity",
			"type": "number"
		},
		{
			"kind": "function",
			"name": "eval",
			"description": "Evaluates JavaScript code and executes it.",
			"parameters": [
				{
					"name": "x",
					"description": "A String value that contains valid JavaScript code.",
					"type": "string"
				}
			],
			"returns": "any"
		},
		{
			"kind": "function",
			"name": "parseInt",
			"description": "Converts A string to an integer.",
			"parameters": [
				{
					"name": "s",
					"description": "A string to convert into a number.",
					"type": "string"
				},
				{
					"name": "radix",
					"description": "A value between 2 and 36 that specifies the base of the number in numString. \r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "parseFloat",
			"description": "Converts a string to a floating-point number.",
			"parameters": [
				{
					"name": "string",
					"description": "A string that contains a floating-point number.",
					"type": "string"
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "isNaN",
			"description": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
			"parameters": [
				{
					"name": "number",
					"description": "A numeric value.",
					"type": "number"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "isFinite",
			"description": "Determines whether a supplied number is finite.",
			"parameters": [
				{
					"name": "number",
					"description": "Any numeric value.",
					"type": "number"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "decodeURI",
			"description": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
			"parameters": [
				{
					"name": "encodedURI",
					"description": "A value representing an encoded URI.",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "decodeURIComponent",
			"description": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
			"parameters": [
				{
					"name": "encodedURIComponent",
					"description": "A value representing an encoded URI component.",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "encodeURI",
			"description": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
			"parameters": [
				{
					"name": "uri",
					"description": "A value representing an encoded URI.",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "encodeURIComponent",
			"description": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
			"parameters": [
				{
					"name": "uriComponent",
					"description": "A value representing an encoded URI component.",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "interface",
			"name": "PropertyDescriptor",
			"signatures": [
				{
					"kind": "property",
					"name": "configurable",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "enumerable",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "value",
					"optional": true,
					"type": "any"
				},
				{
					"kind": "property",
					"name": "writable",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "get",
					"optional": true,
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "set",
					"optional": true,
					"parameters": [
						{
							"name": "v",
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "PropertyDescriptorMap",
			"signatures": [
				{
					"kind": "index",
					"parameter": {
						"name": "s",
						"type": "string"
					},
					"returns": "PropertyDescriptor"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Object",
			"signatures": [
				{
					"kind": "property",
					"name": "constructor",
					"type": "Function",
					"description": "The initial value of Object.prototype.constructor is the standard built-in Object constructor."
				},
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of an object.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Returns a date converted to a string using the current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "valueOf",
					"description": "Returns the primitive value of the specified object.",
					"returns": "Object"
				},
				{
					"kind": "method",
					"name": "hasOwnProperty",
					"description": "Determines whether an object has a property with the specified name.",
					"parameters": [
						{
							"name": "v",
							"description": "A property name.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "isPrototypeOf",
					"description": "Determines whether an object exists in another object's prototype chain.",
					"parameters": [
						{
							"name": "v",
							"description": "Another object whose prototype chain is to be checked.",
							"type": "Object"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "propertyIsEnumerable",
					"description": "Determines whether a specified property is enumerable.",
					"parameters": [
						{
							"name": "v",
							"description": "A property name.",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"description": "Provides functionality common to all JavaScript objects.",
			"name": "Object",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"returns": "any"
					},
					{
						"kind": "call",
						"parameters": [
							{
								"name": "value",
								"type": "any"
							}
						],
						"returns": "any"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "Object"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Object"
					},
					{
						"kind": "method",
						"name": "getPrototypeOf",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "getOwnPropertyDescriptor",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							},
							{
								"name": "p",
								"type": "string"
							}
						],
						"returns": "PropertyDescriptor"
					},
					{
						"kind": "method",
						"name": "getOwnPropertyNames",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": {
							"kind": "array",
							"type": "string"
						}
					},
					{
						"kind": "method",
						"name": "create",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							},
							{
								"name": "properties",
								"optional": true,
								"type": "PropertyDescriptorMap"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "defineProperty",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							},
							{
								"name": "p",
								"type": "string"
							},
							{
								"name": "attributes",
								"type": "PropertyDescriptor"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "defineProperties",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							},
							{
								"name": "properties",
								"type": "PropertyDescriptorMap"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "seal",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "freeze",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "preventExtensions",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "isSealed",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "method",
						"name": "isFrozen",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "method",
						"name": "isExtensible",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "method",
						"name": "keys",
						"parameters": [
							{
								"name": "o",
								"type": "any"
							}
						],
						"returns": {
							"kind": "array",
							"type": "string"
						}
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Function",
			"description": "Creates a new function.",
			"signatures": [
				{
					"kind": "method",
					"name": "apply",
					"description": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
					"parameters": [
						{
							"name": "thisArg",
							"description": "The object to be used as the this object.",
							"type": "any"
						},
						{
							"name": "argArray",
							"description": "A set of arguments to be passed to the function.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "call",
					"description": "Calls a method of an object, substituting another object for the current object.",
					"parameters": [
						{
							"name": "thisArg",
							"description": "The object to be used as the current object.",
							"type": "any"
						},
						{
							"name": "argArray",
							"description": "A list of arguments to be passed to the method.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "bind",
					"description": "For a given function, creates a bound function that has the same body as the original function. \r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
					"parameters": [
						{
							"name": "thisArg",
							"description": "An object to which the this keyword can refer inside the new function.",
							"type": "any"
						},
						{
							"name": "argArray",
							"description": "A list of arguments to be passed to the new function.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "property",
					"name": "prototype",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "arguments",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "caller",
					"type": "Function"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Function",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "args",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "string"
								}
							}
						],
						"returns": "Function"
					},
					{
						"kind": "constructor",
						"description": "Creates a new function.",
						"parameters": [
							{
								"name": "args",
								"description": "A list of arguments the function accepts.",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "string"
								}
							}
						],
						"returns": "Function"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Function"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IArguments",
			"signatures": [
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "any"
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "callee",
					"type": "Function"
				}
			]
		},
		{
			"kind": "interface",
			"name": "String",
			"signatures": [
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of a string.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "charAt",
					"description": "Returns the character at the specified index.",
					"parameters": [
						{
							"name": "pos",
							"description": "The zero-based index of the desired character.",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "charCodeAt",
					"description": "Returns the Unicode value of the character at the specified location.",
					"parameters": [
						{
							"name": "index",
							"description": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "concat",
					"description": "Returns a string that contains the concatenation of two or more strings.",
					"parameters": [
						{
							"name": "strings",
							"description": "The strings to append to the end of the string.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "indexOf",
					"description": "Returns the position of the first occurrence of a substring.",
					"parameters": [
						{
							"name": "searchString",
							"description": "The substring to search for in the string",
							"type": "string"
						},
						{
							"name": "position",
							"description": "The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "lastIndexOf",
					"description": "Returns the last occurrence of a substring in the string.",
					"parameters": [
						{
							"name": "searchString",
							"description": "The substring to search for.",
							"type": "string"
						},
						{
							"name": "position",
							"description": "The index at which to begin searching. If omitted, the search begins at the end of the string.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "localeCompare",
					"description": "Determines whether two strings are equivalent in the current locale.",
					"parameters": [
						{
							"name": "that",
							"description": "String to compare to target string",
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "match",
					"description": "Matches a string with a regular expression, and returns an array containing the results of that search.",
					"parameters": [
						{
							"name": "regexp",
							"description": "A variable name or string literal containing the regular expression pattern and flags.",
							"type": "string"
						}
					],
					"returns": "RegExpMatchArray"
				},
				{
					"kind": "method",
					"name": "match",
					"description": "Matches a string with a regular expression, and returns an array containing the results of that search.",
					"parameters": [
						{
							"name": "regexp",
							"description": "A regular expression object that contains the regular expression pattern and applicable flags.",
							"type": "RegExp"
						}
					],
					"returns": "RegExpMatchArray"
				},
				{
					"kind": "method",
					"name": "replace",
					"description": "Replaces text in a string, using a regular expression or search string.",
					"parameters": [
						{
							"name": "searchValue",
							"description": "A String object or string literal that represents the regular expression",
							"type": "string"
						},
						{
							"name": "replaceValue",
							"description": "A String object or string literal containing the text to replace for every successful match of rgExp in stringObj.",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "replace",
					"description": "Replaces text in a string, using a regular expression or search string.",
					"parameters": [
						{
							"name": "searchValue",
							"description": "A String object or string literal that represents the regular expression",
							"type": "string"
						},
						{
							"name": "replaceValue",
							"description": "A function that returns the replacement text.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "substring",
										"type": "string"
									},
									{
										"name": "args",
										"rest": true,
										"type": {
											"kind": "array",
											"type": "any"
										}
									}
								],
								"returns": "string"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "replace",
					"description": "Replaces text in a string, using a regular expression or search string.",
					"parameters": [
						{
							"name": "searchValue",
							"description": "A Regular Expression object containing the regular expression pattern and applicable flags",
							"type": "RegExp"
						},
						{
							"name": "replaceValue",
							"description": "A String object or string literal containing the text to replace for every successful match of rgExp in stringObj.",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "replace",
					"description": "Replaces text in a string, using a regular expression or search string.",
					"parameters": [
						{
							"name": "searchValue",
							"description": "A Regular Expression object containing the regular expression pattern and applicable flags",
							"type": "RegExp"
						},
						{
							"name": "replaceValue",
							"description": "A function that returns the replacement text.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "substring",
										"type": "string"
									},
									{
										"name": "args",
										"rest": true,
										"type": {
											"kind": "array",
											"type": "any"
										}
									}
								],
								"returns": "string"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "search",
					"description": "Finds the first substring match in a regular expression search.",
					"parameters": [
						{
							"name": "regexp",
							"description": "The regular expression pattern and applicable flags.",
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "search",
					"description": "Finds the first substring match in a regular expression search.",
					"parameters": [
						{
							"name": "regexp",
							"description": "The regular expression pattern and applicable flags.",
							"type": "RegExp"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "slice",
					"description": "Returns a section of a string.",
					"parameters": [
						{
							"name": "start",
							"description": "The index to the beginning of the specified portion of stringObj.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end. \r\nIf this value is not specified, the substring continues to the end of stringObj.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "split",
					"description": "Split a string into substrings using the specified separator and return them as an array.",
					"parameters": [
						{
							"name": "separator",
							"description": "A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.",
							"type": "string"
						},
						{
							"name": "limit",
							"description": "A value used to limit the number of elements returned in the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "method",
					"name": "split",
					"description": "Split a string into substrings using the specified separator and return them as an array.",
					"parameters": [
						{
							"name": "separator",
							"description": "A Regular Express that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.",
							"type": "RegExp"
						},
						{
							"name": "limit",
							"description": "A value used to limit the number of elements returned in the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "method",
					"name": "substring",
					"description": "Returns the substring at the specified location within a String object.",
					"parameters": [
						{
							"name": "start",
							"description": "The zero-based index number indicating the beginning of the substring.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\r\nIf end is omitted, the characters from start through the end of the original string are returned.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLowerCase",
					"description": "Converts all the alphabetic characters in a string to lowercase.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleLowerCase",
					"description": "Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toUpperCase",
					"description": "Converts all the alphabetic characters in a string to uppercase.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleUpperCase",
					"description": "Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "trim",
					"description": "Removes the leading and trailing white space and line terminator characters from a string.",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "Returns the length of a String object."
				},
				{
					"kind": "method",
					"name": "substr",
					"description": "Gets a substring beginning at the specified location and having the specified length.",
					"parameters": [
						{
							"name": "from",
							"description": "The starting position of the desired substring. The index of the first character in the string is zero.",
							"type": "number"
						},
						{
							"name": "length",
							"description": "The number of characters to include in the returned substring.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"description": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
			"name": "String",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "string"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "String"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "String"
					},
					{
						"kind": "method",
						"name": "fromCharCode",
						"parameters": [
							{
								"name": "codes",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "string"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Boolean"
		},
		{
			"kind": "variable",
			"name": "Boolean",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "Boolean"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Boolean"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Number",
			"signatures": [
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of an object.",
					"parameters": [
						{
							"name": "radix",
							"description": "Specifies a radix for converting numeric values to strings. This value is only used for numbers.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toFixed",
					"description": "Returns a string representing a number in fixed-point notation.",
					"parameters": [
						{
							"name": "fractionDigits",
							"description": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toExponential",
					"description": "Returns a string containing a number represented in exponential notation.",
					"parameters": [
						{
							"name": "fractionDigits",
							"description": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toPrecision",
					"description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.",
					"parameters": [
						{
							"name": "precision",
							"description": "Number of significant digits. Must be in the range 1 - 21, inclusive.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"description": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
			"name": "Number",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "number"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"optional": true,
								"type": "any"
							}
						],
						"returns": "Number"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Number"
					},
					{
						"kind": "property",
						"name": "MAX_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MIN_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NaN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NEGATIVE_INFINITY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "POSITIVE_INFINITY",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Math",
			"signatures": [
				{
					"kind": "property",
					"name": "E",
					"type": "number",
					"description": "The mathematical constant e. This is Euler's number, the base of natural logarithms."
				},
				{
					"kind": "property",
					"name": "LN10",
					"type": "number",
					"description": "The natural logarithm of 10."
				},
				{
					"kind": "property",
					"name": "LN2",
					"type": "number",
					"description": "The natural logarithm of 2."
				},
				{
					"kind": "property",
					"name": "LOG2E",
					"type": "number",
					"description": "The base-2 logarithm of e."
				},
				{
					"kind": "property",
					"name": "LOG10E",
					"type": "number",
					"description": "The base-10 logarithm of e."
				},
				{
					"kind": "property",
					"name": "PI",
					"type": "number",
					"description": "Pi. This is the ratio of the circumference of a circle to its diameter."
				},
				{
					"kind": "property",
					"name": "SQRT1_2",
					"type": "number",
					"description": "The square root of 0.5, or, equivalently, one divided by the square root of 2."
				},
				{
					"kind": "property",
					"name": "SQRT2",
					"type": "number",
					"description": "The square root of 2."
				},
				{
					"kind": "method",
					"name": "abs",
					"description": "Returns the absolute value of a number (the value without regard to whether it is positive or negative). \r\nFor example, the absolute value of -5 is the same as the absolute value of 5.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression for which the absolute value is needed.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "acos",
					"description": "Returns the arc cosine (or inverse cosine) of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "asin",
					"description": "Returns the arcsine of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "atan",
					"description": "Returns the arctangent of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression for which the arctangent is needed.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "atan2",
					"description": "Returns the angle (in radians) from the X axis to a point (y,x).",
					"parameters": [
						{
							"name": "y",
							"description": "A numeric expression representing the cartesian y-coordinate.",
							"type": "number"
						},
						{
							"name": "x",
							"description": "A numeric expression representing the cartesian x-coordinate.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "ceil",
					"description": "Returns the smallest number greater than or equal to its numeric argument.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "cos",
					"description": "Returns the cosine of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression that contains an angle measured in radians.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "exp",
					"description": "Returns e (the base of natural logarithms) raised to a power.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression representing the power of e.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "floor",
					"description": "Returns the greatest number less than or equal to its numeric argument.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "log",
					"description": "Returns the natural logarithm (base e) of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "max",
					"description": "Returns the larger of a set of supplied numeric expressions.",
					"parameters": [
						{
							"name": "values",
							"description": "Numeric expressions to be evaluated.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "min",
					"description": "Returns the smaller of a set of supplied numeric expressions.",
					"parameters": [
						{
							"name": "values",
							"description": "Numeric expressions to be evaluated.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "pow",
					"description": "Returns the value of a base expression taken to a specified power.",
					"parameters": [
						{
							"name": "x",
							"description": "The base value of the expression.",
							"type": "number"
						},
						{
							"name": "y",
							"description": "The exponent value of the expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "random",
					"description": "Returns a pseudorandom number between 0 and 1.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "round",
					"description": "Returns a supplied numeric expression rounded to the nearest number.",
					"parameters": [
						{
							"name": "x",
							"description": "The value to be rounded to the nearest number.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "sin",
					"description": "Returns the sine of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression that contains an angle measured in radians.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "sqrt",
					"description": "Returns the square root of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "tan",
					"description": "Returns the tangent of a number.",
					"parameters": [
						{
							"name": "x",
							"description": "A numeric expression that contains an angle measured in radians.",
							"type": "number"
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "variable",
			"description": "An intrinsic object that provides basic mathematics functionality and constants.",
			"name": "Math",
			"type": "Math"
		},
		{
			"kind": "interface",
			"name": "Date",
			"description": "Enables basic storage and retrieval of dates and times.",
			"signatures": [
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of a date. The format of the string depends on the locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toDateString",
					"description": "Returns a date as a string value.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toTimeString",
					"description": "Returns a time as a string value.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Returns a value as a string value appropriate to the host environment's current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleDateString",
					"description": "Returns a date as a string value appropriate to the host environment's current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleTimeString",
					"description": "Returns a time as a string value appropriate to the host environment's current locale.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "valueOf",
					"description": "Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getTime",
					"description": "Gets the time value in milliseconds.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getFullYear",
					"description": "Gets the year, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCFullYear",
					"description": "Gets the year using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getMonth",
					"description": "Gets the month, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCMonth",
					"description": "Gets the month of a Date object using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getDate",
					"description": "Gets the day-of-the-month, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCDate",
					"description": "Gets the day-of-the-month, using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getDay",
					"description": "Gets the day of the week, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCDay",
					"description": "Gets the day of the week using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getHours",
					"description": "Gets the hours in a date, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCHours",
					"description": "Gets the hours value in a Date object using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getMinutes",
					"description": "Gets the minutes of a Date object, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCMinutes",
					"description": "Gets the minutes of a Date object using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getSeconds",
					"description": "Gets the seconds of a Date object, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCSeconds",
					"description": "Gets the seconds of a Date object using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getMilliseconds",
					"description": "Gets the milliseconds of a Date, using local time.",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUTCMilliseconds",
					"description": "Gets the milliseconds of a Date object using Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getTimezoneOffset",
					"description": "Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC).",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setTime",
					"description": "Sets the date and time value in the Date object.",
					"parameters": [
						{
							"name": "time",
							"description": "A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setMilliseconds",
					"description": "Sets the milliseconds value in the Date object using local time.",
					"parameters": [
						{
							"name": "ms",
							"description": "A numeric value equal to the millisecond value.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCMilliseconds",
					"description": "Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "ms",
							"description": "A numeric value equal to the millisecond value.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setSeconds",
					"description": "Sets the seconds value in the Date object using local time.",
					"parameters": [
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCSeconds",
					"description": "Sets the seconds value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setMinutes",
					"description": "Sets the minutes value in the Date object using local time.",
					"parameters": [
						{
							"name": "min",
							"description": "A numeric value equal to the minutes value.",
							"type": "number"
						},
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCMinutes",
					"description": "Sets the minutes value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "min",
							"description": "A numeric value equal to the minutes value.",
							"type": "number"
						},
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setHours",
					"description": "Sets the hour value in the Date object using local time.",
					"parameters": [
						{
							"name": "hours",
							"description": "A numeric value equal to the hours value.",
							"type": "number"
						},
						{
							"name": "min",
							"description": "A numeric value equal to the minutes value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCHours",
					"description": "Sets the hours value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "hours",
							"description": "A numeric value equal to the hours value.",
							"type": "number"
						},
						{
							"name": "min",
							"description": "A numeric value equal to the minutes value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "sec",
							"description": "A numeric value equal to the seconds value.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "ms",
							"description": "A numeric value equal to the milliseconds value.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setDate",
					"description": "Sets the numeric day-of-the-month value of the Date object using local time.",
					"parameters": [
						{
							"name": "date",
							"description": "A numeric value equal to the day of the month.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCDate",
					"description": "Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "date",
							"description": "A numeric value equal to the day of the month.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setMonth",
					"description": "Sets the month value in the Date object using local time.",
					"parameters": [
						{
							"name": "month",
							"description": "A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.",
							"type": "number"
						},
						{
							"name": "date",
							"description": "A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCMonth",
					"description": "Sets the month value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "month",
							"description": "A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.",
							"type": "number"
						},
						{
							"name": "date",
							"description": "A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setFullYear",
					"description": "Sets the year of the Date object using local time.",
					"parameters": [
						{
							"name": "year",
							"description": "A numeric value for the year.",
							"type": "number"
						},
						{
							"name": "month",
							"description": "A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "date",
							"description": "A numeric value equal for the day of the month.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setUTCFullYear",
					"description": "Sets the year value in the Date object using Universal Coordinated Time (UTC).",
					"parameters": [
						{
							"name": "year",
							"description": "A numeric value equal to the year.",
							"type": "number"
						},
						{
							"name": "month",
							"description": "A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "date",
							"description": "A numeric value equal to the day of the month.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "toUTCString",
					"description": "Returns a date converted to a string using Universal Coordinated Time (UTC).",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toISOString",
					"description": "Returns a date as a string value in ISO format.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toJSON",
					"description": "Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization.",
					"parameters": [
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Date",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"returns": "string"
					},
					{
						"kind": "constructor",
						"returns": "Date"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"type": "number"
							}
						],
						"returns": "Date"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "value",
								"type": "string"
							}
						],
						"returns": "Date"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "year",
								"type": "number"
							},
							{
								"name": "month",
								"type": "number"
							},
							{
								"name": "date",
								"optional": true,
								"type": "number"
							},
							{
								"name": "hours",
								"optional": true,
								"type": "number"
							},
							{
								"name": "minutes",
								"optional": true,
								"type": "number"
							},
							{
								"name": "seconds",
								"optional": true,
								"type": "number"
							},
							{
								"name": "ms",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Date"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Date"
					},
					{
						"kind": "method",
						"name": "parse",
						"parameters": [
							{
								"name": "s",
								"type": "string"
							}
						],
						"returns": "number"
					},
					{
						"kind": "method",
						"name": "UTC",
						"parameters": [
							{
								"name": "year",
								"type": "number"
							},
							{
								"name": "month",
								"type": "number"
							},
							{
								"name": "date",
								"optional": true,
								"type": "number"
							},
							{
								"name": "hours",
								"optional": true,
								"type": "number"
							},
							{
								"name": "minutes",
								"optional": true,
								"type": "number"
							},
							{
								"name": "seconds",
								"optional": true,
								"type": "number"
							},
							{
								"name": "ms",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "number"
					},
					{
						"kind": "method",
						"name": "now",
						"returns": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "RegExpMatchArray",
			"extends": [
				{
					"kind": "reference",
					"type": "Array",
					"arguments": [
						"string"
					]
				}
			],
			"signatures": [
				{
					"kind": "property",
					"name": "index",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "input",
					"optional": true,
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "RegExpExecArray",
			"extends": [
				{
					"kind": "reference",
					"type": "Array",
					"arguments": [
						"string"
					]
				}
			],
			"signatures": [
				{
					"kind": "property",
					"name": "index",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "input",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "RegExp",
			"signatures": [
				{
					"kind": "method",
					"name": "exec",
					"description": "Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.",
					"parameters": [
						{
							"name": "string",
							"description": "The String object or string literal on which to perform the search.",
							"type": "string"
						}
					],
					"returns": "RegExpExecArray"
				},
				{
					"kind": "method",
					"name": "test",
					"description": "Returns a Boolean value that indicates whether or not a pattern exists in a searched string.",
					"parameters": [
						{
							"name": "string",
							"description": "String on which to perform the search.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "property",
					"name": "source",
					"type": "string",
					"description": "Returns a copy of the text of the regular expression pattern. Read-only. The rgExp argument is a Regular expression object. It can be a variable name or a literal."
				},
				{
					"kind": "property",
					"name": "global",
					"type": "boolean",
					"description": "Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only."
				},
				{
					"kind": "property",
					"name": "ignoreCase",
					"type": "boolean",
					"description": "Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only."
				},
				{
					"kind": "property",
					"name": "multiline",
					"type": "boolean",
					"description": "Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only."
				},
				{
					"kind": "property",
					"name": "lastIndex",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "compile",
					"returns": "RegExp"
				}
			]
		},
		{
			"kind": "variable",
			"name": "RegExp",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "pattern",
								"type": "string"
							},
							{
								"name": "flags",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "RegExp"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "pattern",
								"type": "string"
							},
							{
								"name": "flags",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "RegExp"
					},
					{
						"kind": "property",
						"name": "$1",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$2",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$3",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$4",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$5",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$6",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$7",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$8",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "$9",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "lastMatch",
						"type": "string"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Error",
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Error",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "Error"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "Error"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Error"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "EvalError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "EvalError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "EvalError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "EvalError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "EvalError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "RangeError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "RangeError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "RangeError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "RangeError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "RangeError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ReferenceError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "ReferenceError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "ReferenceError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "ReferenceError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ReferenceError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SyntaxError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "SyntaxError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "SyntaxError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "SyntaxError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SyntaxError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TypeError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "TypeError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "TypeError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "TypeError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TypeError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "URIError",
			"extends": [
				"Error"
			]
		},
		{
			"kind": "variable",
			"name": "URIError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "URIError"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "message",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "URIError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "URIError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "JSON",
			"signatures": [
				{
					"kind": "method",
					"name": "parse",
					"description": "Converts a JavaScript Object Notation (JSON) string into an object.",
					"parameters": [
						{
							"name": "text",
							"description": "A valid JSON string.",
							"type": "string"
						},
						{
							"name": "reviver",
							"description": "A function that transforms the results. This function is called for each member of the object. \r\nIf a member contains nested objects, the nested objects are transformed before the parent object is.",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "key",
										"type": "any"
									},
									{
										"name": "value",
										"type": "any"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "stringify",
					"description": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
					"parameters": [
						{
							"name": "value",
							"description": "A JavaScript value, usually an object or array, to be converted.",
							"type": "any"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "stringify",
					"description": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
					"parameters": [
						{
							"name": "value",
							"description": "A JavaScript value, usually an object or array, to be converted.",
							"type": "any"
						},
						{
							"name": "replacer",
							"description": "A function that transforms the results.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "key",
										"type": "string"
									},
									{
										"name": "value",
										"type": "any"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "stringify",
					"description": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
					"parameters": [
						{
							"name": "value",
							"description": "A JavaScript value, usually an object or array, to be converted.",
							"type": "any"
						},
						{
							"name": "replacer",
							"description": "Array that transforms the results.",
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "stringify",
					"description": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
					"parameters": [
						{
							"name": "value",
							"description": "A JavaScript value, usually an object or array, to be converted.",
							"type": "any"
						},
						{
							"name": "replacer",
							"description": "A function that transforms the results.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "key",
										"type": "string"
									},
									{
										"name": "value",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "space",
							"type": "any"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "stringify",
					"description": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
					"parameters": [
						{
							"name": "value",
							"description": "A JavaScript value, usually an object or array, to be converted.",
							"type": "any"
						},
						{
							"name": "replacer",
							"description": "Array that transforms the results.",
							"type": {
								"kind": "array",
								"type": "any"
							}
						},
						{
							"name": "space",
							"description": "Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.",
							"type": "any"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"description": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
			"name": "JSON",
			"type": "JSON"
		},
		{
			"kind": "interface",
			"name": "Array",
			"typeParameters": [
				{
					"name": "T"
				}
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "Gets or sets the length of the array. This is a number one higher than the highest element defined in an array."
				},
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of an array.",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleString",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "push",
					"description": "Appends new elements to an array, and returns the new length of the array.",
					"parameters": [
						{
							"name": "items",
							"description": "New elements of the Array.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "T"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "pop",
					"description": "Removes the last element from an array and returns it.",
					"returns": "T"
				},
				{
					"kind": "method",
					"name": "concat",
					"description": "Combines two or more arrays.",
					"typeParameters": [
						{
							"name": "U",
							"constraint": {
								"kind": "array",
								"type": "T"
							}
						}
					],
					"parameters": [
						{
							"name": "items",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "U"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "concat",
					"description": "Combines two or more arrays.",
					"parameters": [
						{
							"name": "items",
							"description": "Additional items to add to the end of array1.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "T"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "join",
					"description": "Adds all the elements of an array separated by the specified separator string.",
					"parameters": [
						{
							"name": "separator",
							"description": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "reverse",
					"description": "Reverses the elements in an Array.",
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "shift",
					"description": "Removes the first element from an array and returns it.",
					"returns": "T"
				},
				{
					"kind": "method",
					"name": "slice",
					"description": "Returns a section of an array.",
					"parameters": [
						{
							"name": "start",
							"description": "The beginning of the specified portion of the array.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"description": "The end of the specified portion of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "sort",
					"description": "Sorts an array.",
					"parameters": [
						{
							"name": "compareFn",
							"description": "The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "a",
										"type": "T"
									},
									{
										"name": "b",
										"type": "T"
									}
								],
								"returns": "number"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "splice",
					"description": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
					"parameters": [
						{
							"name": "start",
							"description": "The zero-based location in the array from which to start removing elements.",
							"type": "number"
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "splice",
					"description": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
					"parameters": [
						{
							"name": "start",
							"description": "The zero-based location in the array from which to start removing elements.",
							"type": "number"
						},
						{
							"name": "deleteCount",
							"description": "The number of elements to remove.",
							"type": "number"
						},
						{
							"name": "items",
							"description": "Elements to insert into the array in place of the deleted elements.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "T"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "unshift",
					"description": "Inserts new elements at the start of an array.",
					"parameters": [
						{
							"name": "items",
							"description": "Elements to insert at the start of the Array.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "T"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "indexOf",
					"description": "Returns the index of the first occurrence of a value in an array.",
					"parameters": [
						{
							"name": "searchElement",
							"description": "The value to locate in the array.",
							"type": "T"
						},
						{
							"name": "fromIndex",
							"description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "lastIndexOf",
					"description": "Returns the index of the last occurrence of a specified value in an array.",
					"parameters": [
						{
							"name": "searchElement",
							"description": "The value to locate in the array.",
							"type": "T"
						},
						{
							"name": "fromIndex",
							"description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "every",
					"description": "Determines whether all the members of an array satisfy the specified test.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "boolean"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "some",
					"description": "Determines whether the specified callback function returns true for any element of an array.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "boolean"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "forEach",
					"description": "Performs the specified action for each element in an array.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "void"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "map",
					"description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
					"typeParameters": [
						{
							"name": "U"
						}
					],
					"parameters": [
						{
							"name": "callbackfn",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "U"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": {
						"kind": "array",
						"type": "U"
					}
				},
				{
					"kind": "method",
					"name": "filter",
					"description": "Returns the elements of an array that meet the condition specified in a callback function.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "boolean"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": {
						"kind": "array",
						"type": "T"
					}
				},
				{
					"kind": "method",
					"name": "reduce",
					"description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "previousValue",
										"type": "T"
									},
									{
										"name": "currentValue",
										"type": "T"
									},
									{
										"name": "currentIndex",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "T"
							}
						},
						{
							"name": "initialValue",
							"optional": true,
							"type": "T"
						}
					],
					"returns": "T"
				},
				{
					"kind": "method",
					"name": "reduce",
					"description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
					"typeParameters": [
						{
							"name": "U"
						}
					],
					"parameters": [
						{
							"name": "callbackfn",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "previousValue",
										"type": "U"
									},
									{
										"name": "currentValue",
										"type": "T"
									},
									{
										"name": "currentIndex",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "U"
							}
						},
						{
							"name": "initialValue",
							"type": "U"
						}
					],
					"returns": "U"
				},
				{
					"kind": "method",
					"name": "reduceRight",
					"description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
					"parameters": [
						{
							"name": "callbackfn",
							"description": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "previousValue",
										"type": "T"
									},
									{
										"name": "currentValue",
										"type": "T"
									},
									{
										"name": "currentIndex",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "T"
							}
						},
						{
							"name": "initialValue",
							"optional": true,
							"type": "T"
						}
					],
					"returns": "T"
				},
				{
					"kind": "method",
					"name": "reduceRight",
					"description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
					"typeParameters": [
						{
							"name": "U"
						}
					],
					"parameters": [
						{
							"name": "callbackfn",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "previousValue",
										"type": "U"
									},
									{
										"name": "currentValue",
										"type": "T"
									},
									{
										"name": "currentIndex",
										"type": "number"
									},
									{
										"name": "array",
										"type": {
											"kind": "array",
											"type": "T"
										}
									}
								],
								"returns": "U"
							}
						},
						{
							"name": "initialValue",
							"type": "U"
						}
					],
					"returns": "U"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "n",
						"type": "number"
					},
					"returns": "T"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "arrayLength",
								"optional": true,
								"type": "number"
							}
						],
						"returns": {
							"kind": "array",
							"type": "any"
						}
					},
					{
						"kind": "call",
						"typeParameters": [
							{
								"name": "T"
							}
						],
						"parameters": [
							{
								"name": "arrayLength",
								"type": "number"
							}
						],
						"returns": {
							"kind": "array",
							"type": "T"
						}
					},
					{
						"kind": "call",
						"typeParameters": [
							{
								"name": "T"
							}
						],
						"parameters": [
							{
								"name": "items",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "T"
								}
							}
						],
						"returns": {
							"kind": "array",
							"type": "T"
						}
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "arrayLength",
								"optional": true,
								"type": "number"
							}
						],
						"returns": {
							"kind": "array",
							"type": "any"
						}
					},
					{
						"kind": "constructor",
						"typeParameters": [
							{
								"name": "T"
							}
						],
						"parameters": [
							{
								"name": "arrayLength",
								"type": "number"
							}
						],
						"returns": {
							"kind": "array",
							"type": "T"
						}
					},
					{
						"kind": "constructor",
						"typeParameters": [
							{
								"name": "T"
							}
						],
						"parameters": [
							{
								"name": "items",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "T"
								}
							}
						],
						"returns": {
							"kind": "array",
							"type": "T"
						}
					},
					{
						"kind": "method",
						"name": "isArray",
						"parameters": [
							{
								"name": "arg",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": {
							"kind": "array",
							"type": "any"
						}
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ArrayBuffer",
			"description": "Represents a raw buffer of binary data, which is used to store data for the \r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly, \r\nbut can be passed to a typed array or DataView Object to interpret the raw \r\nbuffer as needed.",
			"signatures": [
				{
					"kind": "property",
					"name": "byteLength",
					"type": "number",
					"description": "Read-only. The length of the ArrayBuffer (in bytes)."
				},
				{
					"kind": "method",
					"name": "slice",
					"description": "Returns a section of an ArrayBuffer.",
					"parameters": [
						{
							"name": "begin",
							"type": "number"
						},
						{
							"name": "end",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "ArrayBuffer"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ArrayBuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "byteLength",
								"type": "number"
							}
						],
						"returns": "ArrayBuffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ArrayBuffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ArrayBufferView",
			"signatures": [
				{
					"kind": "property",
					"name": "buffer",
					"type": "ArrayBuffer"
				},
				{
					"kind": "property",
					"name": "byteOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "byteLength",
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Int8Array",
			"description": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Int8Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements at begin, inclusive, up to end, exclusive.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Int8Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Int8Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Int8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Int8Array"
							}
						],
						"returns": "Int8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Int8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Int8Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Int8Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Uint8Array",
			"description": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Uint8Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Uint8Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Uint8Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Uint8Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Uint8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Uint8Array"
							}
						],
						"returns": "Uint8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Uint8Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Uint8Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Uint8Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Int16Array",
			"description": "A typed array of 16-bit integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Int16Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Int16Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Int16Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Int16Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Int16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Int16Array"
							}
						],
						"returns": "Int16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Int16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Int16Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Int16Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Uint16Array",
			"description": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Uint16Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Uint16Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Uint16Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Uint16Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Uint16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Uint16Array"
							}
						],
						"returns": "Uint16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Uint16Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Uint16Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Uint16Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Int32Array",
			"description": "A typed array of 32-bit integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Int32Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Int32Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Int32Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Int32Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Int32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Int32Array"
							}
						],
						"returns": "Int32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Int32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Int32Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Int32Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Uint32Array",
			"description": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Uint32Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Int8Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Uint32Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Uint32Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Uint32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Uint32Array"
							}
						],
						"returns": "Uint32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Uint32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Uint32Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Uint32Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Float32Array",
			"description": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Float32Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Float32Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Float32Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Float32Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Float32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Float32Array"
							}
						],
						"returns": "Float32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Float32Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Float32Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Float32Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Float64Array",
			"description": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested number of bytes could not be allocated an exception is raised.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "BYTES_PER_ELEMENT",
					"type": "number",
					"description": "The size in bytes of each element in the array."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "The length of the array."
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "get",
					"description": "Gets the element at the specified index.",
					"parameters": [
						{
							"name": "index",
							"description": "The index at which to get the element of the array.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "index",
							"description": "The index of the location to set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": "Float64Array"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "set",
					"description": "Sets a value or an array of values.",
					"parameters": [
						{
							"name": "array",
							"type": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "subarray",
					"description": "Gets a new Float64Array view of the ArrayBuffer Object store for this array, specifying the first and last members of the subarray.",
					"parameters": [
						{
							"name": "begin",
							"description": "The index of the beginning of the array.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The index of the end of the array.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Float64Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Float64Array",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "length",
								"type": "number"
							}
						],
						"returns": "Float64Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": "Float64Array"
							}
						],
						"returns": "Float64Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "number"
								}
							}
						],
						"returns": "Float64Array"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Float64Array"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Float64Array"
					},
					{
						"kind": "property",
						"name": "BYTES_PER_ELEMENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DataView",
			"description": "You can use a DataView object to read and write the different kinds of binary data to any location in the ArrayBuffer.",
			"extends": [
				"ArrayBufferView"
			],
			"signatures": [
				{
					"kind": "method",
					"name": "getInt8",
					"description": "Gets the Int8 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUint8",
					"description": "Gets the Uint8 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getInt16",
					"description": "Gets the Int16 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUint16",
					"description": "Gets the Uint16 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getInt32",
					"description": "Gets the Int32 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getUint32",
					"description": "Gets the Uint32 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getFloat32",
					"description": "Gets the Float32 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getFloat64",
					"description": "Gets the Float64 value at the specified byte offset from the start of the view. There is no alignment constraint; multi-byte values may be fetched from any offset.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be retrieved.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "setInt8",
					"description": "Stores an Int8 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setUint8",
					"description": "Stores an Uint8 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setInt16",
					"description": "Stores an Int16 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setUint16",
					"description": "Stores an Uint16 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setInt32",
					"description": "Stores an Int32 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setUint32",
					"description": "Stores an Uint32 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setFloat32",
					"description": "Stores an Float32 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setFloat64",
					"description": "Stores an Float64 value at the specified byte offset from the start of the view.",
					"parameters": [
						{
							"name": "byteOffset",
							"description": "The place in the buffer at which the value should be set.",
							"type": "number"
						},
						{
							"name": "value",
							"description": "The value to set.",
							"type": "number"
						},
						{
							"name": "littleEndian",
							"description": "If false or undefined, a big-endian value should be written, otherwise a little-endian value should be written.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DataView",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "buffer",
								"type": "ArrayBuffer"
							},
							{
								"name": "byteOffset",
								"optional": true,
								"type": "number"
							},
							{
								"name": "length",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "DataView"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DataView"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Map",
			"typeParameters": [
				{
					"name": "K"
				},
				{
					"name": "V"
				}
			],
			"signatures": [
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "delete",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "forEach",
					"parameters": [
						{
							"name": "callbackfn",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "V"
									},
									{
										"name": "index",
										"type": "K"
									},
									{
										"name": "map",
										"type": {
											"kind": "reference",
											"type": "Map",
											"arguments": [
												"K",
												"V"
											]
										}
									}
								],
								"returns": "void"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "get",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "V"
				},
				{
					"kind": "method",
					"name": "has",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "set",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						},
						{
							"name": "value",
							"type": "V"
						}
					],
					"returns": {
						"kind": "reference",
						"type": "Map",
						"arguments": [
							"K",
							"V"
						]
					}
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Map",
			"type": {
				"kind": "constructor",
				"typeParameters": [
					{
						"name": "K"
					},
					{
						"name": "V"
					}
				],
				"returns": {
					"kind": "reference",
					"type": "Map",
					"arguments": [
						"K",
						"V"
					]
				}
			}
		},
		{
			"kind": "interface",
			"name": "WeakMap",
			"typeParameters": [
				{
					"name": "K"
				},
				{
					"name": "V"
				}
			],
			"signatures": [
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "delete",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "get",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "V"
				},
				{
					"kind": "method",
					"name": "has",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "set",
					"parameters": [
						{
							"name": "key",
							"type": "K"
						},
						{
							"name": "value",
							"type": "V"
						}
					],
					"returns": {
						"kind": "reference",
						"type": "WeakMap",
						"arguments": [
							"K",
							"V"
						]
					}
				}
			]
		},
		{
			"kind": "variable",
			"name": "WeakMap",
			"type": {
				"kind": "constructor",
				"typeParameters": [
					{
						"name": "K"
					},
					{
						"name": "V"
					}
				],
				"returns": {
					"kind": "reference",
					"type": "WeakMap",
					"arguments": [
						"K",
						"V"
					]
				}
			}
		},
		{
			"kind": "interface",
			"name": "Set",
			"typeParameters": [
				{
					"name": "T"
				}
			],
			"signatures": [
				{
					"kind": "method",
					"name": "add",
					"parameters": [
						{
							"name": "value",
							"type": "T"
						}
					],
					"returns": {
						"kind": "reference",
						"type": "Set",
						"arguments": [
							"T"
						]
					}
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "delete",
					"parameters": [
						{
							"name": "value",
							"type": "T"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "forEach",
					"parameters": [
						{
							"name": "callbackfn",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "value",
										"type": "T"
									},
									{
										"name": "index",
										"type": "T"
									},
									{
										"name": "set",
										"type": {
											"kind": "reference",
											"type": "Set",
											"arguments": [
												"T"
											]
										}
									}
								],
								"returns": "void"
							}
						},
						{
							"name": "thisArg",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "has",
					"parameters": [
						{
							"name": "value",
							"type": "T"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Set",
			"type": {
				"kind": "constructor",
				"typeParameters": [
					{
						"name": "T"
					}
				],
				"returns": {
					"kind": "reference",
					"type": "Set",
					"arguments": [
						"T"
					]
				}
			}
		},
		{
			"kind": "module",
			"name": "Intl",
			"declares": [
				{
					"kind": "interface",
					"name": "CollatorOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "usage",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "localeMatcher",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "numeric",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "caseFirst",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "sensitivity",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "ignorePunctuation",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ResolvedCollatorOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "locale",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "usage",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "sensitivity",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "ignorePunctuation",
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "collation",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "caseFirst",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "numeric",
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Collator",
					"signatures": [
						{
							"kind": "method",
							"name": "compare",
							"parameters": [
								{
									"name": "x",
									"type": "string"
								},
								{
									"name": "y",
									"type": "string"
								}
							],
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "resolvedOptions",
							"returns": "ResolvedCollatorOptions"
						}
					]
				},
				{
					"kind": "variable",
					"name": "Collator",
					"type": {
						"kind": "object",
						"signatures": [
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locales",
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locale",
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "CollatorOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							}
						]
					}
				},
				{
					"kind": "interface",
					"name": "NumberFormatOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "localeMatcher",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "style",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "currency",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "currencyDisplay",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "useGrouping",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ResolvedNumberFormatOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "locale",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "numberingSystem",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "style",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "currency",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "currencyDisplay",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "minimumintegerDigits",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "minimumFractionDigits",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "maximumFractionDigits",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "minimumSignificantDigits",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "maximumSignificantDigits",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "useGrouping",
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "NumberFormat",
					"signatures": [
						{
							"kind": "method",
							"name": "format",
							"parameters": [
								{
									"name": "value",
									"type": "number"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "resolvedOptions",
							"returns": "ResolvedNumberFormatOptions"
						}
					]
				},
				{
					"kind": "variable",
					"name": "NumberFormat",
					"type": {
						"kind": "object",
						"signatures": [
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locales",
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locale",
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "NumberFormatOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							}
						]
					}
				},
				{
					"kind": "interface",
					"name": "DateTimeFormatOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "localeMatcher",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "weekday",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "era",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "year",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "month",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "day",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hour",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "minute",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "second",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "timeZoneName",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "formatMatcher",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hour12",
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ResolvedDateTimeFormatOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "locale",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "calendar",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "numberingSystem",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "timeZone",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hour12",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "weekday",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "era",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "year",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "month",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "day",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hour",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "minute",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "second",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "timeZoneName",
							"optional": true,
							"type": "string"
						}
					]
				},
				{
					"kind": "interface",
					"name": "DateTimeFormat",
					"signatures": [
						{
							"kind": "method",
							"name": "format",
							"parameters": [
								{
									"name": "date",
									"type": "number"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "resolvedOptions",
							"returns": "ResolvedDateTimeFormatOptions"
						}
					]
				},
				{
					"kind": "variable",
					"name": "DateTimeFormat",
					"type": {
						"kind": "object",
						"signatures": [
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "call",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locales",
										"optional": true,
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "constructor",
								"parameters": [
									{
										"name": "locale",
										"optional": true,
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": "Collator"
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locales",
										"type": {
											"kind": "array",
											"type": "string"
										}
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							},
							{
								"kind": "method",
								"name": "supportedLocalesOf",
								"parameters": [
									{
										"name": "locale",
										"type": "string"
									},
									{
										"name": "options",
										"optional": true,
										"type": "DateTimeFormatOptions"
									}
								],
								"returns": {
									"kind": "array",
									"type": "string"
								}
							}
						]
					}
				}
			]
		},
		{
			"kind": "interface",
			"name": "String",
			"signatures": [
				{
					"kind": "method",
					"name": "localeCompare",
					"description": "Determines whether two strings are equivalent in the current locale.",
					"parameters": [
						{
							"name": "that",
							"description": "String to compare to target string",
							"type": "string"
						},
						{
							"name": "locales",
							"description": "An array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.",
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",
							"optional": true,
							"type": "Intl.CollatorOptions"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "localeCompare",
					"description": "Determines whether two strings are equivalent in the current locale.",
					"parameters": [
						{
							"name": "that",
							"description": "String to compare to target string",
							"type": "string"
						},
						{
							"name": "locale",
							"description": "Locale tag. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.",
							"type": "string"
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",
							"optional": true,
							"type": "Intl.CollatorOptions"
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Number",
			"signatures": [
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Converts a number to a string by using the current or specified locale.",
					"parameters": [
						{
							"name": "locales",
							"description": "An array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options.",
							"optional": true,
							"type": "Intl.NumberFormatOptions"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Converts a number to a string by using the current or specified locale.",
					"parameters": [
						{
							"name": "locale",
							"description": "Locale tag. If you omit this parameter, the default locale of the JavaScript runtime is used.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options.",
							"optional": true,
							"type": "Intl.NumberFormatOptions"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Date",
			"signatures": [
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Converts a date to a string by using the current or specified locale.",
					"parameters": [
						{
							"name": "locales",
							"description": "An array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options.",
							"optional": true,
							"type": "Intl.DateTimeFormatOptions"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toLocaleString",
					"description": "Converts a date to a string by using the current or specified locale.",
					"parameters": [
						{
							"name": "locale",
							"description": "Locale tag. If you omit this parameter, the default locale of the JavaScript runtime is used.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "options",
							"description": "An object that contains one or more properties that specify comparison options.",
							"optional": true,
							"type": "Intl.DateTimeFormatOptions"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "PositionOptions",
			"signatures": [
				{
					"kind": "property",
					"name": "enableHighAccuracy",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "timeout",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "maximumAge",
					"optional": true,
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "ObjectURLOptions",
			"signatures": [
				{
					"kind": "property",
					"name": "oneTimeOnly",
					"optional": true,
					"type": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "StoreExceptionsInformation",
			"extends": [
				"ExceptionInformation"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "siteName",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "explanationString",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "detailURI",
					"optional": true,
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "StoreSiteSpecificExceptionsInformation",
			"extends": [
				"StoreExceptionsInformation"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "arrayOfDomainStrings",
					"optional": true,
					"type": {
						"kind": "array",
						"type": "string"
					}
				}
			]
		},
		{
			"kind": "interface",
			"name": "ConfirmSiteSpecificExceptionsInformation",
			"extends": [
				"ExceptionInformation"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "arrayOfDomainStrings",
					"optional": true,
					"type": {
						"kind": "array",
						"type": "string"
					}
				}
			]
		},
		{
			"kind": "interface",
			"name": "AlgorithmParameters"
		},
		{
			"kind": "interface",
			"name": "MutationObserverInit",
			"signatures": [
				{
					"kind": "property",
					"name": "childList",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "attributes",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "characterData",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "subtree",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "attributeOldValue",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "characterDataOldValue",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "attributeFilter",
					"optional": true,
					"type": {
						"kind": "array",
						"type": "string"
					}
				}
			]
		},
		{
			"kind": "interface",
			"name": "PointerEventInit",
			"extends": [
				"MouseEventInit"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "pointerId",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "width",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pressure",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "tiltX",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "tiltY",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pointerType",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "isPrimary",
					"optional": true,
					"type": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "ExceptionInformation",
			"signatures": [
				{
					"kind": "property",
					"name": "domain",
					"optional": true,
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DeviceAccelerationDict",
			"signatures": [
				{
					"kind": "property",
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "z",
					"optional": true,
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MsZoomToOptions",
			"signatures": [
				{
					"kind": "property",
					"name": "contentX",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "contentY",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "viewportX",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "viewportY",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scaleFactor",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "animate",
					"optional": true,
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DeviceRotationRateDict",
			"signatures": [
				{
					"kind": "property",
					"name": "alpha",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "beta",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "gamma",
					"optional": true,
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Algorithm",
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "params",
					"optional": true,
					"type": "AlgorithmParameters"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MouseEventInit",
			"signatures": [
				{
					"kind": "property",
					"name": "bubbles",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "cancelable",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "view",
					"optional": true,
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "detail",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenX",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenY",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientX",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientY",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ctrlKey",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "shiftKey",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "altKey",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "metaKey",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "button",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "buttons",
					"optional": true,
					"type": "number"
				},
				{
					"kind": "property",
					"name": "relatedTarget",
					"optional": true,
					"type": "EventTarget"
				}
			]
		},
		{
			"kind": "interface",
			"name": "WebGLContextAttributes",
			"signatures": [
				{
					"kind": "property",
					"name": "alpha",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "depth",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "stencil",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "antialias",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "premultipliedAlpha",
					"optional": true,
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "preserveDrawingBuffer",
					"optional": true,
					"type": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "NodeListOf",
			"typeParameters": [
				{
					"name": "TNode",
					"constraint": "Node"
				}
			],
			"extends": [
				"NodeList"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "TNode"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "TNode"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLElement",
			"extends": [
				"Element",
				"ElementCSSInlineStyle",
				"MSEventAttachmentTarget",
				"MSNodeExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "hidden",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onmouseleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforecut",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onkeydown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onkeyup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onreset",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onhelp",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "className",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onfocusin",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onseeked",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "recordNumber",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "title",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "parentTextEdit",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "outerHTML",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "ondurationchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "offsetHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "all",
					"type": "HTMLCollection"
				},
				{
					"kind": "property",
					"name": "onblur",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "dir",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onemptied",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onseeking",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncanplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondatasetchanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onrowsdelete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "sourceIndex",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onlosecapture",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncontrolselect",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onsubmit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "behaviorUrns",
					"type": "MSBehaviorUrnsCollection"
				},
				{
					"kind": "property",
					"name": "scopeName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "id",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onlayoutcomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "uniqueID",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onbeforeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncanplaythrough",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforeupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfilterchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "offsetParent",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "ondatasetcomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onsuspend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "innerText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onerrorupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "parentElement",
					"type": "HTMLElement"
				},
				{
					"kind": "property",
					"name": "onmousewheel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseWheelEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onvolumechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncellchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onrowexit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onrowsinserted",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpropertychange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "filters",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "children",
					"type": "HTMLCollection"
				},
				{
					"kind": "property",
					"name": "ondragend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforepaste",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "offsetTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmouseup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforecopy",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondrag",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "innerHTML",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmouseover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "lang",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "uniqueNumber",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onpause",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "tagUrn",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmousedown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onwaiting",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onresizestart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "offsetLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "isTextEdit",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "isDisabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onpaste",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "canHaveHTML",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onmoveend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "language",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onstalled",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmousemove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "style",
					"type": "MSStyleCSSProperties"
				},
				{
					"kind": "property",
					"name": "isContentEditable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onbeforeeditfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onratechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "contentEditable",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "tabIndex",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "document",
					"type": "Document"
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondblclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncontextmenu",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadedmetadata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onafterupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onresizeend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onplaying",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "isMultiLine",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onfocusout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondataavailable",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "hideFocus",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onreadystatechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onkeypress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadeddata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforedeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "outerText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "disabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "accessKey",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmovestart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onselectstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ontimeupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onresize",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncut",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onselect",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondrop",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "offsetWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "oncopy",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onended",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onscroll",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onrowenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "canHaveChildren",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "oninput",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmscontentzoom",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncuechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "spellcheck",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "classList",
					"type": "DOMTokenList"
				},
				{
					"kind": "property",
					"name": "onmsmanipulationstatechanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "draggable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "dataset",
					"type": "DOMStringMap"
				},
				{
					"kind": "method",
					"name": "dragDrop",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "scrollIntoView",
					"parameters": [
						{
							"name": "top",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addFilter",
					"parameters": [
						{
							"name": "filter",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setCapture",
					"parameters": [
						{
							"name": "containerCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "focus",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getAdjacentText",
					"parameters": [
						{
							"name": "where",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "insertAdjacentText",
					"parameters": [
						{
							"name": "where",
							"type": "string"
						},
						{
							"name": "text",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getElementsByClassName",
					"parameters": [
						{
							"name": "classNames",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "setActive",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeFilter",
					"parameters": [
						{
							"name": "filter",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blur",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clearAttributes",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "releaseCapture",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createControlRange",
					"returns": "ControlRangeCollection"
				},
				{
					"kind": "method",
					"name": "removeBehavior",
					"parameters": [
						{
							"name": "cookie",
							"type": "number"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "contains",
					"parameters": [
						{
							"name": "child",
							"type": "HTMLElement"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "click",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "insertAdjacentElement",
					"parameters": [
						{
							"name": "position",
							"type": "string"
						},
						{
							"name": "insertedElement",
							"type": "Element"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "mergeAttributes",
					"parameters": [
						{
							"name": "source",
							"type": "HTMLElement"
						},
						{
							"name": "preserveIdentity",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "replaceAdjacentText",
					"parameters": [
						{
							"name": "where",
							"type": "string"
						},
						{
							"name": "newText",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "applyElement",
					"parameters": [
						{
							"name": "apply",
							"type": "Element"
						},
						{
							"name": "where",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "addBehavior",
					"parameters": [
						{
							"name": "bstrUrl",
							"type": "string"
						},
						{
							"name": "factory",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "insertAdjacentHTML",
					"parameters": [
						{
							"name": "where",
							"type": "string"
						},
						{
							"name": "html",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msGetInputContext",
					"returns": "MSInputMethodContext"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Document",
			"extends": [
				"Node",
				"NodeSelector",
				"MSEventAttachmentTarget",
				"DocumentEvent",
				"MSResourceMetadata",
				"MSNodeExtensions",
				"MSDocumentExtensions",
				"GlobalEventHandlers"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "documentElement",
					"type": "HTMLElement",
					"description": "Gets a reference to the root node of the document."
				},
				{
					"kind": "property",
					"name": "compatible",
					"type": "MSCompatibleInfoCollection",
					"description": "Retrieves the collection of user agents and versions declared in the X-UA-Compatible"
				},
				{
					"kind": "property",
					"name": "onkeydown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user presses a key."
				},
				{
					"kind": "property",
					"name": "onkeyup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The keyboard event",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user releases a key."
				},
				{
					"kind": "property",
					"name": "implementation",
					"type": "DOMImplementation",
					"description": "Gets the implementation object of the current document."
				},
				{
					"kind": "property",
					"name": "onreset",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user resets a form."
				},
				{
					"kind": "property",
					"name": "scripts",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all script objects in the document."
				},
				{
					"kind": "property",
					"name": "onhelp",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user presses the F1 key while the browser is the active window."
				},
				{
					"kind": "property",
					"name": "ondragleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation."
				},
				{
					"kind": "property",
					"name": "charset",
					"type": "string",
					"description": "Gets or sets the character set used to encode the object."
				},
				{
					"kind": "property",
					"name": "onfocusin",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires for an element just prior to setting focus on that element."
				},
				{
					"kind": "property",
					"name": "vlinkColor",
					"type": "string",
					"description": "Sets or gets the color of the links that the user has visited."
				},
				{
					"kind": "property",
					"name": "onseeked",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the seek operation ends."
				},
				{
					"kind": "property",
					"name": "security",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "title",
					"type": "string",
					"description": "Contains the title of the document."
				},
				{
					"kind": "property",
					"name": "namespaces",
					"type": "MSNamespaceInfoCollection",
					"description": "Retrieves a collection of namespace objects."
				},
				{
					"kind": "property",
					"name": "defaultCharset",
					"type": "string",
					"description": "Gets the default character set from the current regional language settings."
				},
				{
					"kind": "property",
					"name": "embeds",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all embed objects in the document."
				},
				{
					"kind": "property",
					"name": "styleSheets",
					"type": "StyleSheetList",
					"description": "Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document."
				},
				{
					"kind": "property",
					"name": "frames",
					"type": "Window",
					"description": "Retrieves a collection of all window objects defined by the given document or defined by the document associated with the given window."
				},
				{
					"kind": "property",
					"name": "ondurationchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the duration attribute is updated."
				},
				{
					"kind": "property",
					"name": "all",
					"type": "HTMLCollection",
					"description": "Returns a reference to the collection of elements contained by the object."
				},
				{
					"kind": "property",
					"name": "forms",
					"type": "HTMLCollection",
					"description": "Retrieves a collection, in source order, of all form objects in the document."
				},
				{
					"kind": "property",
					"name": "onblur",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the object loses the input focus."
				},
				{
					"kind": "property",
					"name": "dir",
					"type": "string",
					"description": "Sets or retrieves a value that indicates the reading order of the object."
				},
				{
					"kind": "property",
					"name": "onemptied",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the media element is reset to its initial state."
				},
				{
					"kind": "property",
					"name": "designMode",
					"type": "string",
					"description": "Sets or gets a value that indicates whether the document can be edited."
				},
				{
					"kind": "property",
					"name": "onseeking",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the current playback position is moved."
				},
				{
					"kind": "property",
					"name": "ondeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the activeElement is changed from the current object to another object in the parent document."
				},
				{
					"kind": "property",
					"name": "oncanplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The UI Event",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when playback is possible, but would require further buffering."
				},
				{
					"kind": "property",
					"name": "ondatasetchanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the data set exposed by a data source object changes."
				},
				{
					"kind": "property",
					"name": "onrowsdelete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires when rows are about to be deleted from the recordset."
				},
				{
					"kind": "property",
					"name": "Script",
					"type": "MSScriptHost"
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when Internet Explorer begins looking for media data."
				},
				{
					"kind": "property",
					"name": "URLUnencoded",
					"type": "string",
					"description": "Gets the URL for the document, stripped of any character encoding."
				},
				{
					"kind": "property",
					"name": "defaultView",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "oncontrolselect",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user is about to make a control selection of the object."
				},
				{
					"kind": "property",
					"name": "ondragenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the target element when the user drags the object to a valid drop target."
				},
				{
					"kind": "property",
					"name": "onsubmit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The drag event.",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "inputEncoding",
					"type": "string",
					"description": "Returns the character encoding used to create the webpage that is loaded into the document object."
				},
				{
					"kind": "property",
					"name": "activeElement",
					"type": "Element",
					"description": "Gets the object that has the focus when the parent document has focus."
				},
				{
					"kind": "property",
					"name": "onchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the contents of the object or selection have changed."
				},
				{
					"kind": "property",
					"name": "links",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all a objects that specify the href property and all area objects in the document."
				},
				{
					"kind": "property",
					"name": "uniqueID",
					"type": "string",
					"description": "Retrieves an autogenerated, unique identifier for the object."
				},
				{
					"kind": "property",
					"name": "URL",
					"type": "string",
					"description": "Sets or gets the URL for the current document."
				},
				{
					"kind": "property",
					"name": "onbeforeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires immediately before the object is set as the active element."
				},
				{
					"kind": "property",
					"name": "head",
					"type": "HTMLHeadElement"
				},
				{
					"kind": "property",
					"name": "cookie",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "xmlEncoding",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "oncanplaythrough",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "documentMode",
					"type": "number",
					"description": "Retrieves the document compatibility mode of the document."
				},
				{
					"kind": "property",
					"name": "characterSet",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "anchors",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order."
				},
				{
					"kind": "property",
					"name": "onbeforeupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondatasetcomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires to indicate that all data is available from the data source object."
				},
				{
					"kind": "property",
					"name": "plugins",
					"type": "HTMLCollection"
				},
				{
					"kind": "property",
					"name": "onsuspend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs if the load operation has been intentionally halted."
				},
				{
					"kind": "property",
					"name": "rootElement",
					"type": "SVGSVGElement",
					"description": "Gets the root svg element in the document hierarchy."
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "string",
					"description": "Retrieves a value that indicates the current state of the object."
				},
				{
					"kind": "property",
					"name": "referrer",
					"type": "string",
					"description": "Gets the URL of the location that referred the user to the current page."
				},
				{
					"kind": "property",
					"name": "alinkColor",
					"type": "string",
					"description": "Sets or gets the color of all active links in the document."
				},
				{
					"kind": "property",
					"name": "onerrorupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires on a databound object when an error occurs while updating the associated data in the data source object."
				},
				{
					"kind": "property",
					"name": "parentWindow",
					"type": "Window",
					"description": "Gets a reference to the container object of the window."
				},
				{
					"kind": "property",
					"name": "onmouseout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user moves the mouse pointer outside the boundaries of the object."
				},
				{
					"kind": "property",
					"name": "onmsthumbnailclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "MSSiteModeEvent"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode."
				},
				{
					"kind": "property",
					"name": "onmousewheel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseWheelEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the wheel button is rotated."
				},
				{
					"kind": "property",
					"name": "onvolumechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the volume is changed, or playback is muted or unmuted."
				},
				{
					"kind": "property",
					"name": "oncellchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires when data changes in the data provider."
				},
				{
					"kind": "property",
					"name": "onrowexit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires just before the data source control changes the current row in the object."
				},
				{
					"kind": "property",
					"name": "onrowsinserted",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires just after new rows are inserted in the current recordset."
				},
				{
					"kind": "property",
					"name": "xmlVersion",
					"type": "string",
					"description": "Gets or sets the version attribute specified in the declaration of an XML document."
				},
				{
					"kind": "property",
					"name": "msCapsLockWarningOff",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onpropertychange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires when a property changes on the object."
				},
				{
					"kind": "property",
					"name": "ondragend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the source object when the user releases the mouse at the close of a drag operation."
				},
				{
					"kind": "property",
					"name": "doctype",
					"type": "DocumentType",
					"description": "Gets an object representing the document type declaration associated with the current document."
				},
				{
					"kind": "property",
					"name": "ondragover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the target element continuously while the user drags the object over a valid drop target."
				},
				{
					"kind": "property",
					"name": "bgColor",
					"type": "string",
					"description": "Deprecated. Sets or retrieves a value that indicates the background color behind the object."
				},
				{
					"kind": "property",
					"name": "ondragstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the source object when the user starts to drag a text selection or selected object."
				},
				{
					"kind": "property",
					"name": "onmouseup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user releases a mouse button while the mouse is over the object."
				},
				{
					"kind": "property",
					"name": "ondrag",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires on the source object continuously during a drag operation."
				},
				{
					"kind": "property",
					"name": "onmouseover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user moves the mouse pointer into the object."
				},
				{
					"kind": "property",
					"name": "linkColor",
					"type": "string",
					"description": "Sets or gets the color of the document links."
				},
				{
					"kind": "property",
					"name": "onpause",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when playback is paused."
				},
				{
					"kind": "property",
					"name": "onmousedown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user clicks the object with either mouse button."
				},
				{
					"kind": "property",
					"name": "onclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user clicks the left mouse button on the object"
				},
				{
					"kind": "property",
					"name": "onwaiting",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when playback stops because the next frame of a video resource is not available."
				},
				{
					"kind": "property",
					"name": "onstop",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user clicks the Stop button or leaves the Web page."
				},
				{
					"kind": "property",
					"name": "onmssitemodejumplistitemremoved",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSSiteModeEvent"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when an item is removed from a Jump List of a webpage running in Site Mode."
				},
				{
					"kind": "property",
					"name": "applets",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all applet objects in the document."
				},
				{
					"kind": "property",
					"name": "body",
					"type": "HTMLElement",
					"description": "Specifies the beginning and end of the document body."
				},
				{
					"kind": "property",
					"name": "domain",
					"type": "string",
					"description": "Sets or gets the security domain of the document."
				},
				{
					"kind": "property",
					"name": "xmlStandalone",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "selection",
					"type": "MSSelection",
					"description": "Represents the active selection, which is a highlighted block of text or other elements in the document that a user or a script can carry out some action on."
				},
				{
					"kind": "property",
					"name": "onstalled",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the download has stopped."
				},
				{
					"kind": "property",
					"name": "onmousemove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user moves the mouse over the object."
				},
				{
					"kind": "property",
					"name": "onbeforeeditfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires before an object contained in an editable element enters a UI-activated state or when an editable container object is control selected."
				},
				{
					"kind": "property",
					"name": "onratechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the playback rate is increased or decreased."
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					},
					"description": "Occurs to indicate progress while downloading media data."
				},
				{
					"kind": "property",
					"name": "ondblclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user double-clicks the object."
				},
				{
					"kind": "property",
					"name": "oncontextmenu",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user clicks the right mouse button in the client area, opening the context menu."
				},
				{
					"kind": "property",
					"name": "onloadedmetadata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The mouse event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the duration and dimensions of the media have been determined."
				},
				{
					"kind": "property",
					"name": "media",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when an error occurs during object loading."
				},
				{
					"kind": "property",
					"name": "onplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the play method is requested."
				},
				{
					"kind": "property",
					"name": "onafterupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onplaying",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the audio or video has started playing."
				},
				{
					"kind": "property",
					"name": "images",
					"type": "HTMLCollection",
					"description": "Retrieves a collection, in source order, of img objects in the document."
				},
				{
					"kind": "property",
					"name": "location",
					"type": "Location",
					"description": "Contains information about the current URL."
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user aborts the download."
				},
				{
					"kind": "property",
					"name": "onfocusout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires for the current element with focus immediately after moving focus to another element."
				},
				{
					"kind": "property",
					"name": "onselectionchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the selection state of a document changes."
				},
				{
					"kind": "property",
					"name": "onstoragecommit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "StorageEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when a local DOM Storage area is written to disk."
				},
				{
					"kind": "property",
					"name": "ondataavailable",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires periodically as data arrives from data source objects that asynchronously transmit their data."
				},
				{
					"kind": "property",
					"name": "onreadystatechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the state of the object has changed."
				},
				{
					"kind": "property",
					"name": "lastModified",
					"type": "string",
					"description": "Gets the date that the page was last modified, if the page supplies one."
				},
				{
					"kind": "property",
					"name": "onkeypress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user presses an alphanumeric key."
				},
				{
					"kind": "property",
					"name": "onloadeddata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when media data is loaded at the current playback position."
				},
				{
					"kind": "property",
					"name": "onbeforedeactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires immediately before the activeElement is changed from the current object to another object in the parent document."
				},
				{
					"kind": "property",
					"name": "onactivate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the object is set as the active element."
				},
				{
					"kind": "property",
					"name": "onselectstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the object receives focus."
				},
				{
					"kind": "property",
					"name": "fgColor",
					"type": "string",
					"description": "Sets or gets the foreground (text) color of the document."
				},
				{
					"kind": "property",
					"name": "ontimeupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs to indicate the current playback position."
				},
				{
					"kind": "property",
					"name": "onselect",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the current selection changes."
				},
				{
					"kind": "property",
					"name": "ondrop",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onended",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Occurs when the end of playback is reached."
				},
				{
					"kind": "property",
					"name": "compatMode",
					"type": "string",
					"description": "Gets a value that indicates whether standards-compliant mode is switched on for the object."
				},
				{
					"kind": "property",
					"name": "onscroll",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the user repositions the scroll box in the scroll bar on the object."
				},
				{
					"kind": "property",
					"name": "onrowenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					},
					"description": "Fires to indicate that the current row has changed in the data source and new data values are available on the object."
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Fires immediately after the browser loads the object."
				},
				{
					"kind": "property",
					"name": "oninput",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"description": "The event.",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerdown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msHidden",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "msVisibilityState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmsgesturedoubletap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "visibilityState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmsmanipulationstatechanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerhover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmscontentzoom",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSEventObj"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointermove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturehold",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturestart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointercancel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgestureend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturetap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsinertiastart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msCSSOMElementFloatMetrics",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onmspointerover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "hidden",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onmspointerup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msFullscreenEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onmsfullscreenerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msFullscreenElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "onmsfullscreenchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "getElementById",
					"description": "Returns a reference to the first object with the specified value of the ID or NAME attribute.",
					"parameters": [
						{
							"name": "elementId",
							"description": "String that specifies the ID value. Case-insensitive.",
							"type": "string"
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "queryCommandValue",
					"description": "Returns the current value of the document, range, or current selection for the given command.",
					"parameters": [
						{
							"name": "commandId",
							"description": "String that specifies a command identifier.",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "adoptNode",
					"parameters": [
						{
							"name": "source",
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "queryCommandIndeterm",
					"description": "Returns a Boolean value that indicates whether the specified command is in the indeterminate state.",
					"parameters": [
						{
							"name": "commandId",
							"description": "String that specifies a command identifier.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getElementsByTagNameNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "createProcessingInstruction",
					"parameters": [
						{
							"name": "target",
							"type": "string"
						},
						{
							"name": "data",
							"type": "string"
						}
					],
					"returns": "ProcessingInstruction"
				},
				{
					"kind": "method",
					"name": "execCommand",
					"description": "Executes a command on the current document, current selection, or the given range.",
					"parameters": [
						{
							"name": "commandId",
							"description": "String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.",
							"type": "string"
						},
						{
							"name": "showUI",
							"description": "Display the user interface, defaults to false.",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "value",
							"description": "Value to assign.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "elementFromPoint",
					"description": "Returns the element for the specified x coordinate and the specified y coordinate.",
					"parameters": [
						{
							"name": "x",
							"description": "The x-offset",
							"type": "number"
						},
						{
							"name": "y",
							"description": "The y-offset",
							"type": "number"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "createCDATASection",
					"parameters": [
						{
							"name": "data",
							"type": "string"
						}
					],
					"returns": "CDATASection"
				},
				{
					"kind": "method",
					"name": "queryCommandText",
					"description": "Retrieves the string associated with a command.",
					"parameters": [
						{
							"name": "commandId",
							"description": "String that contains the identifier of a command. This can be any command identifier given in the list of Command Identifiers.",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "write",
					"description": "Writes one or more HTML expressions to a document in the specified window.",
					"parameters": [
						{
							"name": "content",
							"description": "Specifies the text and HTML tags to write.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "updateSettings",
					"description": "Allows updating the print settings for the page.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createElement",
					"description": "Creates an instance of the element for the specified tag.",
					"parameters": [
						{
							"name": "tagName",
							"description": "The name of an element.",
							"type": "\"a\""
						}
					],
					"returns": "HTMLAnchorElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"abbr\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"acronym\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"address\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"applet\""
						}
					],
					"returns": "HTMLAppletElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"area\""
						}
					],
					"returns": "HTMLAreaElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"article\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"aside\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"audio\""
						}
					],
					"returns": "HTMLAudioElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"b\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"base\""
						}
					],
					"returns": "HTMLBaseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"basefont\""
						}
					],
					"returns": "HTMLBaseFontElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"bdo\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"bgsound\""
						}
					],
					"returns": "HTMLBGSoundElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"big\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"blockquote\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"body\""
						}
					],
					"returns": "HTMLBodyElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"br\""
						}
					],
					"returns": "HTMLBRElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"button\""
						}
					],
					"returns": "HTMLButtonElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"canvas\""
						}
					],
					"returns": "HTMLCanvasElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"caption\""
						}
					],
					"returns": "HTMLTableCaptionElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"center\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"cite\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"code\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"col\""
						}
					],
					"returns": "HTMLTableColElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"colgroup\""
						}
					],
					"returns": "HTMLTableColElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"datalist\""
						}
					],
					"returns": "HTMLDataListElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"dd\""
						}
					],
					"returns": "HTMLDDElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"del\""
						}
					],
					"returns": "HTMLModElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"dfn\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"dir\""
						}
					],
					"returns": "HTMLDirectoryElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"div\""
						}
					],
					"returns": "HTMLDivElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"dl\""
						}
					],
					"returns": "HTMLDListElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"dt\""
						}
					],
					"returns": "HTMLDTElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"em\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"embed\""
						}
					],
					"returns": "HTMLEmbedElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"fieldset\""
						}
					],
					"returns": "HTMLFieldSetElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"figcaption\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"figure\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"font\""
						}
					],
					"returns": "HTMLFontElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"footer\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"form\""
						}
					],
					"returns": "HTMLFormElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"frame\""
						}
					],
					"returns": "HTMLFrameElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"frameset\""
						}
					],
					"returns": "HTMLFrameSetElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h1\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h2\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h3\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h4\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h5\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"h6\""
						}
					],
					"returns": "HTMLHeadingElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"head\""
						}
					],
					"returns": "HTMLHeadElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"header\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"hgroup\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"hr\""
						}
					],
					"returns": "HTMLHRElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"html\""
						}
					],
					"returns": "HTMLHtmlElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"i\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"iframe\""
						}
					],
					"returns": "HTMLIFrameElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"img\""
						}
					],
					"returns": "HTMLImageElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"input\""
						}
					],
					"returns": "HTMLInputElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"ins\""
						}
					],
					"returns": "HTMLModElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"isindex\""
						}
					],
					"returns": "HTMLIsIndexElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"kbd\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"keygen\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"label\""
						}
					],
					"returns": "HTMLLabelElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"legend\""
						}
					],
					"returns": "HTMLLegendElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"li\""
						}
					],
					"returns": "HTMLLIElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"link\""
						}
					],
					"returns": "HTMLLinkElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"listing\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"map\""
						}
					],
					"returns": "HTMLMapElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"mark\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"marquee\""
						}
					],
					"returns": "HTMLMarqueeElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"menu\""
						}
					],
					"returns": "HTMLMenuElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"meta\""
						}
					],
					"returns": "HTMLMetaElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"nav\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"nextid\""
						}
					],
					"returns": "HTMLNextIdElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"nobr\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"noframes\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"noscript\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"object\""
						}
					],
					"returns": "HTMLObjectElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"ol\""
						}
					],
					"returns": "HTMLOListElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"optgroup\""
						}
					],
					"returns": "HTMLOptGroupElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"option\""
						}
					],
					"returns": "HTMLOptionElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"p\""
						}
					],
					"returns": "HTMLParagraphElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"param\""
						}
					],
					"returns": "HTMLParamElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"plaintext\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"pre\""
						}
					],
					"returns": "HTMLPreElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"progress\""
						}
					],
					"returns": "HTMLProgressElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"q\""
						}
					],
					"returns": "HTMLQuoteElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"rt\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"ruby\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"s\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"samp\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"script\""
						}
					],
					"returns": "HTMLScriptElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"section\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"select\""
						}
					],
					"returns": "HTMLSelectElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"small\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"SOURCE\""
						}
					],
					"returns": "HTMLSourceElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"span\""
						}
					],
					"returns": "HTMLSpanElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"strike\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"strong\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"style\""
						}
					],
					"returns": "HTMLStyleElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"sub\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"sup\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"table\""
						}
					],
					"returns": "HTMLTableElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"tbody\""
						}
					],
					"returns": "HTMLTableSectionElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"td\""
						}
					],
					"returns": "HTMLTableDataCellElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"textarea\""
						}
					],
					"returns": "HTMLTextAreaElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"tfoot\""
						}
					],
					"returns": "HTMLTableSectionElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"th\""
						}
					],
					"returns": "HTMLTableHeaderCellElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"thead\""
						}
					],
					"returns": "HTMLTableSectionElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"title\""
						}
					],
					"returns": "HTMLTitleElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"tr\""
						}
					],
					"returns": "HTMLTableRowElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"track\""
						}
					],
					"returns": "HTMLTrackElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"tt\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"u\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"ul\""
						}
					],
					"returns": "HTMLUListElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"var\""
						}
					],
					"returns": "HTMLPhraseElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"video\""
						}
					],
					"returns": "HTMLVideoElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"wbr\""
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"x-ms-webview\""
						}
					],
					"returns": "MSHTMLWebViewElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "\"xmp\""
						}
					],
					"returns": "HTMLBlockElement"
				},
				{
					"kind": "method",
					"name": "createElement",
					"parameters": [
						{
							"name": "tagName",
							"type": "string"
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "releaseCapture",
					"description": "Removes mouse capture from the object in the current document.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeln",
					"description": "Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.",
					"parameters": [
						{
							"name": "content",
							"description": "The text and HTML tags to write.",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createElementNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "qualifiedName",
							"type": "string"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "open",
					"description": "Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.",
					"parameters": [
						{
							"name": "url",
							"description": "Specifies a MIME type for the document.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "name",
							"description": "Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "features",
							"description": "Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, \"fullscreen=yes, toolbar=yes\"). The following values are supported.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "replace",
							"description": "Specifies whether the existing entry for the document is replaced in the history list.",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "queryCommandSupported",
					"description": "Returns a Boolean value that indicates whether the current command is supported on the current range.",
					"parameters": [
						{
							"name": "commandId",
							"description": "Specifies a command identifier.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createTreeWalker",
					"description": "Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.",
					"parameters": [
						{
							"name": "root",
							"description": "The root element or node to start traversing on.",
							"type": "Node"
						},
						{
							"name": "whatToShow",
							"description": "The type of nodes or elements to appear in the node list. For more information, see whatToShow.",
							"type": "number"
						},
						{
							"name": "filter",
							"description": "A custom NodeFilter function to use.",
							"type": "NodeFilter"
						},
						{
							"name": "entityReferenceExpansion",
							"description": "A flag that specifies whether entity reference nodes are expanded.",
							"type": "boolean"
						}
					],
					"returns": "TreeWalker"
				},
				{
					"kind": "method",
					"name": "createAttributeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "qualifiedName",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "queryCommandEnabled",
					"description": "Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.",
					"parameters": [
						{
							"name": "commandId",
							"description": "Specifies a command identifier.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "focus",
					"description": "Causes the element to receive the focus and executes the code specified by the onfocus event.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "close",
					"description": "Closes an output stream and forces the sent data to display.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getElementsByClassName",
					"parameters": [
						{
							"name": "classNames",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "importNode",
					"parameters": [
						{
							"name": "importedNode",
							"type": "Node"
						},
						{
							"name": "deep",
							"type": "boolean"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "createRange",
					"description": "Returns an empty range object that has both of its boundary points positioned at the beginning of the document.",
					"returns": "Range"
				},
				{
					"kind": "method",
					"name": "fireEvent",
					"description": "Fires a specified event on the object.",
					"parameters": [
						{
							"name": "eventName",
							"description": "Specifies the name of the event to fire.",
							"type": "string"
						},
						{
							"name": "eventObj",
							"description": "Object that specifies the event object from which to obtain event object properties.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createComment",
					"description": "Creates a comment object with the specified data.",
					"parameters": [
						{
							"name": "data",
							"description": "Sets the comment object's data.",
							"type": "string"
						}
					],
					"returns": "Comment"
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"description": "Retrieves a collection of objects based on the specified element name.",
					"parameters": [
						{
							"name": "name",
							"description": "Specifies the name of an element.",
							"type": "\"a\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAnchorElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"abbr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"acronym\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"address\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"applet\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAppletElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"area\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAreaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"article\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"aside\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"audio\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAudioElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"b\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"base\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBaseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"basefont\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBaseFontElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"bdo\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"bgsound\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBGSoundElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"big\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"blockquote\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"body\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBodyElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"br\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBRElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"button\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLButtonElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"canvas\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLCanvasElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"caption\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableCaptionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"center\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"cite\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"code\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"col\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableColElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"colgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableColElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"datalist\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDataListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dd\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDDElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"del\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLModElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dfn\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dir\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDirectoryElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"div\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDivElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dl\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDTElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"em\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"embed\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLEmbedElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"fieldset\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFieldSetElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"figcaption\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"figure\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"font\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFontElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"footer\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"form\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFormElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"frame\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFrameElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"frameset\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFrameSetElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h1\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h2\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h3\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h4\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h5\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h6\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"head\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"header\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"hgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"hr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHRElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"html\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHtmlElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"i\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"iframe\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLIFrameElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"img\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLImageElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"input\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLInputElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ins\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLModElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"isindex\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLIsIndexElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"kbd\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"keygen\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"label\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLabelElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"legend\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLegendElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"li\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLIElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"link\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLinkElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"listing\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"map\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMapElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"mark\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"marquee\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMarqueeElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"menu\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMenuElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"meta\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMetaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nav\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nextid\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLNextIdElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nobr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"noframes\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"noscript\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"object\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLObjectElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ol\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"optgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOptGroupElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"option\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOptionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"p\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLParagraphElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"param\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLParamElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"plaintext\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"pre\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPreElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"progress\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLProgressElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"q\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLQuoteElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"rt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ruby\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"s\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"samp\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"script\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLScriptElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"section\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"select\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSelectElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"small\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"SOURCE\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSourceElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"span\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSpanElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"strike\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"strong\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"style\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLStyleElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"sub\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"sup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"table\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tbody\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"td\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableDataCellElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"textarea\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTextAreaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tfoot\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"th\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableHeaderCellElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"thead\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"title\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTitleElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableRowElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"track\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTrackElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"u\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ul\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLUListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"var\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"video\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLVideoElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"wbr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"x-ms-webview\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"MSHTMLWebViewElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"xmp\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "createDocumentFragment",
					"description": "Creates a new document.",
					"returns": "DocumentFragment"
				},
				{
					"kind": "method",
					"name": "createStyleSheet",
					"description": "Creates a style sheet for the document.",
					"parameters": [
						{
							"name": "href",
							"description": "Specifies how to add the style sheet to the document. If a file name is specified for the URL, the style information is added as a link object. If the URL contains style information, it is added to the style object.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "index",
							"description": "Specifies the index that indicates where the new style sheet is inserted in the styleSheets collection. The default is to insert the new style sheet at the end of the collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "CSSStyleSheet"
				},
				{
					"kind": "method",
					"name": "getElementsByName",
					"description": "Gets a collection of objects based on the value of the NAME or ID attribute.",
					"parameters": [
						{
							"name": "elementName",
							"description": "Gets a collection of objects based on the value of the NAME or ID attribute.",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "queryCommandState",
					"description": "Returns a Boolean value that indicates the current state of the command.",
					"parameters": [
						{
							"name": "commandId",
							"description": "String that specifies a command identifier.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "hasFocus",
					"description": "Gets a value indicating whether the object currently has focus.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "execCommandShowHelp",
					"description": "Displays help information for the given command identifier.",
					"parameters": [
						{
							"name": "commandId",
							"description": "Displays help information for the given command identifier.",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createAttribute",
					"description": "Creates an attribute object with a specified name.",
					"parameters": [
						{
							"name": "name",
							"description": "String that sets the attribute object's name.",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "createTextNode",
					"description": "Creates a text string from the specified value.",
					"parameters": [
						{
							"name": "data",
							"description": "String that specifies the nodeValue property of the text node.",
							"type": "string"
						}
					],
					"returns": "Text"
				},
				{
					"kind": "method",
					"name": "createNodeIterator",
					"description": "Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.",
					"parameters": [
						{
							"name": "root",
							"description": "The root element or node to start traversing on.",
							"type": "Node"
						},
						{
							"name": "whatToShow",
							"description": "The type of nodes or elements to appear in the node list",
							"type": "number"
						},
						{
							"name": "filter",
							"description": "A custom NodeFilter function to use. For more information, see filter. Use null for no filter.",
							"type": "NodeFilter"
						},
						{
							"name": "entityReferenceExpansion",
							"description": "A flag that specifies whether entity reference nodes are expanded.",
							"type": "boolean"
						}
					],
					"returns": "NodeIterator"
				},
				{
					"kind": "method",
					"name": "createEventObject",
					"description": "Generates an event object to pass event context information when you use the fireEvent method.",
					"parameters": [
						{
							"name": "eventObj",
							"description": "An object that specifies an existing event object on which to base the new object.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "MSEventObj"
				},
				{
					"kind": "method",
					"name": "getSelection",
					"description": "Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.",
					"returns": "Selection"
				},
				{
					"kind": "method",
					"name": "msElementsFromPoint",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "msElementsFromRect",
					"parameters": [
						{
							"name": "left",
							"type": "number"
						},
						{
							"name": "top",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msExitFullscreen",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msthumbnailclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSSiteModeEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mssitemodejumplistitemremoved\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSSiteModeEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectionchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"storagecommit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "StorageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msfullscreenerror\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msfullscreenchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Document",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Document"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Document"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Console",
			"signatures": [
				{
					"kind": "method",
					"name": "info",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "warn",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "error",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "log",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "profile",
					"parameters": [
						{
							"name": "reportName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "assert",
					"parameters": [
						{
							"name": "test",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "message",
							"optional": true,
							"type": "string"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msIsIndependentlyComposed",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "dir",
					"parameters": [
						{
							"name": "value",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "profileEnd",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "count",
					"parameters": [
						{
							"name": "countTitle",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "groupEnd",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "time",
					"parameters": [
						{
							"name": "timerName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "timeEnd",
					"parameters": [
						{
							"name": "timerName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "trace",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "group",
					"parameters": [
						{
							"name": "groupTitle",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "dirxml",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "debug",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "string"
						},
						{
							"name": "optionalParams",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "groupCollapsed",
					"parameters": [
						{
							"name": "groupTitle",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "select",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Console",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Console"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Console"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSEventObj",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "nextPage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "keyCode",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "toElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "returnValue",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "dataFld",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "dataTransfer",
					"type": "DataTransfer"
				},
				{
					"kind": "property",
					"name": "propertyName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "url",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "offsetX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "recordset",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "screenX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "buttonID",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "wheelDelta",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "reason",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "origin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "srcFilter",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "boundElements",
					"type": "HTMLCollection"
				},
				{
					"kind": "property",
					"name": "cancelBubble",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "altLeft",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "behaviorCookie",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "bookmarks",
					"type": "BookmarkCollection"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "repeat",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "srcElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "source",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "fromElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "offsetY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "behaviorPart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "qualifier",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "altKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "ctrlKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "clientY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "shiftKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "shiftLeft",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "contentOverflow",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "screenY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ctrlLeft",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "button",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "srcUrn",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clientX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "actionURL",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "getAttribute",
					"parameters": [
						{
							"name": "strAttributeName",
							"type": "string"
						},
						{
							"name": "lFlags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "setAttribute",
					"parameters": [
						{
							"name": "strAttributeName",
							"type": "string"
						},
						{
							"name": "AttributeValue",
							"type": "any"
						},
						{
							"name": "lFlags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeAttribute",
					"parameters": [
						{
							"name": "strAttributeName",
							"type": "string"
						},
						{
							"name": "lFlags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSEventObj",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSEventObj"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSEventObj"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLCanvasElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Gets or sets the width of a canvas element on a document."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number",
					"description": "Gets or sets the height of a canvas element on a document."
				},
				{
					"kind": "method",
					"name": "getContext",
					"description": "Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.",
					"parameters": [
						{
							"name": "contextId",
							"description": "The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext(\"2d\"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext(\"experimental-webgl\");",
							"type": "\"2d\""
						}
					],
					"returns": "CanvasRenderingContext2D"
				},
				{
					"kind": "method",
					"name": "getContext",
					"description": "Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.",
					"parameters": [
						{
							"name": "contextId",
							"description": "The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext(\"2d\"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext(\"experimental-webgl\");",
							"type": "\"experimental-webgl\""
						}
					],
					"returns": "WebGLRenderingContext"
				},
				{
					"kind": "method",
					"name": "getContext",
					"description": "Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.",
					"parameters": [
						{
							"name": "contextId",
							"description": "The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext(\"2d\"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext(\"experimental-webgl\");",
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "toDataURL",
					"description": "Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.",
					"parameters": [
						{
							"name": "type",
							"description": "The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.",
							"optional": true,
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "msToBlob",
					"description": "Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.",
					"returns": "Blob"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLCanvasElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLCanvasElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLCanvasElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Window",
			"extends": [
				"EventTarget",
				"MSEventAttachmentTarget",
				"WindowLocalStorage",
				"MSWindowExtensions",
				"WindowSessionStorage",
				"WindowTimers",
				"WindowBase64",
				"IDBEnvironment",
				"WindowConsole",
				"GlobalEventHandlers"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "ondragend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onkeydown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onkeyup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onreset",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondrag",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmouseover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "history",
					"type": "History"
				},
				{
					"kind": "property",
					"name": "pageXOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onafterprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpause",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforeprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "top",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "onmousedown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onseeked",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "opener",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "onclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "innerHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onwaiting",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ononline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondurationchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "frames",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "onblur",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onemptied",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onseeking",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncanplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "outerWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onstalled",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmousemove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "innerWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onoffline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screen",
					"type": "Screen"
				},
				{
					"kind": "property",
					"name": "onbeforeunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "BeforeUnloadEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onratechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onstorage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "StorageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondragenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onsubmit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "self",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "document",
					"type": "Document"
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondblclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "pageYOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "oncontextmenu",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadedmetadata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onplay",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": "ErrorEventHandler"
				},
				{
					"kind": "property",
					"name": "onplaying",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "parent",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "location",
					"type": "Location"
				},
				{
					"kind": "property",
					"name": "oncanplaythrough",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onreadystatechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "outerHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onkeypress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "frameElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "onloadeddata",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onsuspend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "window",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "onfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ontimeupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onresize",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onselect",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "navigator",
					"type": "Navigator"
				},
				{
					"kind": "property",
					"name": "styleMedia",
					"type": "StyleMedia"
				},
				{
					"kind": "property",
					"name": "ondrop",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onended",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onhashchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onscroll",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmousewheel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseWheelEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onvolumechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oninput",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "performance",
					"type": "Performance"
				},
				{
					"kind": "property",
					"name": "onmspointerdown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "animationStartTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmsgesturedoubletap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerhover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturehold",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointermove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturestart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointercancel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgestureend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturetap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msAnimationStartTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "applicationCache",
					"type": "ApplicationCache"
				},
				{
					"kind": "property",
					"name": "onmsinertiastart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpopstate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PopStateEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpageshow",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondevicemotion",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DeviceMotionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "devicePixelRatio",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msCrypto",
					"type": "Crypto"
				},
				{
					"kind": "property",
					"name": "ondeviceorientation",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DeviceOrientationEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "doNotTrack",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmspointerenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpagehide",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "alert",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "scroll",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "focus",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "scrollTo",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "print",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "prompt",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "string"
						},
						{
							"name": "_default",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "open",
					"parameters": [
						{
							"name": "url",
							"optional": true,
							"type": "string"
						},
						{
							"name": "target",
							"optional": true,
							"type": "string"
						},
						{
							"name": "features",
							"optional": true,
							"type": "string"
						},
						{
							"name": "replace",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "Window"
				},
				{
					"kind": "method",
					"name": "scrollBy",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "confirm",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "close",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "postMessage",
					"parameters": [
						{
							"name": "message",
							"type": "any"
						},
						{
							"name": "targetOrigin",
							"type": "string"
						},
						{
							"name": "ports",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "showModalDialog",
					"parameters": [
						{
							"name": "url",
							"optional": true,
							"type": "string"
						},
						{
							"name": "argument",
							"optional": true,
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "blur",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getSelection",
					"returns": "Selection"
				},
				{
					"kind": "method",
					"name": "getComputedStyle",
					"parameters": [
						{
							"name": "elt",
							"type": "Element"
						},
						{
							"name": "pseudoElt",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "CSSStyleDeclaration"
				},
				{
					"kind": "method",
					"name": "msCancelRequestAnimationFrame",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "matchMedia",
					"parameters": [
						{
							"name": "mediaQuery",
							"type": "string"
						}
					],
					"returns": "MediaQueryList"
				},
				{
					"kind": "method",
					"name": "cancelAnimationFrame",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msIsStaticHTML",
					"parameters": [
						{
							"name": "html",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "msMatchMedia",
					"parameters": [
						{
							"name": "mediaQuery",
							"type": "string"
						}
					],
					"returns": "MediaQueryList"
				},
				{
					"kind": "method",
					"name": "requestAnimationFrame",
					"parameters": [
						{
							"name": "callback",
							"type": "FrameRequestCallback"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "msRequestAnimationFrame",
					"parameters": [
						{
							"name": "callback",
							"type": "FrameRequestCallback"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"online\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"offline\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeunload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "BeforeUnloadEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"storage\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "StorageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"hashchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"unload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"popstate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PopStateEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pageshow\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"devicemotion\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DeviceMotionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deviceorientation\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DeviceOrientationEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pagehide\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Window",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Window"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Window"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLCollection",
			"extends": [
				"MSHTMLCollectionExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "Sets or retrieves the number of objects in a collection."
				},
				{
					"kind": "method",
					"name": "item",
					"description": "Retrieves an object from various collections.",
					"parameters": [
						{
							"name": "nameOrIndex",
							"optional": true,
							"type": "any"
						},
						{
							"name": "optionalIndex",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"description": "Retrieves a select object or an object from an options collection.",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Element"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "BlobPropertyBag",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"optional": true,
					"type": "string"
				},
				{
					"kind": "property",
					"name": "endings",
					"optional": true,
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Blob",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "msDetachStream",
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "slice",
					"parameters": [
						{
							"name": "start",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"optional": true,
							"type": "number"
						},
						{
							"name": "contentType",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "Blob"
				},
				{
					"kind": "method",
					"name": "msClose",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Blob",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "blobParts",
								"optional": true,
								"type": {
									"kind": "array",
									"type": "any"
								}
							},
							{
								"name": "options",
								"optional": true,
								"type": "BlobPropertyBag"
							}
						],
						"returns": "Blob"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Blob"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NavigatorID",
			"signatures": [
				{
					"kind": "property",
					"name": "appVersion",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "appName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "userAgent",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "platform",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "product",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "vendor",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLTableElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingTableExtensions",
				"MSDataBindingExtensions",
				"DOML2DeprecatedBackgroundStyle",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "borderColorLight",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				},
				{
					"kind": "property",
					"name": "cellSpacing",
					"type": "string",
					"description": "Sets or retrieves the amount of space between cells in a table."
				},
				{
					"kind": "property",
					"name": "tFoot",
					"type": "HTMLTableSectionElement",
					"description": "Retrieves the tFoot object of the table."
				},
				{
					"kind": "property",
					"name": "frame",
					"type": "string",
					"description": "Sets or retrieves the way the border frame around the table is displayed."
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "any",
					"description": "Sets or retrieves the border color of the object."
				},
				{
					"kind": "property",
					"name": "rows",
					"type": "HTMLCollection",
					"description": "Sets or retrieves the number of horizontal rows contained in the object."
				},
				{
					"kind": "property",
					"name": "rules",
					"type": "string",
					"description": "Sets or retrieves which dividing lines (inner borders) are displayed."
				},
				{
					"kind": "property",
					"name": "cols",
					"type": "number",
					"description": "Sets or retrieves the number of columns in the table."
				},
				{
					"kind": "property",
					"name": "summary",
					"type": "string",
					"description": "Sets or retrieves a description and/or structure of the object."
				},
				{
					"kind": "property",
					"name": "caption",
					"type": "HTMLTableCaptionElement",
					"description": "Retrieves the caption object of a table."
				},
				{
					"kind": "property",
					"name": "tBodies",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order."
				},
				{
					"kind": "property",
					"name": "tHead",
					"type": "HTMLTableSectionElement",
					"description": "Retrieves the tHead object of the table."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves a value that indicates the table alignment."
				},
				{
					"kind": "property",
					"name": "cells",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all cells in the table row or in the entire table."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "any",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "cellPadding",
					"type": "string",
					"description": "Sets or retrieves the amount of space between the border of the cell and the content of the cell."
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string",
					"description": "Sets or retrieves the width of the border to draw around the object."
				},
				{
					"kind": "property",
					"name": "borderColorDark",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				},
				{
					"kind": "method",
					"name": "deleteRow",
					"description": "Removes the specified row (tr) from the element and from the rows collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies the zero-based position in the rows collection of the row to remove.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createTBody",
					"description": "Creates an empty tBody element in the table.",
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "deleteCaption",
					"description": "Deletes the caption element and its contents from the table.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "insertRow",
					"description": "Creates a new row (tr) in the table, and adds the row to the rows collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "deleteTFoot",
					"description": "Deletes the tFoot element and its contents from the table.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createTHead",
					"description": "Returns the tHead element object if successful, or null otherwise.",
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "deleteTHead",
					"description": "Deletes the tHead element and its contents from the table.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createCaption",
					"description": "Creates an empty caption element in the table.",
					"returns": "HTMLElement"
				},
				{
					"kind": "method",
					"name": "moveRow",
					"description": "Moves a table row to a new position.",
					"parameters": [
						{
							"name": "indexFrom",
							"description": "Number that specifies the index in the rows collection of the table row that is moved.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "indexTo",
							"description": "Number that specifies where the row is moved within the rows collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "createTFoot",
					"description": "Creates an empty tFoot element in the table.",
					"returns": "HTMLElement"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TreeWalker",
			"signatures": [
				{
					"kind": "property",
					"name": "whatToShow",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "filter",
					"type": "NodeFilter"
				},
				{
					"kind": "property",
					"name": "root",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "currentNode",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "expandEntityReferences",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "previousSibling",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "lastChild",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "nextSibling",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "nextNode",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "parentNode",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "firstChild",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "previousNode",
					"returns": "Node"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TreeWalker",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TreeWalker"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TreeWalker"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "GetSVGDocument",
			"signatures": [
				{
					"kind": "method",
					"name": "getSVGDocument",
					"returns": "Document"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoQuadraticRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoQuadraticRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoQuadraticRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoQuadraticRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Performance",
			"signatures": [
				{
					"kind": "property",
					"name": "navigation",
					"type": "PerformanceNavigation"
				},
				{
					"kind": "property",
					"name": "timing",
					"type": "PerformanceTiming"
				},
				{
					"kind": "method",
					"name": "getEntriesByType",
					"parameters": [
						{
							"name": "entryType",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "toJSON",
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getMeasures",
					"parameters": [
						{
							"name": "measureName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "clearMarks",
					"parameters": [
						{
							"name": "markName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getMarks",
					"parameters": [
						{
							"name": "markName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "clearResourceTimings",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "mark",
					"parameters": [
						{
							"name": "markName",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "measure",
					"parameters": [
						{
							"name": "measureName",
							"type": "string"
						},
						{
							"name": "startMarkName",
							"optional": true,
							"type": "string"
						},
						{
							"name": "endMarkName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getEntriesByName",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						},
						{
							"name": "entryType",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getEntries",
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "clearMeasures",
					"parameters": [
						{
							"name": "measureName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setResourceTimingBufferSize",
					"parameters": [
						{
							"name": "maxSize",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "now",
					"returns": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Performance",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Performance"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Performance"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSDataBindingTableExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "dataPageSize",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "nextPage",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "firstPage",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "refresh",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "previousPage",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "lastPage",
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "CompositionEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "data",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "locale",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "initCompositionEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "dataArg",
							"type": "string"
						},
						{
							"name": "locale",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CompositionEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CompositionEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CompositionEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowTimers",
			"extends": [
				"WindowTimersExtension"
			],
			"signatures": [
				{
					"kind": "method",
					"name": "clearTimeout",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setTimeout",
					"parameters": [
						{
							"name": "handler",
							"type": "any"
						},
						{
							"name": "timeout",
							"optional": true,
							"type": "any"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "clearInterval",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setInterval",
					"parameters": [
						{
							"name": "handler",
							"type": "any"
						},
						{
							"name": "timeout",
							"optional": true,
							"type": "any"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGMarkerElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGLangSpace",
				"SVGFitToViewBox",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "orientType",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "markerUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "markerWidth",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "markerHeight",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "orientAngle",
					"type": "SVGAnimatedAngle"
				},
				{
					"kind": "property",
					"name": "refY",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "refX",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "method",
					"name": "setOrientToAngle",
					"parameters": [
						{
							"name": "angle",
							"type": "SVGAngle"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setOrientToAuto",
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "SVG_MARKER_ORIENT_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MARKER_ORIENT_ANGLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MARKERUNITS_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MARKERUNITS_STROKEWIDTH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MARKER_ORIENT_AUTO",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MARKERUNITS_USERSPACEONUSE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGMarkerElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGMarkerElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGMarkerElement"
					},
					{
						"kind": "property",
						"name": "SVG_MARKER_ORIENT_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MARKER_ORIENT_ANGLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MARKERUNITS_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MARKERUNITS_STROKEWIDTH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MARKER_ORIENT_AUTO",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MARKERUNITS_USERSPACEONUSE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSStyleDeclaration",
			"signatures": [
				{
					"kind": "property",
					"name": "backgroundAttachment",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "visibility",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textAlignLast",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderRightStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "counterIncrement",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "orphans",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cssText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pointerEvents",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTopColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "markerEnd",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textIndent",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "listStyleImage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cursor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "listStylePosition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "wordWrap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTopStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "alignmentBaseline",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "opacity",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "direction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeMiterlimit",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "maxWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "color",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clip",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderRightWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "verticalAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "overflow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "mask",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderLeftStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "emptyCells",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "stopOpacity",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "paddingRight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "parentRule",
					"type": "CSSRule"
				},
				{
					"kind": "property",
					"name": "background",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "boxSizing",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textJustify",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "paddingTop",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "right",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "baselineShift",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderLeft",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "widows",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lineHeight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "left",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textUnderlinePosition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "glyphOrientationHorizontal",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "display",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textAnchor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cssFloat",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeDasharray",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "rubyAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontSizeAdjust",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderLeftColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundImage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "listStyleType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textOverflow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fillRule",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottomColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "zIndex",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "position",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "listStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransformOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "dominantBaseline",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "overflowY",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fill",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "captionSide",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderCollapse",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "boxShadow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "quotes",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "tableLayout",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "unicodeBidi",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottomWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundSize",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textDecoration",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeDashoffset",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontSize",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pageBreakBefore",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTopRightRadius",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransform",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottomLeftRadius",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textTransform",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "rubyPosition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeLinejoin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipPath",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderRightColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontFamily",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clear",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "content",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundClip",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "marginBottom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "counterReset",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "outlineWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "marginRight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "paddingLeft",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "wordBreak",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "marginTop",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "top",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontWeight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderRight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "kerning",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pageBreakAfter",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottomStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontStretch",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "padding",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeOpacity",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "markerStart",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "bottom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderLeftWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipRule",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundPosition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pageBreakInside",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "strokeLinecap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTopWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "outlineStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTop",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "outlineColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "paddingBottom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "marginLeft",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "font",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "outline",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "wordSpacing",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "maxHeight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fillOpacity",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "letterSpacing",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderSpacing",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundRepeat",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderRadius",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderBottomRightRadius",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "whiteSpace",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "minWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "stopColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderTopLeftRadius",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "marker",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "glyphOrientationVertical",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "markerMid",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontVariant",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "minHeight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "stroke",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "rubyOverhang",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "overflowX",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "margin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationFillMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "floodColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationIterationCount",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textShadow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backfaceVisibility",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationIterationCount",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationDelay",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationTimingFunction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnWidth",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msScrollSnapX",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnRuleColor",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "columnRuleWidth",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "transitionDelay",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlowFrom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollSnapType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomSnapType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridColumns",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridRowAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomChaining",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridColumn",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msHyphenateLimitZone",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msScrollRails",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationDelay",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "enableBackground",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msWrapThrough",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnRuleStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimation",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexFlow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollSnapY",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msHyphenateLimitLines",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msTouchAction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollLimit",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animation",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transform",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "filter",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "colorInterpolationFilters",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transitionTimingFunction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msBackfaceVisibility",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationPlayState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transformOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollLimitYMin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msFontFeatureSettings",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomLimitMin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "columnGap",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "transitionProperty",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationDuration",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationFillMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexDirection",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransitionDuration",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fontFeatureSettings",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "breakBefore",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexWrap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "perspective",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlowInto",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransformStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollTranslation",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransitionProperty",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msUserSelect",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msOverflowStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollSnapPointsY",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationDirection",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationDuration",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlex",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransitionTimingFunction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "animationName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnRule",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridColumnSpan",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msFlexNegative",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnFill",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridRow",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msFlexOrder",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexItemAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexPositive",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomLimitMax",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msScrollLimitYMax",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msGridColumnAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "perspectiveOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lightingColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columns",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollChaining",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msHyphenateLimitChars",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTouchSelect",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "floodOpacity",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationDirection",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msAnimationPlayState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "columnSpan",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZooming",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msPerspective",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexPack",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollSnapPointsX",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomSnapPoints",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridRowSpan",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msContentZoomSnap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollLimitXMin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "breakInside",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msHighContrastAdjust",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexLinePack",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msGridRows",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transitionDuration",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msHyphens",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "breakAfter",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransition",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msPerspectiveOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msContentZoomLimit",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msScrollLimitXMax",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msFlexAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msWrapMargin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "columnCount",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "msAnimationTimingFunction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTransitionDelay",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transformStyle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msWrapFlow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFlexPreferredSize",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "alignItems",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImageSource",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexBasis",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImageWidth",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImageRepeat",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "order",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flex",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "alignContent",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msImeAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexShrink",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexGrow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImageSlice",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexWrap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImageOutset",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexDirection",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "touchAction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "flexFlow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "borderImage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "justifyContent",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "alignSelf",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msTextCombineHorizontal",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "getPropertyPriority",
					"parameters": [
						{
							"name": "propertyName",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "getPropertyValue",
					"parameters": [
						{
							"name": "propertyName",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "removeProperty",
					"parameters": [
						{
							"name": "propertyName",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "setProperty",
					"parameters": [
						{
							"name": "propertyName",
							"type": "string"
						},
						{
							"name": "value",
							"type": "string"
						},
						{
							"name": "priority",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSStyleDeclaration",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSStyleDeclaration"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSStyleDeclaration"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGGElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGGElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGGElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGGElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSStyleCSSProperties",
			"extends": [
				"MSCSSProperties"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "pixelWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "posHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "posLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pixelTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pixelBottom",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textDecorationNone",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "pixelLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "posTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "posBottom",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textDecorationOverline",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "posWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textDecorationLineThrough",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "pixelHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textDecorationBlink",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "posRight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pixelRight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textDecorationUnderline",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSStyleCSSProperties",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSStyleCSSProperties"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSStyleCSSProperties"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Navigator",
			"extends": [
				"NavigatorID",
				"NavigatorOnLine",
				"NavigatorContentUtils",
				"MSNavigatorExtensions",
				"NavigatorGeolocation",
				"MSNavigatorDoNotTrack",
				"NavigatorStorageUtils",
				"MSFileSaver"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "msMaxTouchPoints",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msPointerEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "msManipulationViewsEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "pointerEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "maxTouchPoints",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "msLaunchUri",
					"parameters": [
						{
							"name": "uri",
							"type": "string"
						},
						{
							"name": "successCallback",
							"optional": true,
							"type": "MSLaunchUriCallback"
						},
						{
							"name": "noHandlerCallback",
							"optional": true,
							"type": "MSLaunchUriCallback"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Navigator",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Navigator"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Navigator"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoCubicSmoothAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoCubicSmoothAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoCubicSmoothAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoCubicSmoothAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGZoomEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "zoomRectScreen",
					"type": "SVGRect"
				},
				{
					"kind": "property",
					"name": "previousScale",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "newScale",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "previousTranslate",
					"type": "SVGPoint"
				},
				{
					"kind": "property",
					"name": "newTranslate",
					"type": "SVGPoint"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGZoomEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGZoomEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGZoomEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NodeSelector",
			"signatures": [
				{
					"kind": "method",
					"name": "querySelectorAll",
					"parameters": [
						{
							"name": "selectors",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "querySelector",
					"parameters": [
						{
							"name": "selectors",
							"type": "string"
						}
					],
					"returns": "Element"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLTableDataCellElement",
			"extends": [
				"HTMLTableCellElement"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableDataCellElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableDataCellElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableDataCellElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLBaseElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "target",
					"type": "string",
					"description": "Sets or retrieves the window or frame at which to target content."
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string",
					"description": "Gets or sets the baseline URL on which relative links are based."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBaseElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBaseElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBaseElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ClientRect",
			"signatures": [
				{
					"kind": "property",
					"name": "left",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "right",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "top",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "bottom",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ClientRect",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ClientRect"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ClientRect"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PositionErrorCallback",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "error",
							"type": "PositionError"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DOMImplementation",
			"signatures": [
				{
					"kind": "method",
					"name": "createDocumentType",
					"parameters": [
						{
							"name": "qualifiedName",
							"type": "string"
						},
						{
							"name": "publicId",
							"type": "string"
						},
						{
							"name": "systemId",
							"type": "string"
						}
					],
					"returns": "DocumentType"
				},
				{
					"kind": "method",
					"name": "createDocument",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "qualifiedName",
							"type": "string"
						},
						{
							"name": "doctype",
							"type": "DocumentType"
						}
					],
					"returns": "Document"
				},
				{
					"kind": "method",
					"name": "hasFeature",
					"parameters": [
						{
							"name": "feature",
							"type": "string"
						},
						{
							"name": "version",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createHTMLDocument",
					"parameters": [
						{
							"name": "title",
							"type": "string"
						}
					],
					"returns": "Document"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMImplementation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMImplementation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMImplementation"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGUnitTypes",
			"signatures": [
				{
					"kind": "property",
					"name": "SVG_UNIT_TYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_UNIT_TYPE_USERSPACEONUSE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGUnitTypes",
			"type": "SVGUnitTypes"
		},
		{
			"kind": "interface",
			"name": "Element",
			"extends": [
				"Node",
				"NodeSelector",
				"ElementTraversal",
				"GlobalEventHandlers"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "scrollTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "scrollLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "tagName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clientWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "scrollWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "scrollHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msRegionOverflow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmspointerdown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgotpointercapture",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturedoubletap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerhover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturehold",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointermove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturestart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointercancel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgestureend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsgesturetap",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmsinertiastart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmslostpointercapture",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msContentZoomFactor",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmspointerup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onlostpointercapture",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ongotpointercapture",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmspointerleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "getAttribute",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "getElementsByTagNameNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "hasAttributeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getBoundingClientRect",
					"returns": "ClientRect"
				},
				{
					"kind": "method",
					"name": "getAttributeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "getAttributeNodeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "setAttributeNodeNS",
					"parameters": [
						{
							"name": "newAttr",
							"type": "Attr"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "msMatchesSelector",
					"parameters": [
						{
							"name": "selectors",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "hasAttribute",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "removeAttribute",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setAttributeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "qualifiedName",
							"type": "string"
						},
						{
							"name": "value",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getAttributeNode",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "fireEvent",
					"parameters": [
						{
							"name": "eventName",
							"type": "string"
						},
						{
							"name": "eventObj",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"a\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAnchorElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"abbr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"acronym\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"address\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"applet\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAppletElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"area\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAreaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"articlex\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"aside\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"audio\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLAudioElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"b\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"base\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBaseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"basefont\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBaseFontElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"bdo\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"bgsound\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBGSoundElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"big\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"blockquote\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"body\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBodyElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"br\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBRElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"button\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLButtonElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"canvas\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLCanvasElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"caption\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableCaptionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"center\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"cite\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"code\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"col\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableColElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"colgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableColElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"datalist\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDataListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dd\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDDElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"del\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLModElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dfn\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dir\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDirectoryElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"div\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDivElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dl\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"dt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLDTElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"em\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"embed\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLEmbedElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"fieldset\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFieldSetElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"figcaption\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"figure\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"font\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFontElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"footer\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"form\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFormElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"frame\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFrameElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"frameset\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLFrameSetElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h1\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h2\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h3\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h4\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h5\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"h6\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadingElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"head\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHeadElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"header\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"hgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"hr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHRElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"html\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLHtmlElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"i\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"iframe\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLIFrameElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"img\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLImageElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"input\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLInputElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ins\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLModElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"isindex\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLIsIndexElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"kbd\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"keygen\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"label\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLabelElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"legend\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLegendElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"li\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLIElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"link\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLLinkElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"listing\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"map\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMapElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"mark\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"marquee\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMarqueeElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"menu\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMenuElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"meta\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLMetaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nav\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nextid\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLNextIdElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"nobr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"noframes\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"noscript\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"object\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLObjectElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ol\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"optgroup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOptGroupElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"option\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLOptionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"p\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLParagraphElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"param\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLParamElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"plaintext\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"pre\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPreElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"progress\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLProgressElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"q\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLQuoteElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"rt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ruby\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"s\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"samp\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"script\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLScriptElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"section\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"select\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSelectElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"small\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"SOURCE\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSourceElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"span\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLSpanElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"strike\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"strong\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"style\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLStyleElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"sub\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"sup\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"table\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tbody\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"td\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableDataCellElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"textarea\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTextAreaElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tfoot\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"th\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableHeaderCellElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"thead\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableSectionElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"title\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTitleElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTableRowElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"track\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLTrackElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"tt\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"u\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"ul\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLUListElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"var\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLPhraseElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"video\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLVideoElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"wbr\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"x-ms-webview\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"MSHTMLWebViewElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "\"xmp\""
						}
					],
					"returns": {
						"kind": "reference",
						"type": "NodeListOf",
						"arguments": [
							"HTMLBlockElement"
						]
					}
				},
				{
					"kind": "method",
					"name": "getElementsByTagName",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "getClientRects",
					"returns": "ClientRectList"
				},
				{
					"kind": "method",
					"name": "setAttributeNode",
					"parameters": [
						{
							"name": "newAttr",
							"type": "Attr"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "removeAttributeNode",
					"parameters": [
						{
							"name": "oldAttr",
							"type": "Attr"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "setAttribute",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": "string"
						},
						{
							"name": "value",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeAttributeNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msGetRegionContent",
					"returns": "MSRangeCollection"
				},
				{
					"kind": "method",
					"name": "msReleasePointerCapture",
					"parameters": [
						{
							"name": "pointerId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msSetPointerCapture",
					"parameters": [
						{
							"name": "pointerId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msZoomTo",
					"parameters": [
						{
							"name": "args",
							"type": "MsZoomToOptions"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setPointerCapture",
					"parameters": [
						{
							"name": "pointerId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msGetUntransformedBounds",
					"returns": "ClientRect"
				},
				{
					"kind": "method",
					"name": "releasePointerCapture",
					"parameters": [
						{
							"name": "pointerId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msRequestFullscreen",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Element",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Element"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Element"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLNextIdElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "n",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLNextIdElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLNextIdElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLNextIdElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegMovetoRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegMovetoRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegMovetoRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegMovetoRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGLineElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y1",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGLineElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGLineElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGLineElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLParagraphElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedTextFlowControl"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLParagraphElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLParagraphElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLParagraphElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAreasCollection",
			"extends": [
				"HTMLCollection"
			],
			"signatures": [
				{
					"kind": "method",
					"name": "remove",
					"description": "Removes an element from the collection.",
					"parameters": [
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "add",
					"description": "Adds an element to the areas, controlRange, or options collection.",
					"parameters": [
						{
							"name": "element",
							"type": "HTMLElement"
						},
						{
							"name": "before",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAreasCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAreasCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAreasCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGDescElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGLangSpace"
			]
		},
		{
			"kind": "variable",
			"name": "SVGDescElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGDescElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGDescElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Node",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "nodeType",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "previousSibling",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "localName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "namespaceURI",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textContent",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "parentNode",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "nextSibling",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "nodeValue",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lastChild",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "childNodes",
					"type": "NodeList"
				},
				{
					"kind": "property",
					"name": "nodeName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "ownerDocument",
					"type": "Document"
				},
				{
					"kind": "property",
					"name": "attributes",
					"type": "NamedNodeMap"
				},
				{
					"kind": "property",
					"name": "firstChild",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "prefix",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "removeChild",
					"parameters": [
						{
							"name": "oldChild",
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "appendChild",
					"parameters": [
						{
							"name": "newChild",
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "isSupported",
					"parameters": [
						{
							"name": "feature",
							"type": "string"
						},
						{
							"name": "version",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "isEqualNode",
					"parameters": [
						{
							"name": "arg",
							"type": "Node"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "lookupPrefix",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "isDefaultNamespace",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "compareDocumentPosition",
					"parameters": [
						{
							"name": "other",
							"type": "Node"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "normalize",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isSameNode",
					"parameters": [
						{
							"name": "other",
							"type": "Node"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "hasAttributes",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "lookupNamespaceURI",
					"parameters": [
						{
							"name": "prefix",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "cloneNode",
					"parameters": [
						{
							"name": "deep",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "hasChildNodes",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "replaceChild",
					"parameters": [
						{
							"name": "newChild",
							"type": "Node"
						},
						{
							"name": "oldChild",
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "insertBefore",
					"parameters": [
						{
							"name": "newChild",
							"type": "Node"
						},
						{
							"name": "refChild",
							"optional": true,
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "property",
					"name": "ENTITY_REFERENCE_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ATTRIBUTE_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_FRAGMENT_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXT_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ELEMENT_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMMENT_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_DISCONNECTED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_CONTAINED_BY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_CONTAINS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_TYPE_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ENTITY_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PROCESSING_INSTRUCTION_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CDATA_SECTION_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NOTATION_NODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_FOLLOWING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOCUMENT_POSITION_PRECEDING",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Node",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Node"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Node"
					},
					{
						"kind": "property",
						"name": "ENTITY_REFERENCE_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ATTRIBUTE_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_FRAGMENT_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXT_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ELEMENT_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMMENT_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_DISCONNECTED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_CONTAINED_BY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_CONTAINS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_TYPE_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ENTITY_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PROCESSING_INSTRUCTION_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CDATA_SECTION_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NOTATION_NODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_FOLLOWING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOCUMENT_POSITION_PRECEDING",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoQuadraticSmoothRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoQuadraticSmoothRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoQuadraticSmoothRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoQuadraticSmoothRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedListSpaceReduction",
			"signatures": [
				{
					"kind": "property",
					"name": "compact",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MSScriptHost"
		},
		{
			"kind": "variable",
			"name": "MSScriptHost",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSScriptHost"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSScriptHost"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGClipPathElement",
			"extends": [
				"SVGElement",
				"SVGUnitTypes",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "clipPathUnits",
					"type": "SVGAnimatedEnumeration"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGClipPathElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGClipPathElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGClipPathElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MouseEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "toElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "layerY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fromElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "which",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pageX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "offsetY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "metaKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "altKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "ctrlKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "offsetX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "shiftKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "layerX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "relatedTarget",
					"type": "EventTarget"
				},
				{
					"kind": "property",
					"name": "button",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pageY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "buttons",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientX",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initMouseEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "ctrlKeyArg",
							"type": "boolean"
						},
						{
							"name": "altKeyArg",
							"type": "boolean"
						},
						{
							"name": "shiftKeyArg",
							"type": "boolean"
						},
						{
							"name": "metaKeyArg",
							"type": "boolean"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getModifierState",
					"parameters": [
						{
							"name": "keyArg",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MouseEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MouseEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MouseEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "RangeException",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "INVALID_NODE_TYPE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BAD_BOUNDARYPOINTS_ERR",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "RangeException",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "RangeException"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "RangeException"
					},
					{
						"kind": "property",
						"name": "INVALID_NODE_TYPE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BAD_BOUNDARYPOINTS_ERR",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTextPositioningElement",
			"extends": [
				"SVGTextContentElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLengthList"
				},
				{
					"kind": "property",
					"name": "rotate",
					"type": "SVGAnimatedNumberList"
				},
				{
					"kind": "property",
					"name": "dy",
					"type": "SVGAnimatedLengthList"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLengthList"
				},
				{
					"kind": "property",
					"name": "dx",
					"type": "SVGAnimatedLengthList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGTextPositioningElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTextPositioningElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTextPositioningElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAppletElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedMarginStyle",
				"DOML2DeprecatedBorderStyle",
				"DOML2DeprecatedAlignmentStyle",
				"MSDataBindingExtensions",
				"MSDataBindingRecordSetExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "codeType",
					"type": "string",
					"description": "Sets or retrieves the Internet media type for the code associated with the object."
				},
				{
					"kind": "property",
					"name": "object",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement"
				},
				{
					"kind": "property",
					"name": "code",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "archive",
					"type": "string",
					"description": "Sets or retrieves a character string that can be used to implement your own archive functionality for the object."
				},
				{
					"kind": "property",
					"name": "alt",
					"type": "string",
					"description": "Sets or retrieves a text alternative to the graphic."
				},
				{
					"kind": "property",
					"name": "standby",
					"type": "string",
					"description": "Sets or retrieves a message to be displayed while an object is loading."
				},
				{
					"kind": "property",
					"name": "classid",
					"type": "string",
					"description": "Sets or retrieves the class identifier for the object."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the shape of the object."
				},
				{
					"kind": "property",
					"name": "useMap",
					"type": "string",
					"description": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string",
					"description": "Sets or retrieves the URL that references the data of the object."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "altHtml",
					"type": "string",
					"description": "Gets or sets the optional alternative HTML script to execute if the object fails to load."
				},
				{
					"kind": "property",
					"name": "contentDocument",
					"type": "Document",
					"description": "Address of a pointer to the document this page or frame contains. If there is no document, then null will be returned."
				},
				{
					"kind": "property",
					"name": "codeBase",
					"type": "string",
					"description": "Sets or retrieves the URL of the component."
				},
				{
					"kind": "property",
					"name": "declare",
					"type": "boolean",
					"description": "Sets or retrieves a character string that can be used to implement your own declare functionality for the object."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Returns the content type of the object."
				},
				{
					"kind": "property",
					"name": "BaseHref",
					"type": "string",
					"description": "Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAppletElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAppletElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAppletElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextMetrics",
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextMetrics",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextMetrics"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextMetrics"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DocumentEvent",
			"signatures": [
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"AnimationEvent\""
						}
					],
					"returns": "AnimationEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"CloseEvent\""
						}
					],
					"returns": "CloseEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"CompositionEvent\""
						}
					],
					"returns": "CompositionEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"CustomEvent\""
						}
					],
					"returns": "CustomEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"DeviceMotionEvent\""
						}
					],
					"returns": "DeviceMotionEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"DeviceOrientationEvent\""
						}
					],
					"returns": "DeviceOrientationEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"DragEvent\""
						}
					],
					"returns": "DragEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"ErrorEvent\""
						}
					],
					"returns": "ErrorEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"Event\""
						}
					],
					"returns": "Event"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"Events\""
						}
					],
					"returns": "Event"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"FocusEvent\""
						}
					],
					"returns": "FocusEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"HTMLEvents\""
						}
					],
					"returns": "Event"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"IDBVersionChangeEvent\""
						}
					],
					"returns": "IDBVersionChangeEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"KeyboardEvent\""
						}
					],
					"returns": "KeyboardEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"LongRunningScriptDetectedEvent\""
						}
					],
					"returns": "LongRunningScriptDetectedEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MessageEvent\""
						}
					],
					"returns": "MessageEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MouseEvent\""
						}
					],
					"returns": "MouseEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MouseEvents\""
						}
					],
					"returns": "MouseEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MouseWheelEvent\""
						}
					],
					"returns": "MouseWheelEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MSGestureEvent\""
						}
					],
					"returns": "MSGestureEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MSPointerEvent\""
						}
					],
					"returns": "MSPointerEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MutationEvent\""
						}
					],
					"returns": "MutationEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"MutationEvents\""
						}
					],
					"returns": "MutationEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"NavigationCompletedEvent\""
						}
					],
					"returns": "NavigationCompletedEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"NavigationEvent\""
						}
					],
					"returns": "NavigationEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"PageTransitionEvent\""
						}
					],
					"returns": "PageTransitionEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"PointerEvent\""
						}
					],
					"returns": "MSPointerEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"PopStateEvent\""
						}
					],
					"returns": "PopStateEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"ProgressEvent\""
						}
					],
					"returns": "ProgressEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"StorageEvent\""
						}
					],
					"returns": "StorageEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"SVGZoomEvents\""
						}
					],
					"returns": "SVGZoomEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"TextEvent\""
						}
					],
					"returns": "TextEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"TrackEvent\""
						}
					],
					"returns": "TrackEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"TransitionEvent\""
						}
					],
					"returns": "TransitionEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"UIEvent\""
						}
					],
					"returns": "UIEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"UIEvents\""
						}
					],
					"returns": "UIEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"UnviewableContentIdentifiedEvent\""
						}
					],
					"returns": "UnviewableContentIdentifiedEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"WebGLContextEvent\""
						}
					],
					"returns": "WebGLContextEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "\"WheelEvent\""
						}
					],
					"returns": "WheelEvent"
				},
				{
					"kind": "method",
					"name": "createEvent",
					"parameters": [
						{
							"name": "eventInterface",
							"type": "string"
						}
					],
					"returns": "Event"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLOListElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListSpaceReduction",
				"DOML2DeprecatedListNumberingAndBulletStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "start",
					"type": "number",
					"description": "The starting number."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLOListElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLOListElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLOListElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoVerticalRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoVerticalRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoVerticalRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoVerticalRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedString",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedString",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedString"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedString"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CDATASection",
			"extends": [
				"Text"
			]
		},
		{
			"kind": "variable",
			"name": "CDATASection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CDATASection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CDATASection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "StyleMedia",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "matchMedium",
					"parameters": [
						{
							"name": "mediaquery",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "StyleMedia",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "StyleMedia"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "StyleMedia"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLSelectElement",
			"extends": [
				"HTMLElement",
				"MSHTMLCollectionExtensions",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "options",
					"type": "HTMLSelectElement"
				},
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Sets or retrieves the value which is returned to the server when the form control is submitted."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number",
					"description": "Sets or retrieves the number of rows in the list box."
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "Sets or retrieves the number of objects in a collection."
				},
				{
					"kind": "property",
					"name": "selectedIndex",
					"type": "number",
					"description": "Sets or retrieves the index of the selected option in a select object."
				},
				{
					"kind": "property",
					"name": "multiple",
					"type": "boolean",
					"description": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Retrieves the type of select control based on the value of the MULTIPLE attribute."
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "autofocus",
					"type": "boolean",
					"description": "Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "required",
					"type": "boolean",
					"description": "When present, marks an element that can't be submitted without a value."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "method",
					"name": "remove",
					"description": "Removes an element from the collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies the zero-based index of the element to remove from the collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "add",
					"description": "Adds an element to the areas, controlRange, or options collection.",
					"parameters": [
						{
							"name": "element",
							"description": "Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.",
							"type": "HTMLElement"
						},
						{
							"name": "before",
							"description": "Variant of type Object that specifies an element to insert before, or null to append the object to the collection.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"description": "Retrieves a select object or an object from an options collection.",
					"parameters": [
						{
							"name": "name",
							"description": "Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is an integer, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.",
							"optional": true,
							"type": "any"
						},
						{
							"name": "index",
							"description": "Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"description": "Retrieves a select object or an object from an options collection.",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "name",
						"type": "string"
					},
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLSelectElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLSelectElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLSelectElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextRange",
			"signatures": [
				{
					"kind": "property",
					"name": "boundingLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "htmlText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "offsetLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "boundingWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "boundingHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "boundingTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "offsetTop",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "moveToPoint",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "queryCommandValue",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getBookmark",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "move",
					"parameters": [
						{
							"name": "unit",
							"type": "string"
						},
						{
							"name": "count",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "queryCommandIndeterm",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "scrollIntoView",
					"parameters": [
						{
							"name": "fStart",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "findText",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						},
						{
							"name": "count",
							"optional": true,
							"type": "number"
						},
						{
							"name": "flags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "execCommand",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						},
						{
							"name": "showUI",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "value",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getBoundingClientRect",
					"returns": "ClientRect"
				},
				{
					"kind": "method",
					"name": "moveToBookmark",
					"parameters": [
						{
							"name": "bookmark",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "isEqual",
					"parameters": [
						{
							"name": "range",
							"type": "TextRange"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "duplicate",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "collapse",
					"parameters": [
						{
							"name": "start",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "queryCommandText",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "select",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "pasteHTML",
					"parameters": [
						{
							"name": "html",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "inRange",
					"parameters": [
						{
							"name": "range",
							"type": "TextRange"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "moveEnd",
					"parameters": [
						{
							"name": "unit",
							"type": "string"
						},
						{
							"name": "count",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getClientRects",
					"returns": "ClientRectList"
				},
				{
					"kind": "method",
					"name": "moveStart",
					"parameters": [
						{
							"name": "unit",
							"type": "string"
						},
						{
							"name": "count",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "parentElement",
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "queryCommandState",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "compareEndPoints",
					"parameters": [
						{
							"name": "how",
							"type": "string"
						},
						{
							"name": "sourceRange",
							"type": "TextRange"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "execCommandShowHelp",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "moveToElementText",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "expand",
					"parameters": [
						{
							"name": "Unit",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "queryCommandSupported",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setEndPoint",
					"parameters": [
						{
							"name": "how",
							"type": "string"
						},
						{
							"name": "SourceRange",
							"type": "TextRange"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "queryCommandEnabled",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextRange",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextRange"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextRange"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTests",
			"signatures": [
				{
					"kind": "property",
					"name": "requiredFeatures",
					"type": "SVGStringList"
				},
				{
					"kind": "property",
					"name": "requiredExtensions",
					"type": "SVGStringList"
				},
				{
					"kind": "property",
					"name": "systemLanguage",
					"type": "SVGStringList"
				},
				{
					"kind": "method",
					"name": "hasExtension",
					"parameters": [
						{
							"name": "extension",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLBlockElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedTextFlowControl"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "cite",
					"type": "string",
					"description": "Sets or retrieves reference information about the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBlockElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBlockElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBlockElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSStyleSheet",
			"extends": [
				"StyleSheet"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "owningElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "imports",
					"type": "StyleSheetList"
				},
				{
					"kind": "property",
					"name": "isAlternate",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "rules",
					"type": "MSCSSRuleList"
				},
				{
					"kind": "property",
					"name": "isPrefAlternate",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "readOnly",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "cssText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "ownerRule",
					"type": "CSSRule"
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cssRules",
					"type": "CSSRuleList"
				},
				{
					"kind": "property",
					"name": "id",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pages",
					"type": "StyleSheetPageList"
				},
				{
					"kind": "method",
					"name": "addImport",
					"parameters": [
						{
							"name": "bstrURL",
							"type": "string"
						},
						{
							"name": "lIndex",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "addPageRule",
					"parameters": [
						{
							"name": "bstrSelector",
							"type": "string"
						},
						{
							"name": "bstrStyle",
							"type": "string"
						},
						{
							"name": "lIndex",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "insertRule",
					"parameters": [
						{
							"name": "rule",
							"type": "string"
						},
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "removeRule",
					"parameters": [
						{
							"name": "lIndex",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteRule",
					"parameters": [
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addRule",
					"parameters": [
						{
							"name": "bstrSelector",
							"type": "string"
						},
						{
							"name": "bstrStyle",
							"optional": true,
							"type": "string"
						},
						{
							"name": "lIndex",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "removeImport",
					"parameters": [
						{
							"name": "lIndex",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSStyleSheet",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSStyleSheet"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSStyleSheet"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSSelection",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "typeDetail",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "createRange",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createRangeCollection",
					"returns": "TextRangeCollection"
				},
				{
					"kind": "method",
					"name": "empty",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSSelection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSSelection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSSelection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLMetaElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "httpEquiv",
					"type": "string",
					"description": "Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the value specified in the content attribute of the meta object."
				},
				{
					"kind": "property",
					"name": "content",
					"type": "string",
					"description": "Gets or sets meta-information to associate with httpEquiv or name."
				},
				{
					"kind": "property",
					"name": "url",
					"type": "string",
					"description": "Sets or retrieves the URL property that will be loaded after the specified time has elapsed."
				},
				{
					"kind": "property",
					"name": "scheme",
					"type": "string",
					"description": "Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object."
				},
				{
					"kind": "property",
					"name": "charset",
					"type": "string",
					"description": "Sets or retrieves the character set used to encode the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLMetaElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLMetaElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLMetaElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPatternElement",
			"extends": [
				"SVGElement",
				"SVGUnitTypes",
				"SVGStylable",
				"SVGLangSpace",
				"SVGTests",
				"SVGFitToViewBox",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "patternUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "patternContentUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "patternTransform",
					"type": "SVGAnimatedTransformList"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPatternElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPatternElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPatternElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedAngle",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGAngle"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGAngle"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedAngle",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedAngle"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedAngle"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Selection",
			"signatures": [
				{
					"kind": "property",
					"name": "isCollapsed",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "anchorNode",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "focusNode",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "anchorOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "focusOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "rangeCount",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addRange",
					"parameters": [
						{
							"name": "range",
							"type": "Range"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "collapseToEnd",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "selectAllChildren",
					"parameters": [
						{
							"name": "parentNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getRangeAt",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Range"
				},
				{
					"kind": "method",
					"name": "collapse",
					"parameters": [
						{
							"name": "parentNode",
							"type": "Node"
						},
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeAllRanges",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "collapseToStart",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteFromDocument",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeRange",
					"parameters": [
						{
							"name": "range",
							"type": "Range"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Selection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Selection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Selection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGScriptElement",
			"extends": [
				"SVGElement",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGScriptElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGScriptElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGScriptElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLDDElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "noWrap",
					"type": "boolean",
					"description": "Sets or retrieves whether the browser automatically performs wordwrap."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDDElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDDElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDDElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSDataBindingRecordSetReadonlyExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "recordset",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "namedRecordset",
					"parameters": [
						{
							"name": "dataMember",
							"type": "string"
						},
						{
							"name": "hierarchy",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "CSSStyleRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "selectorText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "style",
					"type": "MSStyleCSSProperties"
				},
				{
					"kind": "property",
					"name": "readOnly",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSStyleRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSStyleRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSStyleRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NodeIterator",
			"signatures": [
				{
					"kind": "property",
					"name": "whatToShow",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "filter",
					"type": "NodeFilter"
				},
				{
					"kind": "property",
					"name": "root",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "expandEntityReferences",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "nextNode",
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "detach",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "previousNode",
					"returns": "Node"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NodeIterator",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "NodeIterator"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "NodeIterator"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGViewElement",
			"extends": [
				"SVGElement",
				"SVGZoomAndPan",
				"SVGFitToViewBox",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "viewTarget",
					"type": "SVGStringList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGViewElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGViewElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGViewElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLLinkElement",
			"extends": [
				"HTMLElement",
				"LinkStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "rel",
					"type": "string",
					"description": "Sets or retrieves the relationship between the object and the destination of the link."
				},
				{
					"kind": "property",
					"name": "target",
					"type": "string",
					"description": "Sets or retrieves the window or frame at which to target content."
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string",
					"description": "Sets or retrieves a destination URL or an anchor point."
				},
				{
					"kind": "property",
					"name": "media",
					"type": "string",
					"description": "Sets or retrieves the media type."
				},
				{
					"kind": "property",
					"name": "rev",
					"type": "string",
					"description": "Sets or retrieves the relationship between the object and the destination of the link."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Sets or retrieves the MIME type of the object."
				},
				{
					"kind": "property",
					"name": "charset",
					"type": "string",
					"description": "Sets or retrieves the character set used to encode the object."
				},
				{
					"kind": "property",
					"name": "hreflang",
					"type": "string",
					"description": "Sets or retrieves the language code of the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLLinkElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLLinkElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLLinkElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGLocatable",
			"signatures": [
				{
					"kind": "property",
					"name": "farthestViewportElement",
					"type": "SVGElement"
				},
				{
					"kind": "property",
					"name": "nearestViewportElement",
					"type": "SVGElement"
				},
				{
					"kind": "method",
					"name": "getBBox",
					"returns": "SVGRect"
				},
				{
					"kind": "method",
					"name": "getTransformToElement",
					"parameters": [
						{
							"name": "element",
							"type": "SVGElement"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "getCTM",
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "getScreenCTM",
					"returns": "SVGMatrix"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLFontElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedColorProperty",
				"DOML2DeprecatedSizeProperty"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "face",
					"type": "string",
					"description": "Sets or retrieves the current typeface family."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLFontElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLFontElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLFontElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTitleElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGLangSpace"
			]
		},
		{
			"kind": "variable",
			"name": "SVGTitleElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTitleElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTitleElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ControlRangeCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "queryCommandValue",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "remove",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "add",
					"parameters": [
						{
							"name": "item",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "queryCommandIndeterm",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "scrollIntoView",
					"parameters": [
						{
							"name": "varargStart",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "execCommand",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						},
						{
							"name": "showUI",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "value",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "addElement",
					"parameters": [
						{
							"name": "item",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "queryCommandState",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "queryCommandSupported",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "queryCommandEnabled",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "queryCommandText",
					"parameters": [
						{
							"name": "cmdID",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "select",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ControlRangeCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ControlRangeCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ControlRangeCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSNamespaceInfo",
			"extends": [
				"MSEventAttachmentTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "urn",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onreadystatechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "doImport",
					"parameters": [
						{
							"name": "implementationUrl",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSNamespaceInfo",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSNamespaceInfo"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSNamespaceInfo"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowSessionStorage",
			"signatures": [
				{
					"kind": "property",
					"name": "sessionStorage",
					"type": "Storage"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedTransformList",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGTransformList"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGTransformList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedTransformList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedTransformList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedTransformList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableCaptionElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves the alignment of the caption or legend."
				},
				{
					"kind": "property",
					"name": "vAlign",
					"type": "string",
					"description": "Sets or retrieves whether the caption appears at the top or bottom of the table."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableCaptionElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableCaptionElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableCaptionElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLOptionElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "index",
					"type": "number",
					"description": "Sets or retrieves the ordinal position of an option in a list box."
				},
				{
					"kind": "property",
					"name": "defaultSelected",
					"type": "boolean",
					"description": "Sets or retrieves the status of an option."
				},
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Sets or retrieves the value which is returned to the server when the form control is submitted."
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string",
					"description": "Sets or retrieves the text string specified by the option tag."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "label",
					"type": "string",
					"description": "Sets or retrieves a value that you can use to implement your own label functionality for the object."
				},
				{
					"kind": "property",
					"name": "selected",
					"type": "boolean",
					"description": "Sets or retrieves whether the option in the list box is the default item."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLOptionElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLOptionElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLOptionElement"
					},
					{
						"kind": "method",
						"name": "create",
						"returns": "HTMLOptionElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLMapElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "areas",
					"type": "HTMLAreasCollection",
					"description": "Retrieves a collection of the area objects defined for the given map object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLMapElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLMapElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLMapElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLMenuElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListSpaceReduction"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLMenuElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLMenuElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLMenuElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MouseWheelEvent",
			"extends": [
				"MouseEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "wheelDelta",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initMouseWheelEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						},
						{
							"name": "modifiersListArg",
							"type": "string"
						},
						{
							"name": "wheelDeltaArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MouseWheelEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MouseWheelEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MouseWheelEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFitToViewBox",
			"signatures": [
				{
					"kind": "property",
					"name": "viewBox",
					"type": "SVGAnimatedRect"
				},
				{
					"kind": "property",
					"name": "preserveAspectRatio",
					"type": "SVGAnimatedPreserveAspectRatio"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGPointList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPoint"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPoint"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPoint"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPoint"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPointList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPointList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPointList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedLengthList",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGLengthList"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGLengthList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedLengthList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedLengthList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedLengthList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedPreserveAspectRatio",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGPreserveAspectRatio"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGPreserveAspectRatio"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedPreserveAspectRatio",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedPreserveAspectRatio"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedPreserveAspectRatio"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSSiteModeEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "buttonID",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "actionURL",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSSiteModeEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSSiteModeEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSSiteModeEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedTextFlowControl",
			"signatures": [
				{
					"kind": "property",
					"name": "clear",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "StyleSheetPageList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "CSSPageRule"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "CSSPageRule"
				}
			]
		},
		{
			"kind": "variable",
			"name": "StyleSheetPageList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "StyleSheetPageList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "StyleSheetPageList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCSSProperties",
			"extends": [
				"CSSStyleDeclaration"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "scrollbarShadowColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarHighlightColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutGridChar",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutGridType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textAutospace",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textKashidaSpace",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "writingMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarFaceColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundPositionY",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lineBreak",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "imeMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msBlockProgression",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutGridLine",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarBaseColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutGrid",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutFlow",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textKashida",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "filter",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "zoom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarArrowColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "behavior",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "backgroundPositionX",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "accelerator",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "layoutGridMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textJustifyTrim",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbar3dLightColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msInterpolationMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarTrackColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "scrollbarDarkShadowColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "styleFloat",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "getAttribute",
					"parameters": [
						{
							"name": "attributeName",
							"type": "string"
						},
						{
							"name": "flags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "setAttribute",
					"parameters": [
						{
							"name": "attributeName",
							"type": "string"
						},
						{
							"name": "AttributeValue",
							"type": "any"
						},
						{
							"name": "flags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeAttribute",
					"parameters": [
						{
							"name": "attributeName",
							"type": "string"
						},
						{
							"name": "flags",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCSSProperties",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSCSSProperties"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCSSProperties"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGExternalResourcesRequired",
			"signatures": [
				{
					"kind": "property",
					"name": "externalResourcesRequired",
					"type": "SVGAnimatedBoolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLImageElement",
			"extends": [
				"HTMLElement",
				"MSImageResourceExtensions",
				"MSDataBindingExtensions",
				"MSResourceMetadata"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "vspace",
					"type": "number",
					"description": "Sets or retrieves the vertical margin for the object."
				},
				{
					"kind": "property",
					"name": "naturalHeight",
					"type": "number",
					"description": "The original height of the image resource before sizing."
				},
				{
					"kind": "property",
					"name": "alt",
					"type": "string",
					"description": "Sets or retrieves a text alternative to the graphic."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "The address or URL of the a media resource that is to be considered."
				},
				{
					"kind": "property",
					"name": "useMap",
					"type": "string",
					"description": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
				},
				{
					"kind": "property",
					"name": "naturalWidth",
					"type": "number",
					"description": "The original width of the image resource before sizing."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string",
					"description": "Specifies the properties of a border drawn around an object."
				},
				{
					"kind": "property",
					"name": "hspace",
					"type": "number",
					"description": "Sets or retrieves the width of the border to draw around the object."
				},
				{
					"kind": "property",
					"name": "longDesc",
					"type": "string",
					"description": "Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object."
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string",
					"description": "Contains the hypertext reference (HREF) of the URL."
				},
				{
					"kind": "property",
					"name": "isMap",
					"type": "boolean",
					"description": "Sets or retrieves whether the image is a server-side image map."
				},
				{
					"kind": "property",
					"name": "complete",
					"type": "boolean",
					"description": "Retrieves whether the object is fully loaded."
				},
				{
					"kind": "property",
					"name": "msPlayToPrimary",
					"type": "boolean",
					"description": "Gets or sets the primary DLNA PlayTo device."
				},
				{
					"kind": "property",
					"name": "msPlayToDisabled",
					"type": "boolean",
					"description": "Gets or sets whether the DLNA PlayTo device is available."
				},
				{
					"kind": "property",
					"name": "msPlayToSource",
					"type": "any",
					"description": "Gets the source associated with the media element for use by the PlayToManager."
				},
				{
					"kind": "property",
					"name": "crossOrigin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msPlayToPreferredSourceUri",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLImageElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLImageElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLImageElement"
					},
					{
						"kind": "method",
						"name": "create",
						"returns": "HTMLImageElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAreaElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "protocol",
					"type": "string",
					"description": "Sets or retrieves the protocol portion of a URL."
				},
				{
					"kind": "property",
					"name": "search",
					"type": "string",
					"description": "Sets or retrieves the substring of the href property that follows the question mark."
				},
				{
					"kind": "property",
					"name": "alt",
					"type": "string",
					"description": "Sets or retrieves a text alternative to the graphic."
				},
				{
					"kind": "property",
					"name": "coords",
					"type": "string",
					"description": "Sets or retrieves the coordinates of the object."
				},
				{
					"kind": "property",
					"name": "hostname",
					"type": "string",
					"description": "Sets or retrieves the host name part of the location or URL."
				},
				{
					"kind": "property",
					"name": "port",
					"type": "string",
					"description": "Sets or retrieves the port number associated with a URL."
				},
				{
					"kind": "property",
					"name": "pathname",
					"type": "string",
					"description": "Sets or retrieves the file name or path specified by the object."
				},
				{
					"kind": "property",
					"name": "host",
					"type": "string",
					"description": "Sets or retrieves the hostname and port number of the location or URL."
				},
				{
					"kind": "property",
					"name": "hash",
					"type": "string",
					"description": "Sets or retrieves the subsection of the href property that follows the number sign (#)."
				},
				{
					"kind": "property",
					"name": "target",
					"type": "string",
					"description": "Sets or retrieves the window or frame at which to target content."
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string",
					"description": "Sets or retrieves a destination URL or an anchor point."
				},
				{
					"kind": "property",
					"name": "noHref",
					"type": "boolean",
					"description": "Sets or gets whether clicks in this region cause action."
				},
				{
					"kind": "property",
					"name": "shape",
					"type": "string",
					"description": "Sets or retrieves the shape of the object."
				},
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of an object.",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAreaElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAreaElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAreaElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "EventTarget",
			"signatures": [
				{
					"kind": "method",
					"name": "removeEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "dispatchEvent",
					"parameters": [
						{
							"name": "evt",
							"type": "Event"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGAngle",
			"signatures": [
				{
					"kind": "property",
					"name": "valueAsString",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "valueInSpecifiedUnits",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "value",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unitType",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "newValueSpecifiedUnits",
					"parameters": [
						{
							"name": "unitType",
							"type": "number"
						},
						{
							"name": "valueInSpecifiedUnits",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "convertToSpecifiedUnits",
					"parameters": [
						{
							"name": "unitType",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "SVG_ANGLETYPE_RAD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ANGLETYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ANGLETYPE_UNSPECIFIED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ANGLETYPE_DEG",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ANGLETYPE_GRAD",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAngle",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAngle"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAngle"
					},
					{
						"kind": "property",
						"name": "SVG_ANGLETYPE_RAD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_ANGLETYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_ANGLETYPE_UNSPECIFIED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_ANGLETYPE_DEG",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_ANGLETYPE_GRAD",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLButtonElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Sets or retrieves the default or selected value of the control."
				},
				{
					"kind": "property",
					"name": "status",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Gets the classification and default behavior of the button."
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "formTarget",
					"type": "string",
					"description": "Overrides the target attribute on a form element."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "property",
					"name": "formAction",
					"type": "string",
					"description": "Overrides the action attribute (where the data on a form is sent) on the parent form element."
				},
				{
					"kind": "property",
					"name": "autofocus",
					"type": "boolean",
					"description": "Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "formNoValidate",
					"type": "string",
					"description": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option."
				},
				{
					"kind": "property",
					"name": "formEnctype",
					"type": "string",
					"description": "Used to override the encoding (formEnctype attribute) specified on the form element."
				},
				{
					"kind": "property",
					"name": "formMethod",
					"type": "string",
					"description": "Overrides the submit method attribute previously specified on a form element."
				},
				{
					"kind": "method",
					"name": "createTextRange",
					"description": "Creates a TextRange object for the element.",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLButtonElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLButtonElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLButtonElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLSourceElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "The address or URL of the a media resource that is to be considered."
				},
				{
					"kind": "property",
					"name": "media",
					"type": "string",
					"description": "Gets or sets the intended media type of the media source."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Gets or sets the MIME type of a media resource."
				},
				{
					"kind": "property",
					"name": "msKeySystem",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLSourceElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLSourceElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLSourceElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CanvasGradient",
			"signatures": [
				{
					"kind": "method",
					"name": "addColorStop",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "color",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CanvasGradient",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CanvasGradient"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CanvasGradient"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "KeyboardEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "location",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "keyCode",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "shiftKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "which",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "locale",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "key",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "altKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "metaKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "char",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "ctrlKey",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "repeat",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "charCode",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "getModifierState",
					"parameters": [
						{
							"name": "keyArg",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "initKeyboardEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "keyArg",
							"type": "string"
						},
						{
							"name": "locationArg",
							"type": "number"
						},
						{
							"name": "modifiersListArg",
							"type": "string"
						},
						{
							"name": "repeat",
							"type": "boolean"
						},
						{
							"name": "locale",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_RIGHT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_STANDARD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_LEFT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_NUMPAD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_JOYSTICK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_KEY_LOCATION_MOBILE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "KeyboardEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "KeyboardEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "KeyboardEvent"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_RIGHT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_STANDARD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_LEFT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_NUMPAD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_JOYSTICK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_KEY_LOCATION_MOBILE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MessageEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "source",
					"type": "Window"
				},
				{
					"kind": "property",
					"name": "origin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "data",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "ports",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "initMessageEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "dataArg",
							"type": "any"
						},
						{
							"name": "originArg",
							"type": "string"
						},
						{
							"name": "lastEventIdArg",
							"type": "string"
						},
						{
							"name": "sourceArg",
							"type": "Window"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MessageEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MessageEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MessageEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGElement",
			"extends": [
				"Element"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onmouseover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "viewportElement",
					"type": "SVGElement"
				},
				{
					"kind": "property",
					"name": "onmousemove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ondblclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfocusout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfocusin",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "xmlbase",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmousedown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmouseup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onclick",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ownerSVGElement",
					"type": "SVGSVGElement"
				},
				{
					"kind": "property",
					"name": "id",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLScriptElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "defer",
					"type": "boolean",
					"description": "Sets or retrieves the status of the script."
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string",
					"description": "Retrieves or sets the text of the object as a string."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "Retrieves the URL to an external file that contains the source code or data."
				},
				{
					"kind": "property",
					"name": "htmlFor",
					"type": "string",
					"description": "Sets or retrieves the object that is bound to the event script."
				},
				{
					"kind": "property",
					"name": "charset",
					"type": "string",
					"description": "Sets or retrieves the character set used to encode the object."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Sets or retrieves the MIME type for the associated scripting engine."
				},
				{
					"kind": "property",
					"name": "event",
					"type": "string",
					"description": "Sets or retrieves the event for which the script is written."
				},
				{
					"kind": "property",
					"name": "async",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLScriptElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLScriptElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLScriptElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableRowElement",
			"extends": [
				"HTMLElement",
				"HTMLTableAlignment",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "rowIndex",
					"type": "number",
					"description": "Retrieves the position of the object in the rows collection for the table."
				},
				{
					"kind": "property",
					"name": "cells",
					"type": "HTMLCollection",
					"description": "Retrieves a collection of all cells in the table row."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "borderColorLight",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				},
				{
					"kind": "property",
					"name": "sectionRowIndex",
					"type": "number",
					"description": "Retrieves the position of the object in the collection."
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "any",
					"description": "Sets or retrieves the border color of the object."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "any",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "borderColorDark",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				},
				{
					"kind": "method",
					"name": "deleteCell",
					"description": "Removes the specified cell from the table row, as well as from the cells collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "insertCell",
					"description": "Creates a new cell in the table row, and adds the cell to the cells collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "HTMLElement"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableRowElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableRowElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableRowElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CanvasRenderingContext2D",
			"signatures": [
				{
					"kind": "property",
					"name": "miterLimit",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "font",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "globalCompositeOperation",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msFillRule",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lineCap",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msImageSmoothingEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "lineDashOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "shadowColor",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lineJoin",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "shadowOffsetX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "lineWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "canvas",
					"type": "HTMLCanvasElement"
				},
				{
					"kind": "property",
					"name": "strokeStyle",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "globalAlpha",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "shadowOffsetY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fillStyle",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "shadowBlur",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "textAlign",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "textBaseline",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "restore",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setTransform",
					"parameters": [
						{
							"name": "m11",
							"type": "number"
						},
						{
							"name": "m12",
							"type": "number"
						},
						{
							"name": "m21",
							"type": "number"
						},
						{
							"name": "m22",
							"type": "number"
						},
						{
							"name": "dx",
							"type": "number"
						},
						{
							"name": "dy",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "save",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "arc",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "radius",
							"type": "number"
						},
						{
							"name": "startAngle",
							"type": "number"
						},
						{
							"name": "endAngle",
							"type": "number"
						},
						{
							"name": "anticlockwise",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "measureText",
					"parameters": [
						{
							"name": "text",
							"type": "string"
						}
					],
					"returns": "TextMetrics"
				},
				{
					"kind": "method",
					"name": "isPointInPath",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "fillRule",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "quadraticCurveTo",
					"parameters": [
						{
							"name": "cpx",
							"type": "number"
						},
						{
							"name": "cpy",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "putImageData",
					"parameters": [
						{
							"name": "imagedata",
							"type": "ImageData"
						},
						{
							"name": "dx",
							"type": "number"
						},
						{
							"name": "dy",
							"type": "number"
						},
						{
							"name": "dirtyX",
							"optional": true,
							"type": "number"
						},
						{
							"name": "dirtyY",
							"optional": true,
							"type": "number"
						},
						{
							"name": "dirtyWidth",
							"optional": true,
							"type": "number"
						},
						{
							"name": "dirtyHeight",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "rotate",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "fillText",
					"parameters": [
						{
							"name": "text",
							"type": "string"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "maxWidth",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "translate",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "scale",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createRadialGradient",
					"parameters": [
						{
							"name": "x0",
							"type": "number"
						},
						{
							"name": "y0",
							"type": "number"
						},
						{
							"name": "r0",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						},
						{
							"name": "r1",
							"type": "number"
						}
					],
					"returns": "CanvasGradient"
				},
				{
					"kind": "method",
					"name": "lineTo",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getLineDash",
					"returns": {
						"kind": "array",
						"type": "number"
					}
				},
				{
					"kind": "method",
					"name": "fill",
					"parameters": [
						{
							"name": "fillRule",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createImageData",
					"parameters": [
						{
							"name": "imageDataOrSw",
							"type": "any"
						},
						{
							"name": "sh",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "ImageData"
				},
				{
					"kind": "method",
					"name": "createPattern",
					"parameters": [
						{
							"name": "image",
							"type": "HTMLElement"
						},
						{
							"name": "repetition",
							"type": "string"
						}
					],
					"returns": "CanvasPattern"
				},
				{
					"kind": "method",
					"name": "closePath",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "rect",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						},
						{
							"name": "h",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clip",
					"parameters": [
						{
							"name": "fillRule",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clearRect",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						},
						{
							"name": "h",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "moveTo",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getImageData",
					"parameters": [
						{
							"name": "sx",
							"type": "number"
						},
						{
							"name": "sy",
							"type": "number"
						},
						{
							"name": "sw",
							"type": "number"
						},
						{
							"name": "sh",
							"type": "number"
						}
					],
					"returns": "ImageData"
				},
				{
					"kind": "method",
					"name": "fillRect",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						},
						{
							"name": "h",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bezierCurveTo",
					"parameters": [
						{
							"name": "cp1x",
							"type": "number"
						},
						{
							"name": "cp1y",
							"type": "number"
						},
						{
							"name": "cp2x",
							"type": "number"
						},
						{
							"name": "cp2y",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "drawImage",
					"parameters": [
						{
							"name": "image",
							"type": "HTMLElement"
						},
						{
							"name": "offsetX",
							"type": "number"
						},
						{
							"name": "offsetY",
							"type": "number"
						},
						{
							"name": "width",
							"optional": true,
							"type": "number"
						},
						{
							"name": "height",
							"optional": true,
							"type": "number"
						},
						{
							"name": "canvasOffsetX",
							"optional": true,
							"type": "number"
						},
						{
							"name": "canvasOffsetY",
							"optional": true,
							"type": "number"
						},
						{
							"name": "canvasImageWidth",
							"optional": true,
							"type": "number"
						},
						{
							"name": "canvasImageHeight",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "transform",
					"parameters": [
						{
							"name": "m11",
							"type": "number"
						},
						{
							"name": "m12",
							"type": "number"
						},
						{
							"name": "m21",
							"type": "number"
						},
						{
							"name": "m22",
							"type": "number"
						},
						{
							"name": "dx",
							"type": "number"
						},
						{
							"name": "dy",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stroke",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "strokeRect",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						},
						{
							"name": "h",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setLineDash",
					"parameters": [
						{
							"name": "segments",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "strokeText",
					"parameters": [
						{
							"name": "text",
							"type": "string"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "maxWidth",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "beginPath",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "arcTo",
					"parameters": [
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						},
						{
							"name": "x2",
							"type": "number"
						},
						{
							"name": "y2",
							"type": "number"
						},
						{
							"name": "radius",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createLinearGradient",
					"parameters": [
						{
							"name": "x0",
							"type": "number"
						},
						{
							"name": "y0",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						}
					],
					"returns": "CanvasGradient"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CanvasRenderingContext2D",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CanvasRenderingContext2D"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CanvasRenderingContext2D"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCSSRuleList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "CSSStyleRule"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "CSSStyleRule"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCSSRuleList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSCSSRuleList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCSSRuleList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoHorizontalAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoHorizontalAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoHorizontalAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoHorizontalAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegArcAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "sweepFlag",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "r2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "angle",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "r1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "largeArcFlag",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegArcAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegArcAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegArcAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTransformList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "consolidate",
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGTransform"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGTransform"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGTransform"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGTransform"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "createSVGTransformFromMatrix",
					"parameters": [
						{
							"name": "matrix",
							"type": "SVGMatrix"
						}
					],
					"returns": "SVGTransform"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGTransformList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTransformList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTransformList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLHtmlElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "version",
					"type": "string",
					"description": "Sets or retrieves the DTD version that governs the current document."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLHtmlElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLHtmlElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLHtmlElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegClosePath",
			"extends": [
				"SVGPathSeg"
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegClosePath",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegClosePath"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegClosePath"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLFrameElement",
			"extends": [
				"HTMLElement",
				"GetSVGDocument",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "any",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "scrolling",
					"type": "string",
					"description": "Sets or retrieves whether the frame can be scrolled."
				},
				{
					"kind": "property",
					"name": "marginHeight",
					"type": "string",
					"description": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame."
				},
				{
					"kind": "property",
					"name": "marginWidth",
					"type": "string",
					"description": "Sets or retrieves the left and right margin widths before displaying the text in a frame."
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "any",
					"description": "Sets or retrieves the border color of the object."
				},
				{
					"kind": "property",
					"name": "frameSpacing",
					"type": "any",
					"description": "Sets or retrieves the amount of additional space between the frames."
				},
				{
					"kind": "property",
					"name": "frameBorder",
					"type": "string",
					"description": "Sets or retrieves whether to display a border for the frame."
				},
				{
					"kind": "property",
					"name": "noResize",
					"type": "boolean",
					"description": "Sets or retrieves whether the user can resize the frame."
				},
				{
					"kind": "property",
					"name": "contentWindow",
					"type": "Window",
					"description": "Retrieves the object of the specified."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "Sets or retrieves a URL to be loaded by the object."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the frame name."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "any",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "contentDocument",
					"type": "Document",
					"description": "Retrieves the document object of the page or frame."
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string",
					"description": "Specifies the properties of a border drawn around an object."
				},
				{
					"kind": "property",
					"name": "longDesc",
					"type": "string",
					"description": "Sets or retrieves a URI to a long description of the object."
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Raised when the object has been completely received from the server."
				},
				{
					"kind": "property",
					"name": "security",
					"type": "any",
					"description": "Sets the value indicating whether the source file of a frame or iframe has specific security restrictions applied."
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLFrameElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLFrameElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLFrameElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedLength",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGLength"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedLength",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedLength"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedLength"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedPoints",
			"signatures": [
				{
					"kind": "property",
					"name": "points",
					"type": "SVGPointList"
				},
				{
					"kind": "property",
					"name": "animatedPoints",
					"type": "SVGPointList"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGDefsElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGDefsElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGDefsElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGDefsElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLQuoteElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "dateTime",
					"type": "string",
					"description": "Sets or retrieves the date and time of a modification to the object."
				},
				{
					"kind": "property",
					"name": "cite",
					"type": "string",
					"description": "Sets or retrieves reference information about the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLQuoteElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLQuoteElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLQuoteElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSMediaRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "media",
					"type": "MediaList"
				},
				{
					"kind": "property",
					"name": "cssRules",
					"type": "CSSRuleList"
				},
				{
					"kind": "method",
					"name": "insertRule",
					"parameters": [
						{
							"name": "rule",
							"type": "string"
						},
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "deleteRule",
					"parameters": [
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSMediaRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSMediaRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSMediaRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowModal",
			"signatures": [
				{
					"kind": "property",
					"name": "dialogArguments",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "returnValue",
					"type": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "XMLHttpRequest",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "responseBody",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "status",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "responseXML",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "ontimeout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "statusText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onreadystatechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "timeout",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "response",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "withCredentials",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "responseType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onloadend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "upload",
					"type": "XMLHttpRequestEventTarget"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msCaching",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "open",
					"parameters": [
						{
							"name": "method",
							"type": "string"
						},
						{
							"name": "url",
							"type": "string"
						},
						{
							"name": "async",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "user",
							"optional": true,
							"type": "string"
						},
						{
							"name": "password",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "send",
					"parameters": [
						{
							"name": "data",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getAllResponseHeaders",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "setRequestHeader",
					"parameters": [
						{
							"name": "header",
							"type": "string"
						},
						{
							"name": "value",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getResponseHeader",
					"parameters": [
						{
							"name": "header",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "msCachingEnabled",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "overrideMimeType",
					"parameters": [
						{
							"name": "mime",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "LOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DONE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "OPENED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HEADERS_RECEIVED",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "XMLHttpRequest",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "XMLHttpRequest"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "XMLHttpRequest"
					},
					{
						"kind": "property",
						"name": "LOADING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DONE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "OPENED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HEADERS_RECEIVED",
						"type": "number"
					},
					{
						"kind": "method",
						"name": "create",
						"returns": "XMLHttpRequest"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableHeaderCellElement",
			"extends": [
				"HTMLTableCellElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "scope",
					"type": "string",
					"description": "Sets or retrieves the group of cells in a table to which the object's information applies."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableHeaderCellElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableHeaderCellElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableHeaderCellElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLDListElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListSpaceReduction"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDListElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDListElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDListElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSDataBindingExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "dataSrc",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "dataFormatAs",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "dataFld",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoHorizontalRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoHorizontalRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoHorizontalRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoHorizontalRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGEllipseElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "ry",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "cx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "rx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "cy",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGEllipseElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGEllipseElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGEllipseElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "target",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGStylable",
			"signatures": [
				{
					"kind": "property",
					"name": "className",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "style",
					"type": "CSSStyleDeclaration"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGTransformable",
			"extends": [
				"SVGLocatable"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "transform",
					"type": "SVGAnimatedTransformList"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLFrameSetElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "ononline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "any",
					"description": "Sets or retrieves the border color of the object."
				},
				{
					"kind": "property",
					"name": "rows",
					"type": "string",
					"description": "Sets or retrieves the frame heights of the object."
				},
				{
					"kind": "property",
					"name": "cols",
					"type": "string",
					"description": "Sets or retrieves the frame widths of the object."
				},
				{
					"kind": "property",
					"name": "onblur",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the object loses the input focus."
				},
				{
					"kind": "property",
					"name": "frameSpacing",
					"type": "any",
					"description": "Sets or retrieves the amount of additional space between the frames."
				},
				{
					"kind": "property",
					"name": "onfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					},
					"description": "Fires when the object receives focus."
				},
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "frameBorder",
					"type": "string",
					"description": "Sets or retrieves whether to display a border for the frame."
				},
				{
					"kind": "property",
					"name": "onresize",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onafterprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforeprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onoffline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onhashchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onbeforeunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "BeforeUnloadEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onstorage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "StorageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpageshow",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpagehide",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"online\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"offline\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"unload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"hashchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeunload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "BeforeUnloadEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"storage\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "StorageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pageshow\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pagehide\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLFrameSetElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLFrameSetElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLFrameSetElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Screen",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "deviceXDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fontSmoothingEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "bufferDepth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "logicalXDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "systemXDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "availHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "logicalYDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "systemYDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "updateInterval",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "colorDepth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "availWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "deviceYDPI",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pixelDepth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msOrientation",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmsorientationchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "msLockOrientation",
					"parameters": [
						{
							"name": "orientation",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "msLockOrientation",
					"parameters": [
						{
							"name": "orientations",
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "msUnlockOrientation",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msorientationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Screen",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Screen"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Screen"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Coordinates",
			"signatures": [
				{
					"kind": "property",
					"name": "altitudeAccuracy",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "longitude",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "latitude",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "speed",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "heading",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "altitude",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "accuracy",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Coordinates",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Coordinates"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Coordinates"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NavigatorGeolocation",
			"signatures": [
				{
					"kind": "property",
					"name": "geolocation",
					"type": "Geolocation"
				}
			]
		},
		{
			"kind": "interface",
			"name": "NavigatorContentUtils"
		},
		{
			"kind": "interface",
			"name": "EventListener",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "evt",
							"type": "Event"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGLangSpace",
			"signatures": [
				{
					"kind": "property",
					"name": "xmllang",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "xmlspace",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DataTransfer",
			"signatures": [
				{
					"kind": "property",
					"name": "effectAllowed",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "dropEffect",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "types",
					"type": "DOMStringList"
				},
				{
					"kind": "property",
					"name": "files",
					"type": "FileList"
				},
				{
					"kind": "method",
					"name": "clearData",
					"parameters": [
						{
							"name": "format",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setData",
					"parameters": [
						{
							"name": "format",
							"type": "string"
						},
						{
							"name": "data",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getData",
					"parameters": [
						{
							"name": "format",
							"type": "string"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DataTransfer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DataTransfer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DataTransfer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "FocusEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "relatedTarget",
					"type": "EventTarget"
				},
				{
					"kind": "method",
					"name": "initFocusEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "FocusEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "FocusEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "FocusEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Range",
			"signatures": [
				{
					"kind": "property",
					"name": "startOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "collapsed",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "endOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "startContainer",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "endContainer",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "commonAncestorContainer",
					"type": "Node"
				},
				{
					"kind": "method",
					"name": "setStart",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						},
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setEndBefore",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setStartBefore",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "selectNode",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "detach",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getBoundingClientRect",
					"returns": "ClientRect"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "compareBoundaryPoints",
					"parameters": [
						{
							"name": "how",
							"type": "number"
						},
						{
							"name": "sourceRange",
							"type": "Range"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "insertNode",
					"parameters": [
						{
							"name": "newNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "collapse",
					"parameters": [
						{
							"name": "toStart",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "selectNodeContents",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "cloneContents",
					"returns": "DocumentFragment"
				},
				{
					"kind": "method",
					"name": "setEnd",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						},
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "cloneRange",
					"returns": "Range"
				},
				{
					"kind": "method",
					"name": "getClientRects",
					"returns": "ClientRectList"
				},
				{
					"kind": "method",
					"name": "surroundContents",
					"parameters": [
						{
							"name": "newParent",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteContents",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setStartAfter",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "extractContents",
					"returns": "DocumentFragment"
				},
				{
					"kind": "method",
					"name": "setEndAfter",
					"parameters": [
						{
							"name": "refNode",
							"type": "Node"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createContextualFragment",
					"parameters": [
						{
							"name": "fragment",
							"type": "string"
						}
					],
					"returns": "DocumentFragment"
				},
				{
					"kind": "property",
					"name": "END_TO_END",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "START_TO_START",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "START_TO_END",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "END_TO_START",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Range",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Range"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Range"
					},
					{
						"kind": "property",
						"name": "END_TO_END",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "START_TO_START",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "START_TO_END",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "END_TO_START",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPoint",
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "matrixTransform",
					"parameters": [
						{
							"name": "matrix",
							"type": "SVGMatrix"
						}
					],
					"returns": "SVGPoint"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPoint",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPoint"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPoint"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSPluginsCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "refresh",
					"parameters": [
						{
							"name": "reload",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSPluginsCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSPluginsCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSPluginsCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedNumberList",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGNumberList"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGNumberList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedNumberList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedNumberList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedNumberList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGSVGElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGZoomAndPan",
				"DocumentEvent",
				"SVGLangSpace",
				"SVGLocatable",
				"SVGTests",
				"SVGFitToViewBox",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "contentStyleType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onzoom",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "viewport",
					"type": "SVGRect"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "pixelUnitToMillimeterY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onresize",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenPixelToMillimeterY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "contentScriptType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pixelUnitToMillimeterX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "currentTranslate",
					"type": "SVGPoint"
				},
				{
					"kind": "property",
					"name": "onunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "currentScale",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onscroll",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenPixelToMillimeterX",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "setCurrentTime",
					"parameters": [
						{
							"name": "seconds",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createSVGLength",
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "getIntersectionList",
					"parameters": [
						{
							"name": "rect",
							"type": "SVGRect"
						},
						{
							"name": "referenceElement",
							"type": "SVGElement"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "unpauseAnimations",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createSVGRect",
					"returns": "SVGRect"
				},
				{
					"kind": "method",
					"name": "checkIntersection",
					"parameters": [
						{
							"name": "element",
							"type": "SVGElement"
						},
						{
							"name": "rect",
							"type": "SVGRect"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "unsuspendRedrawAll",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "pauseAnimations",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "suspendRedraw",
					"parameters": [
						{
							"name": "maxWaitMilliseconds",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "deselectAll",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createSVGAngle",
					"returns": "SVGAngle"
				},
				{
					"kind": "method",
					"name": "getEnclosureList",
					"parameters": [
						{
							"name": "rect",
							"type": "SVGRect"
						},
						{
							"name": "referenceElement",
							"type": "SVGElement"
						}
					],
					"returns": "NodeList"
				},
				{
					"kind": "method",
					"name": "createSVGTransform",
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "unsuspendRedraw",
					"parameters": [
						{
							"name": "suspendHandleID",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "forceRedraw",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getCurrentTime",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "checkEnclosure",
					"parameters": [
						{
							"name": "element",
							"type": "SVGElement"
						},
						{
							"name": "rect",
							"type": "SVGRect"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createSVGMatrix",
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "createSVGPoint",
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "createSVGNumber",
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "createSVGTransformFromMatrix",
					"parameters": [
						{
							"name": "matrix",
							"type": "SVGMatrix"
						}
					],
					"returns": "SVGTransform"
				},
				{
					"kind": "method",
					"name": "getComputedStyle",
					"parameters": [
						{
							"name": "elt",
							"type": "Element"
						},
						{
							"name": "pseudoElt",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "CSSStyleDeclaration"
				},
				{
					"kind": "method",
					"name": "getElementById",
					"parameters": [
						{
							"name": "elementId",
							"type": "string"
						}
					],
					"returns": "Element"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"zoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"unload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGSVGElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGSVGElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGSVGElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLLabelElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "htmlFor",
					"type": "string",
					"description": "Sets or retrieves the object to which the given label object is assigned."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLLabelElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLLabelElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLLabelElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSResourceMetadata",
			"signatures": [
				{
					"kind": "property",
					"name": "protocol",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fileSize",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fileUpdatedDate",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "nameProp",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fileCreatedDate",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "fileModifiedDate",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "mimeType",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLLegendElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLLegendElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLLegendElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLLegendElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLDirectoryElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListSpaceReduction",
				"DOML2DeprecatedListNumberingAndBulletStyle"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDirectoryElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDirectoryElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDirectoryElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedInteger",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedInteger",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedInteger"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedInteger"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTextElement",
			"extends": [
				"SVGTextPositioningElement",
				"SVGTransformable"
			]
		},
		{
			"kind": "variable",
			"name": "SVGTextElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTextElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTextElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTSpanElement",
			"extends": [
				"SVGTextPositioningElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGTSpanElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTSpanElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTSpanElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLLIElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListNumberingAndBulletStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "number",
					"description": "Sets or retrieves the value of a list item."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLLIElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLLIElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLLIElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoVerticalAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoVerticalAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoVerticalAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoVerticalAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSStorageExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "remainingSpace",
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGStyleElement",
			"extends": [
				"SVGElement",
				"SVGLangSpace"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "media",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "title",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGStyleElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGStyleElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGStyleElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCurrentStyleCSSProperties",
			"extends": [
				"MSCSSProperties"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "blockDirection",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipBottom",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipLeft",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipRight",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clipTop",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "hasLayout",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCurrentStyleCSSProperties",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSCurrentStyleCSSProperties"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCurrentStyleCSSProperties"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSHTMLCollectionExtensions",
			"signatures": [
				{
					"kind": "method",
					"name": "urns",
					"parameters": [
						{
							"name": "urn",
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "tags",
					"parameters": [
						{
							"name": "tagName",
							"type": "any"
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Storage",
			"extends": [
				"MSStorageExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "key",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "key",
						"type": "string"
					},
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "setItem",
					"parameters": [
						{
							"name": "key",
							"type": "string"
						},
						{
							"name": "data",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "key",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "key",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Storage",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Storage"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Storage"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLIFrameElement",
			"extends": [
				"HTMLElement",
				"GetSVGDocument",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "scrolling",
					"type": "string",
					"description": "Sets or retrieves whether the frame can be scrolled."
				},
				{
					"kind": "property",
					"name": "marginHeight",
					"type": "string",
					"description": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame."
				},
				{
					"kind": "property",
					"name": "marginWidth",
					"type": "string",
					"description": "Sets or retrieves the left and right margin widths before displaying the text in a frame."
				},
				{
					"kind": "property",
					"name": "frameSpacing",
					"type": "any",
					"description": "Sets or retrieves the amount of additional space between the frames."
				},
				{
					"kind": "property",
					"name": "frameBorder",
					"type": "string",
					"description": "Sets or retrieves whether to display a border for the frame."
				},
				{
					"kind": "property",
					"name": "noResize",
					"type": "boolean",
					"description": "Sets or retrieves whether the user can resize the frame."
				},
				{
					"kind": "property",
					"name": "vspace",
					"type": "number",
					"description": "Sets or retrieves the vertical margin for the object."
				},
				{
					"kind": "property",
					"name": "contentWindow",
					"type": "Window",
					"description": "Retrieves the object of the specified."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "Sets or retrieves a URL to be loaded by the object."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the frame name."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string",
					"description": "Specifies the properties of a border drawn around an object."
				},
				{
					"kind": "property",
					"name": "contentDocument",
					"type": "Document",
					"description": "Retrieves the document object of the page or frame."
				},
				{
					"kind": "property",
					"name": "hspace",
					"type": "number",
					"description": "Sets or retrieves the horizontal margin for the object."
				},
				{
					"kind": "property",
					"name": "longDesc",
					"type": "string",
					"description": "Sets or retrieves a URI to a long description of the object."
				},
				{
					"kind": "property",
					"name": "security",
					"type": "any",
					"description": "Sets the value indicating whether the source file of a frame or iframe has specific security restrictions applied."
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					},
					"description": "Raised when the object has been completely received from the server."
				},
				{
					"kind": "property",
					"name": "sandbox",
					"type": "DOMSettableTokenList"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLIFrameElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLIFrameElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLIFrameElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextRangeCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "TextRange"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "TextRange"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextRangeCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextRangeCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextRangeCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLBodyElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedBackgroundStyle",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "scroll",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "ononline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onblur",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "noWrap",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onfocus",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "text",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "bgProperties",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onresize",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "link",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "aLink",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "bottomMargin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "topMargin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onafterprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "vLink",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onbeforeprint",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onoffline",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onhashchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "rightMargin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onbeforeunload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "BeforeUnloadEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "leftMargin",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onstorage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "StorageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpopstate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PopStateEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpageshow",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpagehide",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "createTextRange",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"online\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeprint\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"offline\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"unload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"hashchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeunload\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "BeforeUnloadEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"storage\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "StorageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"popstate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PopStateEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pageshow\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pagehide\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PageTransitionEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBodyElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBodyElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBodyElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DocumentType",
			"extends": [
				"Node"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "notations",
					"type": "NamedNodeMap"
				},
				{
					"kind": "property",
					"name": "systemId",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "internalSubset",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "entities",
					"type": "NamedNodeMap"
				},
				{
					"kind": "property",
					"name": "publicId",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DocumentType",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DocumentType"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DocumentType"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGRadialGradientElement",
			"extends": [
				"SVGGradientElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "cx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "r",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "cy",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "fx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "fy",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGRadialGradientElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGRadialGradientElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGRadialGradientElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MutationEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "newValue",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "attrChange",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "attrName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "prevValue",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "relatedNode",
					"type": "Node"
				},
				{
					"kind": "method",
					"name": "initMutationEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "relatedNodeArg",
							"type": "Node"
						},
						{
							"name": "prevValueArg",
							"type": "string"
						},
						{
							"name": "newValueArg",
							"type": "string"
						},
						{
							"name": "attrNameArg",
							"type": "string"
						},
						{
							"name": "attrChangeArg",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "MODIFICATION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "REMOVAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ADDITION",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MutationEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MutationEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MutationEvent"
					},
					{
						"kind": "property",
						"name": "MODIFICATION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "REMOVAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ADDITION",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DragEvent",
			"extends": [
				"MouseEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "dataTransfer",
					"type": "DataTransfer"
				},
				{
					"kind": "method",
					"name": "initDragEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "ctrlKeyArg",
							"type": "boolean"
						},
						{
							"name": "altKeyArg",
							"type": "boolean"
						},
						{
							"name": "shiftKeyArg",
							"type": "boolean"
						},
						{
							"name": "metaKeyArg",
							"type": "boolean"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						},
						{
							"name": "dataTransferArg",
							"type": "DataTransfer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msConvertURL",
					"parameters": [
						{
							"name": "file",
							"type": "File"
						},
						{
							"name": "targetType",
							"type": "string"
						},
						{
							"name": "targetURL",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DragEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DragEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DragEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableSectionElement",
			"extends": [
				"HTMLElement",
				"HTMLTableAlignment",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves a value that indicates the table alignment."
				},
				{
					"kind": "property",
					"name": "rows",
					"type": "HTMLCollection",
					"description": "Sets or retrieves the number of horizontal rows contained in the object."
				},
				{
					"kind": "method",
					"name": "deleteRow",
					"description": "Removes the specified row (tr) from the element and from the rows collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies the zero-based position in the rows collection of the row to remove.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "moveRow",
					"description": "Moves a table row to a new position.",
					"parameters": [
						{
							"name": "indexFrom",
							"description": "Number that specifies the index in the rows collection of the table row that is moved.",
							"optional": true,
							"type": "number"
						},
						{
							"name": "indexTo",
							"description": "Number that specifies where the row is moved within the rows collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "insertRow",
					"description": "Creates a new row (tr) in the table, and adds the row to the rows collection.",
					"parameters": [
						{
							"name": "index",
							"description": "Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "HTMLElement"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableSectionElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableSectionElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableSectionElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedListNumberingAndBulletStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLInputElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "status",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "selectionStart",
					"type": "number",
					"description": "Gets or sets the starting position or offset of a text selection."
				},
				{
					"kind": "property",
					"name": "indeterminate",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "readOnly",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "loop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "selectionEnd",
					"type": "number",
					"description": "Gets or sets the end position or offset of a text selection."
				},
				{
					"kind": "property",
					"name": "vrml",
					"type": "string",
					"description": "Sets or retrieves the URL of the virtual reality modeling language (VRML) world to be displayed in the window."
				},
				{
					"kind": "property",
					"name": "lowsrc",
					"type": "string",
					"description": "Sets or retrieves a lower resolution image to display."
				},
				{
					"kind": "property",
					"name": "vspace",
					"type": "number",
					"description": "Sets or retrieves the vertical margin for the object."
				},
				{
					"kind": "property",
					"name": "accept",
					"type": "string",
					"description": "Sets or retrieves a comma-separated list of content types."
				},
				{
					"kind": "property",
					"name": "alt",
					"type": "string",
					"description": "Sets or retrieves a text alternative to the graphic."
				},
				{
					"kind": "property",
					"name": "defaultChecked",
					"type": "boolean",
					"description": "Sets or retrieves the state of the check box or radio button."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Returns the value of the data at the cursor's current position."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "The address or URL of the a media resource that is to be considered."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "useMap",
					"type": "string",
					"description": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "border",
					"type": "string",
					"description": "Sets or retrieves the width of the border to draw around the object."
				},
				{
					"kind": "property",
					"name": "dynsrc",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "checked",
					"type": "boolean",
					"description": "Sets or retrieves the state of the check box or radio button."
				},
				{
					"kind": "property",
					"name": "hspace",
					"type": "number",
					"description": "Sets or retrieves the width of the border to draw around the object."
				},
				{
					"kind": "property",
					"name": "maxLength",
					"type": "number",
					"description": "Sets or retrieves the maximum number of characters that the user can enter in a text control."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Returns the content type of the object."
				},
				{
					"kind": "property",
					"name": "defaultValue",
					"type": "string",
					"description": "Sets or retrieves the initial contents of the object."
				},
				{
					"kind": "property",
					"name": "complete",
					"type": "boolean",
					"description": "Retrieves whether the object is fully loaded."
				},
				{
					"kind": "property",
					"name": "start",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "files",
					"type": "FileList",
					"description": "Returns a FileList object on a file type input object."
				},
				{
					"kind": "property",
					"name": "max",
					"type": "string",
					"description": "Defines the maximum acceptable value for an input element with type=\"number\".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field."
				},
				{
					"kind": "property",
					"name": "formTarget",
					"type": "string",
					"description": "Overrides the target attribute on a form element."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "property",
					"name": "step",
					"type": "string",
					"description": "Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field."
				},
				{
					"kind": "property",
					"name": "autofocus",
					"type": "boolean",
					"description": "Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing."
				},
				{
					"kind": "property",
					"name": "required",
					"type": "boolean",
					"description": "When present, marks an element that can't be submitted without a value."
				},
				{
					"kind": "property",
					"name": "formEnctype",
					"type": "string",
					"description": "Used to override the encoding (formEnctype attribute) specified on the form element."
				},
				{
					"kind": "property",
					"name": "valueAsNumber",
					"type": "number",
					"description": "Returns the input field value as a number."
				},
				{
					"kind": "property",
					"name": "placeholder",
					"type": "string",
					"description": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field."
				},
				{
					"kind": "property",
					"name": "formMethod",
					"type": "string",
					"description": "Overrides the submit method attribute previously specified on a form element."
				},
				{
					"kind": "property",
					"name": "list",
					"type": "HTMLElement",
					"description": "Specifies the ID of a pre-defined datalist of options for an input element."
				},
				{
					"kind": "property",
					"name": "autocomplete",
					"type": "string",
					"description": "Specifies whether autocomplete is applied to an editable text field."
				},
				{
					"kind": "property",
					"name": "min",
					"type": "string",
					"description": "Defines the minimum acceptable value for an input element with type=\"number\". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field."
				},
				{
					"kind": "property",
					"name": "formAction",
					"type": "string",
					"description": "Overrides the action attribute (where the data on a form is sent) on the parent form element."
				},
				{
					"kind": "property",
					"name": "pattern",
					"type": "string",
					"description": "Gets or sets a string containing a regular expression that the user's input must match."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "formNoValidate",
					"type": "string",
					"description": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option."
				},
				{
					"kind": "property",
					"name": "multiple",
					"type": "boolean",
					"description": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list."
				},
				{
					"kind": "method",
					"name": "createTextRange",
					"description": "Creates a TextRange object for the element.",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "setSelectionRange",
					"description": "Sets the start and end positions of a selection in a text field.",
					"parameters": [
						{
							"name": "start",
							"description": "The offset into the text field for the start of the selection.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The offset into the text field for the end of the selection.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "select",
					"description": "Makes the selection equal to the current object.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "stepDown",
					"description": "Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value.",
					"parameters": [
						{
							"name": "n",
							"description": "Value to decrement the value by.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stepUp",
					"description": "Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value.",
					"parameters": [
						{
							"name": "n",
							"description": "Value to increment the value by.",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLInputElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLInputElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLInputElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAnchorElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "rel",
					"type": "string",
					"description": "Sets or retrieves the relationship between the object and the destination of the link."
				},
				{
					"kind": "property",
					"name": "protocol",
					"type": "string",
					"description": "Contains the protocol of the URL."
				},
				{
					"kind": "property",
					"name": "search",
					"type": "string",
					"description": "Sets or retrieves the substring of the href property that follows the question mark."
				},
				{
					"kind": "property",
					"name": "coords",
					"type": "string",
					"description": "Sets or retrieves the coordinates of the object."
				},
				{
					"kind": "property",
					"name": "hostname",
					"type": "string",
					"description": "Contains the hostname of a URL."
				},
				{
					"kind": "property",
					"name": "pathname",
					"type": "string",
					"description": "Contains the pathname of the URL."
				},
				{
					"kind": "property",
					"name": "Methods",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "target",
					"type": "string",
					"description": "Sets or retrieves the window or frame at which to target content."
				},
				{
					"kind": "property",
					"name": "protocolLong",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string",
					"description": "Sets or retrieves a destination URL or an anchor point."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the shape of the object."
				},
				{
					"kind": "property",
					"name": "charset",
					"type": "string",
					"description": "Sets or retrieves the character set used to encode the object."
				},
				{
					"kind": "property",
					"name": "hreflang",
					"type": "string",
					"description": "Sets or retrieves the language code of the object."
				},
				{
					"kind": "property",
					"name": "port",
					"type": "string",
					"description": "Sets or retrieves the port number associated with a URL."
				},
				{
					"kind": "property",
					"name": "host",
					"type": "string",
					"description": "Contains the hostname and port values of the URL."
				},
				{
					"kind": "property",
					"name": "hash",
					"type": "string",
					"description": "Contains the anchor portion of the URL including the hash sign (#)."
				},
				{
					"kind": "property",
					"name": "nameProp",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "urn",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "rev",
					"type": "string",
					"description": "Sets or retrieves the relationship between the object and the destination of the link."
				},
				{
					"kind": "property",
					"name": "shape",
					"type": "string",
					"description": "Sets or retrieves the shape of the object."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "mimeType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string",
					"description": "Retrieves or sets the text of the object as a string."
				},
				{
					"kind": "method",
					"name": "toString",
					"description": "Returns a string representation of an object.",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAnchorElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAnchorElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAnchorElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLParamElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Sets or retrieves the value of an input parameter for an element."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of an input parameter for an element."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Sets or retrieves the content type of the resource designated by the value attribute."
				},
				{
					"kind": "property",
					"name": "valueType",
					"type": "string",
					"description": "Sets or retrieves the data type of the value attribute."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLParamElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLParamElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLParamElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGImageElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "preserveAspectRatio",
					"type": "SVGAnimatedPreserveAspectRatio"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGImageElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGImageElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGImageElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedNumber",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedNumber",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedNumber"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedNumber"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceTiming",
			"signatures": [
				{
					"kind": "property",
					"name": "redirectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domComplete",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "loadEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msFirstPaint",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unloadEventEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fetchStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "requestStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domInteractive",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "navigationStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "loadEventEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domLoading",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "redirectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unloadEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domContentLoadedEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domContentLoadedEventEnd",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "toJSON",
					"returns": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceTiming",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceTiming"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceTiming"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLPreElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedTextFlowControl"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Sets or gets a value that you can use to implement your own width functionality for the object."
				},
				{
					"kind": "property",
					"name": "cite",
					"type": "string",
					"description": "Indicates a citation by rendering text in italic type."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLPreElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLPreElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLPreElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "EventException",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "DISPATCH_REQUEST_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSPECIFIED_EVENT_TYPE_ERR",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "EventException",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "EventException"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "EventException"
					},
					{
						"kind": "property",
						"name": "DISPATCH_REQUEST_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSPECIFIED_EVENT_TYPE_ERR",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSNavigatorDoNotTrack",
			"signatures": [
				{
					"kind": "property",
					"name": "msDoNotTrack",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "removeSiteSpecificTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "ExceptionInformation"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeWebWideTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "ExceptionInformation"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "storeWebWideTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "StoreExceptionsInformation"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "storeSiteSpecificTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "StoreSiteSpecificExceptionsInformation"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "confirmSiteSpecificTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "ConfirmSiteSpecificExceptionsInformation"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "confirmWebWideTrackingException",
					"parameters": [
						{
							"name": "args",
							"type": "ExceptionInformation"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "NavigatorOnLine",
			"signatures": [
				{
					"kind": "property",
					"name": "onLine",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "WindowLocalStorage",
			"signatures": [
				{
					"kind": "property",
					"name": "localStorage",
					"type": "Storage"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGMetadataElement",
			"extends": [
				"SVGElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGMetadataElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGMetadataElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGMetadataElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegArcRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "sweepFlag",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "r2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "angle",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "r1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "largeArcFlag",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegArcRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegArcRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegArcRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegMovetoAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegMovetoAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegMovetoAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegMovetoAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGStringList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "string"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "string"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGStringList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGStringList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGStringList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "XDomainRequest",
			"signatures": [
				{
					"kind": "property",
					"name": "timeout",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ontimeout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "responseText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "contentType",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "open",
					"parameters": [
						{
							"name": "method",
							"type": "string"
						},
						{
							"name": "url",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "send",
					"parameters": [
						{
							"name": "data",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "XDomainRequest",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "XDomainRequest"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "XDomainRequest"
					},
					{
						"kind": "method",
						"name": "create",
						"returns": "XDomainRequest"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedBackgroundColorStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "bgColor",
					"type": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "ElementTraversal",
			"signatures": [
				{
					"kind": "property",
					"name": "childElementCount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "previousElementSibling",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "lastElementChild",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "nextElementSibling",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "firstElementChild",
					"type": "Element"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGLength",
			"signatures": [
				{
					"kind": "property",
					"name": "valueAsString",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "valueInSpecifiedUnits",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "value",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unitType",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "newValueSpecifiedUnits",
					"parameters": [
						{
							"name": "unitType",
							"type": "number"
						},
						{
							"name": "valueInSpecifiedUnits",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "convertToSpecifiedUnits",
					"parameters": [
						{
							"name": "unitType",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_NUMBER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_CM",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_PC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_PERCENTAGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_MM",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_PT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_IN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_EMS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_PX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_LENGTHTYPE_EXS",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGLength",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGLength"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGLength"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_NUMBER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_CM",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_PC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_PERCENTAGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_MM",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_PT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_IN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_EMS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_PX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_LENGTHTYPE_EXS",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPolygonElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGAnimatedPoints",
				"SVGTests",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGPolygonElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPolygonElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPolygonElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLPhraseElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "dateTime",
					"type": "string",
					"description": "Sets or retrieves the date and time of a modification to the object."
				},
				{
					"kind": "property",
					"name": "cite",
					"type": "string",
					"description": "Sets or retrieves reference information about the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLPhraseElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLPhraseElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLPhraseElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NavigatorStorageUtils"
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoCubicRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoCubicRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoCubicRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoCubicRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTextContentElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "textLength",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "lengthAdjust",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "method",
					"name": "getCharNumAtPosition",
					"parameters": [
						{
							"name": "point",
							"type": "SVGPoint"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getStartPositionOfChar",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "getExtentOfChar",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						}
					],
					"returns": "SVGRect"
				},
				{
					"kind": "method",
					"name": "getComputedTextLength",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getSubStringLength",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						},
						{
							"name": "nchars",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "selectSubString",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						},
						{
							"name": "nchars",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getNumberOfChars",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getRotationOfChar",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getEndPositionOfChar",
					"parameters": [
						{
							"name": "charnum",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "property",
					"name": "LENGTHADJUST_SPACING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LENGTHADJUST_SPACINGANDGLYPHS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LENGTHADJUST_UNKNOWN",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGTextContentElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTextContentElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTextContentElement"
					},
					{
						"kind": "property",
						"name": "LENGTHADJUST_SPACING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LENGTHADJUST_SPACINGANDGLYPHS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LENGTHADJUST_UNKNOWN",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedColorProperty",
			"signatures": [
				{
					"kind": "property",
					"name": "color",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Location",
			"signatures": [
				{
					"kind": "property",
					"name": "hash",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "protocol",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "search",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "hostname",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "port",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pathname",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "host",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "reload",
					"parameters": [
						{
							"name": "flag",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "replace",
					"parameters": [
						{
							"name": "url",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "assign",
					"parameters": [
						{
							"name": "url",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Location",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Location"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Location"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTitleElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "text",
					"type": "string",
					"description": "Retrieves or sets the text of the object as a string."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTitleElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTitleElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTitleElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLStyleElement",
			"extends": [
				"HTMLElement",
				"LinkStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "media",
					"type": "string",
					"description": "Sets or retrieves the media type."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Retrieves the CSS language in which the style sheet is written."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLStyleElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLStyleElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLStyleElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceEntry",
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "startTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "duration",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "entryType",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceEntry",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceEntry"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceEntry"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTransform",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "angle",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "matrix",
					"type": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "setTranslate",
					"parameters": [
						{
							"name": "tx",
							"type": "number"
						},
						{
							"name": "ty",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setScale",
					"parameters": [
						{
							"name": "sx",
							"type": "number"
						},
						{
							"name": "sy",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setMatrix",
					"parameters": [
						{
							"name": "matrix",
							"type": "SVGMatrix"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setSkewY",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setRotate",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						},
						{
							"name": "cx",
							"type": "number"
						},
						{
							"name": "cy",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setSkewX",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_SKEWX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_SCALE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_TRANSLATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_MATRIX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_ROTATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TRANSFORM_SKEWY",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGTransform",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTransform"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTransform"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_SKEWX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_SCALE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_TRANSLATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_MATRIX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_ROTATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TRANSFORM_SKEWY",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "UIEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "detail",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "view",
					"type": "Window"
				},
				{
					"kind": "method",
					"name": "initUIEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "UIEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "UIEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "UIEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGURIReference",
			"signatures": [
				{
					"kind": "property",
					"name": "href",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGPathSeg",
			"signatures": [
				{
					"kind": "property",
					"name": "pathSegType",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pathSegTypeAsLetter",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "PATHSEG_MOVETO_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_VERTICAL_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_QUADRATIC_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_CUBIC_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_HORIZONTAL_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_QUADRATIC_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CLOSEPATH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_HORIZONTAL_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_CUBIC_SMOOTH_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_ARC_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_CUBIC_REL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_LINETO_VERTICAL_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_ARC_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_MOVETO_ABS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSeg",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSeg"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSeg"
					},
					{
						"kind": "property",
						"name": "PATHSEG_MOVETO_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_VERTICAL_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_QUADRATIC_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_CUBIC_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_HORIZONTAL_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_QUADRATIC_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CLOSEPATH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_HORIZONTAL_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_CUBIC_SMOOTH_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_ARC_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_CUBIC_REL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_LINETO_VERTICAL_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_ARC_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_MOVETO_ABS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WheelEvent",
			"extends": [
				"MouseEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "deltaZ",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "deltaX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "deltaMode",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "deltaY",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initWheelEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						},
						{
							"name": "modifiersListArg",
							"type": "string"
						},
						{
							"name": "deltaXArg",
							"type": "number"
						},
						{
							"name": "deltaYArg",
							"type": "number"
						},
						{
							"name": "deltaZArg",
							"type": "number"
						},
						{
							"name": "deltaMode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getCurrentPoint",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "DOM_DELTA_PIXEL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_DELTA_LINE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_DELTA_PAGE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WheelEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WheelEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WheelEvent"
					},
					{
						"kind": "property",
						"name": "DOM_DELTA_PIXEL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_DELTA_LINE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_DELTA_PAGE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSEventAttachmentTarget",
			"signatures": [
				{
					"kind": "method",
					"name": "attachEvent",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "detachEvent",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGNumber",
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGNumber",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGNumber"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGNumber"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGAnimatedPathData",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "method",
					"name": "getPathSegAtLength",
					"parameters": [
						{
							"name": "distance",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "getPointAtLength",
					"parameters": [
						{
							"name": "distance",
							"type": "number"
						}
					],
					"returns": "SVGPoint"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoQuadraticAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoQuadraticAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoQuadraticRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoQuadraticRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoCubicAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						},
						{
							"name": "x2",
							"type": "number"
						},
						{
							"name": "y2",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoCubicAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegClosePath",
					"returns": "SVGPathSegClosePath"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoCubicRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x1",
							"type": "number"
						},
						{
							"name": "y1",
							"type": "number"
						},
						{
							"name": "x2",
							"type": "number"
						},
						{
							"name": "y2",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoCubicRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoQuadraticSmoothRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoQuadraticSmoothRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegMovetoRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegMovetoRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoCubicSmoothAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x2",
							"type": "number"
						},
						{
							"name": "y2",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoCubicSmoothAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegMovetoAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegMovetoAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoVerticalRel",
					"parameters": [
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoVerticalRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegArcRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "r1",
							"type": "number"
						},
						{
							"name": "r2",
							"type": "number"
						},
						{
							"name": "angle",
							"type": "number"
						},
						{
							"name": "largeArcFlag",
							"type": "boolean"
						},
						{
							"name": "sweepFlag",
							"type": "boolean"
						}
					],
					"returns": "SVGPathSegArcRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoQuadraticSmoothAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoQuadraticSmoothAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoHorizontalRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoHorizontalRel"
				},
				{
					"kind": "method",
					"name": "getTotalLength",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegCurvetoCubicSmoothRel",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "x2",
							"type": "number"
						},
						{
							"name": "y2",
							"type": "number"
						}
					],
					"returns": "SVGPathSegCurvetoCubicSmoothRel"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoHorizontalAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoHorizontalAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegLinetoVerticalAbs",
					"parameters": [
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGPathSegLinetoVerticalAbs"
				},
				{
					"kind": "method",
					"name": "createSVGPathSegArcAbs",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "r1",
							"type": "number"
						},
						{
							"name": "r2",
							"type": "number"
						},
						{
							"name": "angle",
							"type": "number"
						},
						{
							"name": "largeArcFlag",
							"type": "boolean"
						},
						{
							"name": "sweepFlag",
							"type": "boolean"
						}
					],
					"returns": "SVGPathSegArcAbs"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCompatibleInfo",
			"signatures": [
				{
					"kind": "property",
					"name": "version",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "userAgent",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCompatibleInfo",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSCompatibleInfo"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCompatibleInfo"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Text",
			"extends": [
				"CharacterData",
				"MSNodeExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "wholeText",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "splitText",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "Text"
				},
				{
					"kind": "method",
					"name": "replaceWholeText",
					"parameters": [
						{
							"name": "content",
							"type": "string"
						}
					],
					"returns": "Text"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Text",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Text"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Text"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedRect",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "SVGRect"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "SVGRect"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedRect",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedRect"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedRect"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSNamespaceRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "namespaceURI",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "prefix",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSNamespaceRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSNamespaceRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSNamespaceRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPathSeg"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPathSeg"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPathSeg"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPathSeg"
						}
					],
					"returns": "SVGPathSeg"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPathSeg"
						}
					],
					"returns": "SVGPathSeg"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPathSeg"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGPathSeg"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGPathSeg"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLUnknownElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingRecordSetReadonlyExtensions"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLUnknownElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLUnknownElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLUnknownElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAudioElement",
			"extends": [
				"HTMLMediaElement"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAudioElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAudioElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAudioElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSImageResourceExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "dynsrc",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "vrml",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "lowsrc",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "start",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "loop",
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "PositionError",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "POSITION_UNAVAILABLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PERMISSION_DENIED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TIMEOUT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PositionError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PositionError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PositionError"
					},
					{
						"kind": "property",
						"name": "POSITION_UNAVAILABLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PERMISSION_DENIED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TIMEOUT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableCellElement",
			"extends": [
				"HTMLElement",
				"HTMLTableAlignment",
				"DOML2DeprecatedBackgroundStyle",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "headers",
					"type": "string",
					"description": "Sets or retrieves a list of header cells that provide information for the object."
				},
				{
					"kind": "property",
					"name": "cellIndex",
					"type": "number",
					"description": "Retrieves the position of the object in the cells collection of a row."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "borderColorLight",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				},
				{
					"kind": "property",
					"name": "colSpan",
					"type": "number",
					"description": "Sets or retrieves the number columns in the table that the object should span."
				},
				{
					"kind": "property",
					"name": "borderColor",
					"type": "any",
					"description": "Sets or retrieves the border color of the object."
				},
				{
					"kind": "property",
					"name": "axis",
					"type": "string",
					"description": "Sets or retrieves a comma-delimited list of conceptual categories associated with the object."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "any",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "noWrap",
					"type": "boolean",
					"description": "Sets or retrieves whether the browser automatically performs wordwrap."
				},
				{
					"kind": "property",
					"name": "abbr",
					"type": "string",
					"description": "Sets or retrieves abbreviated text for the object."
				},
				{
					"kind": "property",
					"name": "rowSpan",
					"type": "number",
					"description": "Sets or retrieves how many rows in a table the cell should span."
				},
				{
					"kind": "property",
					"name": "scope",
					"type": "string",
					"description": "Sets or retrieves the group of cells in a table to which the object's information applies."
				},
				{
					"kind": "property",
					"name": "borderColorDark",
					"type": "any",
					"description": "Sets or retrieves the color for one of the two colors used to draw the 3-D border of the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableCellElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableCellElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableCellElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGElementInstance",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "previousSibling",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "parentNode",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "lastChild",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "nextSibling",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "childNodes",
					"type": "SVGElementInstanceList"
				},
				{
					"kind": "property",
					"name": "correspondingUseElement",
					"type": "SVGUseElement"
				},
				{
					"kind": "property",
					"name": "correspondingElement",
					"type": "SVGElement"
				},
				{
					"kind": "property",
					"name": "firstChild",
					"type": "SVGElementInstance"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGElementInstance",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGElementInstance"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGElementInstance"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSNamespaceInfoCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "add",
					"parameters": [
						{
							"name": "namespace",
							"optional": true,
							"type": "string"
						},
						{
							"name": "urn",
							"optional": true,
							"type": "string"
						},
						{
							"name": "implementationUrl",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "any"
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSNamespaceInfoCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSNamespaceInfoCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSNamespaceInfoCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGCircleElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "cx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "r",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "cy",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGCircleElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGCircleElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGCircleElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "StyleSheetList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "StyleSheet"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "StyleSheet"
				}
			]
		},
		{
			"kind": "variable",
			"name": "StyleSheetList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "StyleSheetList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "StyleSheetList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSImportRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "styleSheet",
					"type": "CSSStyleSheet"
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "media",
					"type": "MediaList"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSImportRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSImportRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSImportRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CustomEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "detail",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "initCustomEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "detailArg",
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CustomEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CustomEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CustomEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLBaseFontElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedColorProperty"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "face",
					"type": "string",
					"description": "Sets or retrieves the current typeface family."
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number",
					"description": "Sets or retrieves the font size of the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBaseFontElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBaseFontElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBaseFontElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTextAreaElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Retrieves or sets the text in the entry field of the textArea element."
				},
				{
					"kind": "property",
					"name": "status",
					"type": "any",
					"description": "Sets or retrieves the value indicating whether the control is selected."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "selectionStart",
					"type": "number",
					"description": "Gets or sets the starting position or offset of a text selection."
				},
				{
					"kind": "property",
					"name": "rows",
					"type": "number",
					"description": "Sets or retrieves the number of horizontal rows contained in the object."
				},
				{
					"kind": "property",
					"name": "cols",
					"type": "number",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "readOnly",
					"type": "boolean",
					"description": "Sets or retrieves the value indicated whether the content of the object is read-only."
				},
				{
					"kind": "property",
					"name": "wrap",
					"type": "string",
					"description": "Sets or retrieves how to handle wordwrapping in the object."
				},
				{
					"kind": "property",
					"name": "selectionEnd",
					"type": "number",
					"description": "Gets or sets the end position or offset of a text selection."
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Retrieves the type of control."
				},
				{
					"kind": "property",
					"name": "defaultValue",
					"type": "string",
					"description": "Sets or retrieves the initial contents of the object."
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "autofocus",
					"type": "boolean",
					"description": "Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "required",
					"type": "boolean",
					"description": "When present, marks an element that can't be submitted without a value."
				},
				{
					"kind": "property",
					"name": "maxLength",
					"type": "number",
					"description": "Sets or retrieves the maximum number of characters that the user can enter in a text control."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "property",
					"name": "placeholder",
					"type": "string",
					"description": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field."
				},
				{
					"kind": "method",
					"name": "createTextRange",
					"description": "Creates a TextRange object for the element.",
					"returns": "TextRange"
				},
				{
					"kind": "method",
					"name": "setSelectionRange",
					"description": "Sets the start and end positions of a selection in a text field.",
					"parameters": [
						{
							"name": "start",
							"description": "The offset into the text field for the start of the selection.",
							"type": "number"
						},
						{
							"name": "end",
							"description": "The offset into the text field for the end of the selection.",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "select",
					"description": "Highlights the input area of a form element.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTextAreaElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTextAreaElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTextAreaElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Geolocation",
			"signatures": [
				{
					"kind": "method",
					"name": "clearWatch",
					"parameters": [
						{
							"name": "watchId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getCurrentPosition",
					"parameters": [
						{
							"name": "successCallback",
							"type": "PositionCallback"
						},
						{
							"name": "errorCallback",
							"optional": true,
							"type": "PositionErrorCallback"
						},
						{
							"name": "options",
							"optional": true,
							"type": "PositionOptions"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "watchPosition",
					"parameters": [
						{
							"name": "successCallback",
							"type": "PositionCallback"
						},
						{
							"name": "errorCallback",
							"optional": true,
							"type": "PositionErrorCallback"
						},
						{
							"name": "options",
							"optional": true,
							"type": "PositionOptions"
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Geolocation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Geolocation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Geolocation"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedMarginStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "vspace",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "hspace",
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MSWindowModeless",
			"signatures": [
				{
					"kind": "property",
					"name": "dialogTop",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "dialogLeft",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "dialogWidth",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "dialogHeight",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "menuArguments",
					"type": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedAlignmentStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLMarqueeElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions",
				"DOML2DeprecatedBackgroundColorStyle"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onbounce",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "vspace",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "trueSpeed",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "scrollAmount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "scrollDelay",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "behavior",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "loop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "direction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "hspace",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onfinish",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "stop",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "start",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"bounce\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"start\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"finish\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLMarqueeElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLMarqueeElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLMarqueeElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGRect",
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGRect",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGRect"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGRect"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSNodeExtensions",
			"signatures": [
				{
					"kind": "method",
					"name": "swapNode",
					"parameters": [
						{
							"name": "otherNode",
							"type": "Node"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "removeNode",
					"parameters": [
						{
							"name": "deep",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "method",
					"name": "replaceNode",
					"parameters": [
						{
							"name": "replacement",
							"type": "Node"
						}
					],
					"returns": "Node"
				}
			]
		},
		{
			"kind": "interface",
			"name": "History",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "state",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "back",
					"parameters": [
						{
							"name": "distance",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "forward",
					"parameters": [
						{
							"name": "distance",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "go",
					"parameters": [
						{
							"name": "delta",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "replaceState",
					"parameters": [
						{
							"name": "statedata",
							"type": "any"
						},
						{
							"name": "title",
							"type": "string"
						},
						{
							"name": "url",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "pushState",
					"parameters": [
						{
							"name": "statedata",
							"type": "any"
						},
						{
							"name": "title",
							"type": "string"
						},
						{
							"name": "url",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "History",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "History"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "History"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoCubicAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoCubicAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoCubicAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoCubicAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoQuadraticAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoQuadraticAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoQuadraticAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoQuadraticAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TimeRanges",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "start",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "end",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TimeRanges",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TimeRanges"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TimeRanges"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSRule",
			"signatures": [
				{
					"kind": "property",
					"name": "cssText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "parentStyleSheet",
					"type": "CSSStyleSheet"
				},
				{
					"kind": "property",
					"name": "parentRule",
					"type": "CSSRule"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "IMPORT_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIA_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STYLE_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NAMESPACE_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PAGE_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNKNOWN_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FONT_FACE_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CHARSET_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "KEYFRAMES_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "KEYFRAME_RULE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VIEWPORT_RULE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSRule"
					},
					{
						"kind": "property",
						"name": "IMPORT_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIA_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STYLE_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NAMESPACE_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PAGE_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNKNOWN_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FONT_FACE_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CHARSET_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "KEYFRAMES_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "KEYFRAME_RULE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VIEWPORT_RULE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLModElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "dateTime",
					"type": "string",
					"description": "Sets or retrieves the date and time of a modification to the object."
				},
				{
					"kind": "property",
					"name": "cite",
					"type": "string",
					"description": "Sets or retrieves reference information about the object."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLModElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLModElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLModElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGMatrix",
			"signatures": [
				{
					"kind": "property",
					"name": "e",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "c",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "a",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "b",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "d",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "f",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "multiply",
					"parameters": [
						{
							"name": "secondMatrix",
							"type": "SVGMatrix"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "flipY",
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "skewY",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "inverse",
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "scaleNonUniform",
					"parameters": [
						{
							"name": "scaleFactorX",
							"type": "number"
						},
						{
							"name": "scaleFactorY",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "rotate",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "flipX",
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "translate",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "scale",
					"parameters": [
						{
							"name": "scaleFactor",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "rotateFromVector",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				},
				{
					"kind": "method",
					"name": "skewX",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "SVGMatrix"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGMatrix",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGMatrix"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGMatrix"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSPopupWindow",
			"signatures": [
				{
					"kind": "property",
					"name": "document",
					"type": "Document"
				},
				{
					"kind": "property",
					"name": "isOpen",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "show",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						},
						{
							"name": "h",
							"type": "number"
						},
						{
							"name": "element",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "hide",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSPopupWindow",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSPopupWindow"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSPopupWindow"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "BeforeUnloadEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "returnValue",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "BeforeUnloadEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "BeforeUnloadEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "BeforeUnloadEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGUseElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "animatedInstanceRoot",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "instanceRoot",
					"type": "SVGElementInstance"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGUseElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGUseElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGUseElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Event",
			"signatures": [
				{
					"kind": "property",
					"name": "timeStamp",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "defaultPrevented",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "isTrusted",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "currentTarget",
					"type": "EventTarget"
				},
				{
					"kind": "property",
					"name": "cancelBubble",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "target",
					"type": "EventTarget"
				},
				{
					"kind": "property",
					"name": "eventPhase",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "cancelable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "srcElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "bubbles",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "initEvent",
					"parameters": [
						{
							"name": "eventTypeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stopPropagation",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stopImmediatePropagation",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "preventDefault",
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "CAPTURING_PHASE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "AT_TARGET",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BUBBLING_PHASE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Event",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Event"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Event"
					},
					{
						"kind": "property",
						"name": "CAPTURING_PHASE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "AT_TARGET",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BUBBLING_PHASE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ImageData",
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "data",
					"type": {
						"kind": "array",
						"type": "number"
					}
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ImageData",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ImageData"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ImageData"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableColElement",
			"extends": [
				"HTMLElement",
				"HTMLTableAlignment"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "any",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves the alignment of the object relative to the display or table."
				},
				{
					"kind": "property",
					"name": "span",
					"type": "number",
					"description": "Sets or retrieves the number of columns in the group."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTableColElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTableColElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTableColElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGException",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "SVG_MATRIX_NOT_INVERTABLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_WRONG_TYPE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_INVALID_VALUE_ERR",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGException",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGException"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGException"
					},
					{
						"kind": "property",
						"name": "SVG_MATRIX_NOT_INVERTABLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_WRONG_TYPE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_INVALID_VALUE_ERR",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGLinearGradientElement",
			"extends": [
				"SVGGradientElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y1",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x1",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGLinearGradientElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGLinearGradientElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGLinearGradientElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTableAlignment",
			"signatures": [
				{
					"kind": "property",
					"name": "ch",
					"type": "string",
					"description": "Sets or retrieves a value that you can use to implement your own ch functionality for the object."
				},
				{
					"kind": "property",
					"name": "vAlign",
					"type": "string",
					"description": "Sets or retrieves how text and other content are vertically aligned within the object that contains them."
				},
				{
					"kind": "property",
					"name": "chOff",
					"type": "string",
					"description": "Sets or retrieves a value that you can use to implement your own chOff functionality for the object."
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedEnumeration",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedEnumeration",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedEnumeration"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedEnumeration"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedSizeProperty",
			"signatures": [
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLUListElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedListSpaceReduction",
				"DOML2DeprecatedListNumberingAndBulletStyle"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLUListElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLUListElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLUListElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGRectElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "ry",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "rx",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGRectElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGRectElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGRectElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ErrorEventHandler",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "event",
							"type": "Event"
						},
						{
							"name": "source",
							"type": "string"
						},
						{
							"name": "fileno",
							"type": "number"
						},
						{
							"name": "columnNumber",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLDivElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "noWrap",
					"type": "boolean",
					"description": "Sets or retrieves whether the browser automatically performs wordwrap."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDivElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDivElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDivElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedBorderStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "border",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "NamedNodeMap",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "removeNamedItemNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "removeNamedItem",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "getNamedItem",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "setNamedItem",
					"parameters": [
						{
							"name": "arg",
							"type": "Attr"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "getNamedItemNS",
					"parameters": [
						{
							"name": "namespaceURI",
							"type": "string"
						},
						{
							"name": "localName",
							"type": "string"
						}
					],
					"returns": "Attr"
				},
				{
					"kind": "method",
					"name": "setNamedItemNS",
					"parameters": [
						{
							"name": "arg",
							"type": "Attr"
						}
					],
					"returns": "Attr"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NamedNodeMap",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "NamedNodeMap"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "NamedNodeMap"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MediaList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "mediaText",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "deleteMedium",
					"parameters": [
						{
							"name": "oldMedium",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendMedium",
					"parameters": [
						{
							"name": "newMedium",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MediaList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MediaList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MediaList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoQuadraticSmoothAbs",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoQuadraticSmoothAbs",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoQuadraticSmoothAbs"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoQuadraticSmoothAbs"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegCurvetoCubicSmoothRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "y2",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegCurvetoCubicSmoothRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegCurvetoCubicSmoothRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegCurvetoCubicSmoothRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGLengthList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGLength"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGLength"
						}
					],
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGLength"
						}
					],
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGLength"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGLength"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGLengthList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGLengthList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGLengthList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ProcessingInstruction",
			"extends": [
				"Node"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "target",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ProcessingInstruction",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ProcessingInstruction"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ProcessingInstruction"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSWindowExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "status",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmouseleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenLeft",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "offscreenBuffering",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "maxConnectionsPerServer",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onmouseenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "clipboardData",
					"type": "DataTransfer"
				},
				{
					"kind": "property",
					"name": "defaultStatus",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "clientInformation",
					"type": "Navigator"
				},
				{
					"kind": "property",
					"name": "closed",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onhelp",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "external",
					"type": "External"
				},
				{
					"kind": "property",
					"name": "event",
					"type": "MSEventObj"
				},
				{
					"kind": "property",
					"name": "onfocusout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "screenTop",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onfocusin",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "showModelessDialog",
					"parameters": [
						{
							"name": "url",
							"optional": true,
							"type": "string"
						},
						{
							"name": "argument",
							"optional": true,
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "Window"
				},
				{
					"kind": "method",
					"name": "navigate",
					"parameters": [
						{
							"name": "url",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "resizeBy",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "resizeTo",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createPopup",
					"parameters": [
						{
							"name": "arguments",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "MSPopupWindow"
				},
				{
					"kind": "method",
					"name": "toStaticHTML",
					"parameters": [
						{
							"name": "html",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "execScript",
					"parameters": [
						{
							"name": "code",
							"type": "string"
						},
						{
							"name": "language",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "msWriteProfilerMark",
					"parameters": [
						{
							"name": "profilerMarkName",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "moveTo",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "moveBy",
					"parameters": [
						{
							"name": "x",
							"optional": true,
							"type": "number"
						},
						{
							"name": "y",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "showHelp",
					"parameters": [
						{
							"name": "url",
							"type": "string"
						},
						{
							"name": "helpArg",
							"optional": true,
							"type": "any"
						},
						{
							"name": "features",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "captureEvents",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "releaseEvents",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MSBehaviorUrnsCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSBehaviorUrnsCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSBehaviorUrnsCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSBehaviorUrnsCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSFontFaceRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "style",
					"type": "CSSStyleDeclaration"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSFontFaceRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSFontFaceRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSFontFaceRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOML2DeprecatedBackgroundStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "background",
					"type": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "TextEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "inputMethod",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "locale",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "initTextEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "dataArg",
							"type": "string"
						},
						{
							"name": "inputMethod",
							"type": "number"
						},
						{
							"name": "locale",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_KEYBOARD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_DROP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_IME",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_SCRIPT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_VOICE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_PASTE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_HANDWRITING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_OPTION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOM_INPUT_METHOD_MULTIMODAL",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextEvent"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_KEYBOARD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_DROP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_IME",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_SCRIPT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_VOICE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_PASTE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_HANDWRITING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_OPTION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOM_INPUT_METHOD_MULTIMODAL",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DocumentFragment",
			"extends": [
				"Node",
				"NodeSelector",
				"MSEventAttachmentTarget",
				"MSNodeExtensions"
			]
		},
		{
			"kind": "variable",
			"name": "DocumentFragment",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DocumentFragment"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DocumentFragment"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPolylineElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGAnimatedPoints",
				"SVGTests",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGPolylineElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPolylineElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPolylineElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedPathData",
			"signatures": [
				{
					"kind": "property",
					"name": "pathSegList",
					"type": "SVGPathSegList"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Position",
			"signatures": [
				{
					"kind": "property",
					"name": "timestamp",
					"type": "Date"
				},
				{
					"kind": "property",
					"name": "coords",
					"type": "Coordinates"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Position",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Position"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Position"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "BookmarkCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "BookmarkCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "BookmarkCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "BookmarkCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceMark",
			"extends": [
				"PerformanceEntry"
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceMark",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceMark"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceMark"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSPageRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "pseudoClass",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "selectorText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "selector",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "style",
					"type": "CSSStyleDeclaration"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSPageRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSPageRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSPageRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLBRElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "clear",
					"type": "string",
					"description": "Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBRElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBRElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBRElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSNavigatorExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "userLanguage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "plugins",
					"type": "MSPluginsCollection"
				},
				{
					"kind": "property",
					"name": "cookieEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "appCodeName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cpuClass",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "appMinorVersion",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "connectionSpeed",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "browserLanguage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "mimeTypes",
					"type": "MSMimeTypesCollection"
				},
				{
					"kind": "property",
					"name": "systemLanguage",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "language",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "javaEnabled",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "taintEnabled",
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLSpanElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLSpanElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLSpanElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLSpanElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLHeadElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "profile",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLHeadElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLHeadElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLHeadElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLHeadingElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedTextFlowControl"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves a value that indicates the table alignment."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLHeadingElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLHeadingElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLHeadingElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLFormElement",
			"extends": [
				"HTMLElement",
				"MSHTMLCollectionExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number",
					"description": "Sets or retrieves the number of objects in a collection."
				},
				{
					"kind": "property",
					"name": "target",
					"type": "string",
					"description": "Sets or retrieves the window or frame at which to target content."
				},
				{
					"kind": "property",
					"name": "acceptCharset",
					"type": "string",
					"description": "Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form."
				},
				{
					"kind": "property",
					"name": "enctype",
					"type": "string",
					"description": "Sets or retrieves the encoding type for the form."
				},
				{
					"kind": "property",
					"name": "elements",
					"type": "HTMLCollection",
					"description": "Retrieves a collection, in source order, of all controls in a given form."
				},
				{
					"kind": "property",
					"name": "action",
					"type": "string",
					"description": "Sets or retrieves the URL to which the form content is sent for processing."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "method",
					"type": "string",
					"description": "Sets or retrieves how to send the form data to the server."
				},
				{
					"kind": "property",
					"name": "encoding",
					"type": "string",
					"description": "Sets or retrieves the MIME encoding for the form."
				},
				{
					"kind": "property",
					"name": "autocomplete",
					"type": "string",
					"description": "Specifies whether autocomplete is applied to an editable text field."
				},
				{
					"kind": "property",
					"name": "noValidate",
					"type": "boolean",
					"description": "Designates a form that is not validated when submitted."
				},
				{
					"kind": "method",
					"name": "reset",
					"description": "Fires when the user resets a form.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"description": "Retrieves a form object or an object from an elements collection.",
					"parameters": [
						{
							"name": "name",
							"description": "Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is a Number, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.",
							"optional": true,
							"type": "any"
						},
						{
							"name": "index",
							"description": "Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "submit",
					"description": "Fires when a FORM is about to be submitted.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"description": "Retrieves a form object or an object from an elements collection.",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "name",
						"type": "string"
					},
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLFormElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLFormElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLFormElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGZoomAndPan",
			"signatures": [
				{
					"kind": "property",
					"name": "zoomAndPan",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ZOOMANDPAN_MAGNIFY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ZOOMANDPAN_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_ZOOMANDPAN_DISABLE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGZoomAndPan",
			"type": "SVGZoomAndPan"
		},
		{
			"kind": "interface",
			"name": "HTMLMediaElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "initialTime",
					"type": "number",
					"description": "Gets the earliest possible position, in seconds, that the playback can begin."
				},
				{
					"kind": "property",
					"name": "played",
					"type": "TimeRanges",
					"description": "Gets TimeRanges for the current media resource that has been played."
				},
				{
					"kind": "property",
					"name": "currentSrc",
					"type": "string",
					"description": "Gets the address or URL of the current media resource that is selected by IHTMLMediaElement."
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "autobuffer",
					"type": "boolean",
					"description": "The autobuffer element is not supported by Internet Explorer 9. Use the preload element instead."
				},
				{
					"kind": "property",
					"name": "loop",
					"type": "boolean",
					"description": "Gets or sets a flag to specify whether playback should restart after it completes."
				},
				{
					"kind": "property",
					"name": "ended",
					"type": "boolean",
					"description": "Gets information about whether the playback has ended or not."
				},
				{
					"kind": "property",
					"name": "buffered",
					"type": "TimeRanges",
					"description": "Gets a collection of buffered time ranges."
				},
				{
					"kind": "property",
					"name": "error",
					"type": "MediaError",
					"description": "Returns an object representing the current error state of the audio or video element."
				},
				{
					"kind": "property",
					"name": "seekable",
					"type": "TimeRanges",
					"description": "Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked."
				},
				{
					"kind": "property",
					"name": "autoplay",
					"type": "boolean",
					"description": "Gets or sets a value that indicates whether to start playing the media automatically."
				},
				{
					"kind": "property",
					"name": "controls",
					"type": "boolean",
					"description": "Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player)."
				},
				{
					"kind": "property",
					"name": "volume",
					"type": "number",
					"description": "Gets or sets the volume level for audio portions of the media element."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "The address or URL of the a media resource that is to be considered."
				},
				{
					"kind": "property",
					"name": "playbackRate",
					"type": "number",
					"description": "Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource."
				},
				{
					"kind": "property",
					"name": "duration",
					"type": "number",
					"description": "Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming."
				},
				{
					"kind": "property",
					"name": "muted",
					"type": "boolean",
					"description": "Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted."
				},
				{
					"kind": "property",
					"name": "defaultPlaybackRate",
					"type": "number",
					"description": "Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource."
				},
				{
					"kind": "property",
					"name": "paused",
					"type": "boolean",
					"description": "Gets a flag that specifies whether playback is paused."
				},
				{
					"kind": "property",
					"name": "seeking",
					"type": "boolean",
					"description": "Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource."
				},
				{
					"kind": "property",
					"name": "currentTime",
					"type": "number",
					"description": "Gets or sets the current playback position, in seconds."
				},
				{
					"kind": "property",
					"name": "preload",
					"type": "string",
					"description": "Gets or sets the current playback position, in seconds."
				},
				{
					"kind": "property",
					"name": "networkState",
					"type": "number",
					"description": "Gets the current network activity for the element."
				},
				{
					"kind": "property",
					"name": "msAudioCategory",
					"type": "string",
					"description": "Specifies the purpose of the audio or video media, such as background audio or alerts."
				},
				{
					"kind": "property",
					"name": "msRealTime",
					"type": "boolean",
					"description": "Specifies whether or not to enable low-latency playback on the media element."
				},
				{
					"kind": "property",
					"name": "msPlayToPrimary",
					"type": "boolean",
					"description": "Gets or sets the primary DLNA PlayTo device."
				},
				{
					"kind": "property",
					"name": "textTracks",
					"type": "TextTrackList"
				},
				{
					"kind": "property",
					"name": "msPlayToDisabled",
					"type": "boolean",
					"description": "Gets or sets whether the DLNA PlayTo device is available."
				},
				{
					"kind": "property",
					"name": "audioTracks",
					"type": "AudioTrackList",
					"description": "Returns an AudioTrackList object with the audio tracks for a given video element."
				},
				{
					"kind": "property",
					"name": "msPlayToSource",
					"type": "any",
					"description": "Gets the source associated with the media element for use by the PlayToManager."
				},
				{
					"kind": "property",
					"name": "msAudioDeviceType",
					"type": "string",
					"description": "Specifies the output device id that the audio will be sent to."
				},
				{
					"kind": "property",
					"name": "msPlayToPreferredSourceUri",
					"type": "string",
					"description": "Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server."
				},
				{
					"kind": "property",
					"name": "onmsneedkey",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MSMediaKeyNeededEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msKeys",
					"type": "MSMediaKeys",
					"description": "Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element."
				},
				{
					"kind": "property",
					"name": "msGraphicsTrustStatus",
					"type": "MSGraphicsTrust"
				},
				{
					"kind": "method",
					"name": "pause",
					"description": "Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "play",
					"description": "Loads and starts playback of a media resource.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "load",
					"description": "Fires immediately after the client loads the object.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "canPlayType",
					"description": "Returns a string that specifies whether the client can play a given media resource type.",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "msClearEffects",
					"description": "Clears all effects from the media pipeline.",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msSetMediaProtectionManager",
					"description": "Specifies the media protection manager for a given media pipeline.",
					"parameters": [
						{
							"name": "mediaProtectionManager",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msInsertAudioEffect",
					"description": "Inserts the specified audio effect into media pipeline.",
					"parameters": [
						{
							"name": "activatableClassId",
							"type": "string"
						},
						{
							"name": "effectRequired",
							"type": "boolean"
						},
						{
							"name": "config",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msSetMediaKeys",
					"parameters": [
						{
							"name": "mediaKeys",
							"type": "MSMediaKeys"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addTextTrack",
					"parameters": [
						{
							"name": "kind",
							"type": "string"
						},
						{
							"name": "label",
							"optional": true,
							"type": "string"
						},
						{
							"name": "language",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "TextTrack"
				},
				{
					"kind": "property",
					"name": "HAVE_METADATA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HAVE_CURRENT_DATA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HAVE_NOTHING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NETWORK_NO_SOURCE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HAVE_ENOUGH_DATA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NETWORK_EMPTY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NETWORK_LOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NETWORK_IDLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HAVE_FUTURE_DATA",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msneedkey\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSMediaKeyNeededEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLMediaElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLMediaElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLMediaElement"
					},
					{
						"kind": "property",
						"name": "HAVE_METADATA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HAVE_CURRENT_DATA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HAVE_NOTHING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NETWORK_NO_SOURCE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HAVE_ENOUGH_DATA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NETWORK_EMPTY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NETWORK_LOADING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NETWORK_IDLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HAVE_FUTURE_DATA",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ElementCSSInlineStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "runtimeStyle",
					"type": "MSStyleCSSProperties"
				},
				{
					"kind": "property",
					"name": "currentStyle",
					"type": "MSCurrentStyleCSSProperties"
				},
				{
					"kind": "method",
					"name": "doScroll",
					"parameters": [
						{
							"name": "component",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "componentFromPoint",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "DOMParser",
			"signatures": [
				{
					"kind": "method",
					"name": "parseFromString",
					"parameters": [
						{
							"name": "source",
							"type": "string"
						},
						{
							"name": "mimeType",
							"type": "string"
						}
					],
					"returns": "Document"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMParser",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMParser"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMParser"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMimeTypesCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMimeTypesCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSMimeTypesCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMimeTypesCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "StyleSheet",
			"signatures": [
				{
					"kind": "property",
					"name": "disabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "ownerNode",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "parentStyleSheet",
					"type": "StyleSheet"
				},
				{
					"kind": "property",
					"name": "href",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "media",
					"type": "MediaList"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "title",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "StyleSheet",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "StyleSheet"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "StyleSheet"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGTextPathElement",
			"extends": [
				"SVGTextContentElement",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "startOffset",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "method",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "spacing",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_SPACINGTYPE_EXACT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_METHODTYPE_STRETCH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_SPACINGTYPE_AUTO",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_METHODTYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTPATH_METHODTYPE_ALIGN",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGTextPathElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGTextPathElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGTextPathElement"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_SPACINGTYPE_EXACT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_METHODTYPE_STRETCH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_SPACINGTYPE_AUTO",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_METHODTYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTPATH_METHODTYPE_ALIGN",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLDTElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "noWrap",
					"type": "boolean",
					"description": "Sets or retrieves whether the browser automatically performs wordwrap."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDTElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDTElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDTElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NodeList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Node"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Node"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NodeList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "NodeList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "NodeList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "XMLSerializer",
			"signatures": [
				{
					"kind": "method",
					"name": "serializeToString",
					"parameters": [
						{
							"name": "target",
							"type": "Node"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "XMLSerializer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "XMLSerializer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "XMLSerializer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceMeasure",
			"extends": [
				"PerformanceEntry"
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceMeasure",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceMeasure"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceMeasure"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGGradientElement",
			"extends": [
				"SVGElement",
				"SVGUnitTypes",
				"SVGStylable",
				"SVGExternalResourcesRequired",
				"SVGURIReference"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "spreadMethod",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "gradientTransform",
					"type": "SVGAnimatedTransformList"
				},
				{
					"kind": "property",
					"name": "gradientUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "SVG_SPREADMETHOD_REFLECT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_SPREADMETHOD_PAD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_SPREADMETHOD_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_SPREADMETHOD_REPEAT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGGradientElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGGradientElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGGradientElement"
					},
					{
						"kind": "property",
						"name": "SVG_SPREADMETHOD_REFLECT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_SPREADMETHOD_PAD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_SPREADMETHOD_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_SPREADMETHOD_REPEAT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NodeFilter",
			"signatures": [
				{
					"kind": "method",
					"name": "acceptNode",
					"parameters": [
						{
							"name": "n",
							"type": "Node"
						}
					],
					"returns": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_ENTITY_REFERENCE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_NOTATION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_ENTITY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_DOCUMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_PROCESSING_INSTRUCTION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FILTER_REJECT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_CDATA_SECTION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FILTER_ACCEPT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_ALL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_DOCUMENT_TYPE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_TEXT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_ELEMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_COMMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FILTER_SKIP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_ATTRIBUTE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOW_DOCUMENT_FRAGMENT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NodeFilter",
			"type": "NodeFilter"
		},
		{
			"kind": "interface",
			"name": "SVGNumberList",
			"signatures": [
				{
					"kind": "property",
					"name": "numberOfItems",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "replaceItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGNumber"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "getItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendItem",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGNumber"
						}
					],
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "initialize",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGNumber"
						}
					],
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "removeItem",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGNumber"
				},
				{
					"kind": "method",
					"name": "insertItemBefore",
					"parameters": [
						{
							"name": "newItem",
							"type": "SVGNumber"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGNumberList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGNumberList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGNumberList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MediaError",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msExtendedCode",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIA_ERR_ABORTED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIA_ERR_NETWORK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIA_ERR_DECODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_ERR_ENCRYPTED",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MediaError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MediaError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MediaError"
					},
					{
						"kind": "property",
						"name": "MEDIA_ERR_ABORTED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIA_ERR_NETWORK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIA_ERR_DECODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_ERR_ENCRYPTED",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLFieldSetElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLFieldSetElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLFieldSetElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLFieldSetElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLBGSoundElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "balance",
					"type": "any",
					"description": "Sets or gets the value indicating how the volume of the background sound is divided between the left speaker and the right speaker."
				},
				{
					"kind": "property",
					"name": "volume",
					"type": "any",
					"description": "Sets or gets the volume setting for the sound."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "Sets or gets the URL of a sound to play."
				},
				{
					"kind": "property",
					"name": "loop",
					"type": "number",
					"description": "Sets or retrieves the number of times a sound or video clip will loop when activated."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLBGSoundElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLBGSoundElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLBGSoundElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Comment",
			"extends": [
				"CharacterData"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "text",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Comment",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Comment"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Comment"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceResourceTiming",
			"extends": [
				"PerformanceEntry"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "redirectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "redirectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fetchStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "requestStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "initiatorType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "responseEnd",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceResourceTiming",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceResourceTiming"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceResourceTiming"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CanvasPattern"
		},
		{
			"kind": "variable",
			"name": "CanvasPattern",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CanvasPattern"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CanvasPattern"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLHRElement",
			"extends": [
				"HTMLElement",
				"DOML2DeprecatedColorProperty",
				"DOML2DeprecatedSizeProperty"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "align",
					"type": "string",
					"description": "Sets or retrieves how the object is aligned with adjacent text."
				},
				{
					"kind": "property",
					"name": "noShade",
					"type": "boolean",
					"description": "Sets or retrieves whether the horizontal rule is drawn with 3-D shading."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLHRElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLHRElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLHRElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLObjectElement",
			"extends": [
				"HTMLElement",
				"GetSVGDocument",
				"DOML2DeprecatedMarginStyle",
				"DOML2DeprecatedBorderStyle",
				"DOML2DeprecatedAlignmentStyle",
				"MSDataBindingExtensions",
				"MSDataBindingRecordSetExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "codeType",
					"type": "string",
					"description": "Sets or retrieves the Internet media type for the code associated with the object."
				},
				{
					"kind": "property",
					"name": "object",
					"type": "any",
					"description": "Retrieves the contained object."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "code",
					"type": "string",
					"description": "Sets or retrieves the URL of the file containing the compiled Java class."
				},
				{
					"kind": "property",
					"name": "archive",
					"type": "string",
					"description": "Sets or retrieves a character string that can be used to implement your own archive functionality for the object."
				},
				{
					"kind": "property",
					"name": "standby",
					"type": "string",
					"description": "Sets or retrieves a message to be displayed while an object is loading."
				},
				{
					"kind": "property",
					"name": "alt",
					"type": "string",
					"description": "Sets or retrieves a text alternative to the graphic."
				},
				{
					"kind": "property",
					"name": "classid",
					"type": "string",
					"description": "Sets or retrieves the class identifier for the object."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "useMap",
					"type": "string",
					"description": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string",
					"description": "Sets or retrieves the URL that references the data of the object."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "contentDocument",
					"type": "Document",
					"description": "Retrieves the document object of the page or frame."
				},
				{
					"kind": "property",
					"name": "altHtml",
					"type": "string",
					"description": "Gets or sets the optional alternative HTML script to execute if the object fails to load."
				},
				{
					"kind": "property",
					"name": "codeBase",
					"type": "string",
					"description": "Sets or retrieves the URL of the component."
				},
				{
					"kind": "property",
					"name": "declare",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string",
					"description": "Sets or retrieves the MIME type of the object."
				},
				{
					"kind": "property",
					"name": "BaseHref",
					"type": "string",
					"description": "Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element."
				},
				{
					"kind": "property",
					"name": "validationMessage",
					"type": "string",
					"description": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting."
				},
				{
					"kind": "property",
					"name": "validity",
					"type": "ValidityState",
					"description": "Returns a  ValidityState object that represents the validity states of an element."
				},
				{
					"kind": "property",
					"name": "willValidate",
					"type": "boolean",
					"description": "Returns whether an element will successfully validate based on forms validation rules and constraints."
				},
				{
					"kind": "property",
					"name": "msPlayToPreferredSourceUri",
					"type": "string",
					"description": "Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server."
				},
				{
					"kind": "property",
					"name": "msPlayToPrimary",
					"type": "boolean",
					"description": "Gets or sets the primary DLNA PlayTo device."
				},
				{
					"kind": "property",
					"name": "msPlayToDisabled",
					"type": "boolean",
					"description": "Gets or sets whether the DLNA PlayTo device is available."
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "msPlayToSource",
					"type": "any",
					"description": "Gets the source associated with the media element for use by the PlayToManager."
				},
				{
					"kind": "method",
					"name": "checkValidity",
					"description": "Returns whether a form will validate when it is submitted, without having to submit it.",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "setCustomValidity",
					"description": "Sets a custom error message that is displayed when a form is submitted.",
					"parameters": [
						{
							"name": "error",
							"description": "Sets a custom error message that is displayed when a form is submitted.",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLObjectElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLObjectElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLObjectElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLEmbedElement",
			"extends": [
				"HTMLElement",
				"GetSVGDocument"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "string",
					"description": "Sets or retrieves the width of the object."
				},
				{
					"kind": "property",
					"name": "palette",
					"type": "string",
					"description": "Retrieves the palette used for the embedded document."
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string",
					"description": "Sets or retrieves a URL to be loaded by the object."
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string",
					"description": "Sets or retrieves the name of the object."
				},
				{
					"kind": "property",
					"name": "hidden",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pluginspage",
					"type": "string",
					"description": "Retrieves the URL of the plug-in used to view an embedded document."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "string",
					"description": "Sets or retrieves the height of the object."
				},
				{
					"kind": "property",
					"name": "units",
					"type": "string",
					"description": "Sets or retrieves the height and width units of the embed object."
				},
				{
					"kind": "property",
					"name": "msPlayToPreferredSourceUri",
					"type": "string",
					"description": "Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server."
				},
				{
					"kind": "property",
					"name": "msPlayToPrimary",
					"type": "boolean",
					"description": "Gets or sets the primary DLNA PlayTo device."
				},
				{
					"kind": "property",
					"name": "msPlayToDisabled",
					"type": "boolean",
					"description": "Gets or sets whether the DLNA PlayTo device is available."
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msPlayToSource",
					"type": "any",
					"description": "Gets the source associated with the media element for use by the PlayToManager."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLEmbedElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLEmbedElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLEmbedElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "StorageEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "oldValue",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "newValue",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "url",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "storageArea",
					"type": "Storage"
				},
				{
					"kind": "property",
					"name": "key",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "initStorageEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "keyArg",
							"type": "string"
						},
						{
							"name": "oldValueArg",
							"type": "any"
						},
						{
							"name": "newValueArg",
							"type": "any"
						},
						{
							"name": "urlArg",
							"type": "string"
						},
						{
							"name": "storageAreaArg",
							"type": "Storage"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "StorageEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "StorageEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "StorageEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CharacterData",
			"extends": [
				"Node"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "data",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "deleteData",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "count",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "replaceData",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "count",
							"type": "number"
						},
						{
							"name": "arg",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendData",
					"parameters": [
						{
							"name": "arg",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "insertData",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "arg",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "substringData",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "count",
							"type": "number"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CharacterData",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CharacterData"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CharacterData"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLOptGroupElement",
			"extends": [
				"HTMLElement",
				"MSDataBindingExtensions"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "index",
					"type": "number",
					"description": "Sets or retrieves the ordinal position of an option in a list box."
				},
				{
					"kind": "property",
					"name": "defaultSelected",
					"type": "boolean",
					"description": "Sets or retrieves the status of an option."
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string",
					"description": "Sets or retrieves the text string specified by the option tag."
				},
				{
					"kind": "property",
					"name": "value",
					"type": "string",
					"description": "Sets or retrieves the value which is returned to the server when the form control is submitted."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "label",
					"type": "string",
					"description": "Sets or retrieves a value that you can use to implement your own label functionality for the object."
				},
				{
					"kind": "property",
					"name": "selected",
					"type": "boolean",
					"description": "Sets or retrieves whether the option in the list box is the default item."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLOptGroupElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLOptGroupElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLOptGroupElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLIsIndexElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				},
				{
					"kind": "property",
					"name": "action",
					"type": "string",
					"description": "Sets or retrieves the URL to which the form content is sent for processing."
				},
				{
					"kind": "property",
					"name": "prompt",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLIsIndexElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLIsIndexElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLIsIndexElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPathSegLinetoRel",
			"extends": [
				"SVGPathSeg"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPathSegLinetoRel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPathSegLinetoRel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPathSegLinetoRel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMException",
			"signatures": [
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "HIERARCHY_REQUEST_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NO_MODIFICATION_ALLOWED_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_MODIFICATION_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NAMESPACE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_CHARACTER_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_MISMATCH_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ABORT_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_STATE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SECURITY_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NETWORK_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "WRONG_DOCUMENT_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "QUOTA_EXCEEDED_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INDEX_SIZE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOMSTRING_SIZE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SYNTAX_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SERIALIZE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VALIDATION_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NOT_FOUND_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "URL_MISMATCH_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PARSE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NO_DATA_ALLOWED_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NOT_SUPPORTED_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_ACCESS_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INUSE_ATTRIBUTE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_NODE_TYPE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DATA_CLONE_ERR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TIMEOUT_ERR",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMException",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMException"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMException"
					},
					{
						"kind": "property",
						"name": "HIERARCHY_REQUEST_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NO_MODIFICATION_ALLOWED_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_MODIFICATION_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NAMESPACE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_CHARACTER_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_MISMATCH_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ABORT_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_STATE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SECURITY_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NETWORK_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "WRONG_DOCUMENT_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "QUOTA_EXCEEDED_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INDEX_SIZE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOMSTRING_SIZE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SYNTAX_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SERIALIZE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VALIDATION_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NOT_FOUND_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "URL_MISMATCH_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PARSE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NO_DATA_ALLOWED_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NOT_SUPPORTED_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_ACCESS_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INUSE_ATTRIBUTE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_NODE_TYPE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DATA_CLONE_ERR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TIMEOUT_ERR",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGAnimatedBoolean",
			"signatures": [
				{
					"kind": "property",
					"name": "animVal",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "baseVal",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGAnimatedBoolean",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGAnimatedBoolean"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGAnimatedBoolean"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCompatibleInfoCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "MSCompatibleInfo"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCompatibleInfoCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSCompatibleInfoCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCompatibleInfoCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGSwitchElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGTransformable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGSwitchElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGSwitchElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGSwitchElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGPreserveAspectRatio",
			"signatures": [
				{
					"kind": "property",
					"name": "align",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "meetOrSlice",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_NONE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MEETORSLICE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MEETORSLICE_MEET",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MEETORSLICE_SLICE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGPreserveAspectRatio",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGPreserveAspectRatio"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGPreserveAspectRatio"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_NONE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MEETORSLICE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MEETORSLICE_MEET",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MEETORSLICE_SLICE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Attr",
			"extends": [
				"Node"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "expando",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "specified",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "ownerElement",
					"type": "Element"
				},
				{
					"kind": "property",
					"name": "value",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Attr",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Attr"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Attr"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceNavigation",
			"signatures": [
				{
					"kind": "property",
					"name": "redirectCount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "toJSON",
					"returns": "any"
				},
				{
					"kind": "property",
					"name": "TYPE_RELOAD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_RESERVED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_BACK_FORWARD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_NAVIGATE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceNavigation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceNavigation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceNavigation"
					},
					{
						"kind": "property",
						"name": "TYPE_RELOAD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_RESERVED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_BACK_FORWARD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_NAVIGATE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGStopElement",
			"extends": [
				"SVGElement",
				"SVGStylable"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "offset",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGStopElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGStopElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGStopElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PositionCallback",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "position",
							"type": "Position"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGSymbolElement",
			"extends": [
				"SVGElement",
				"SVGStylable",
				"SVGLangSpace",
				"SVGFitToViewBox",
				"SVGExternalResourcesRequired"
			]
		},
		{
			"kind": "variable",
			"name": "SVGSymbolElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGSymbolElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGSymbolElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGElementInstanceList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SVGElementInstance"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGElementInstanceList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGElementInstanceList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGElementInstanceList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSRuleList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "CSSRule"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "CSSRule"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSRuleList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSRuleList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSRuleList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSDataBindingRecordSetExtensions",
			"signatures": [
				{
					"kind": "property",
					"name": "recordset",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "namedRecordset",
					"parameters": [
						{
							"name": "dataMember",
							"type": "string"
						},
						{
							"name": "hierarchy",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "LinkStyle",
			"signatures": [
				{
					"kind": "property",
					"name": "styleSheet",
					"type": "StyleSheet"
				},
				{
					"kind": "property",
					"name": "sheet",
					"type": "StyleSheet"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLVideoElement",
			"extends": [
				"HTMLMediaElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number",
					"description": "Gets or sets the width of the video element."
				},
				{
					"kind": "property",
					"name": "videoWidth",
					"type": "number",
					"description": "Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known."
				},
				{
					"kind": "property",
					"name": "videoHeight",
					"type": "number",
					"description": "Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known."
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number",
					"description": "Gets or sets the height of the video element."
				},
				{
					"kind": "property",
					"name": "poster",
					"type": "string",
					"description": "Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available."
				},
				{
					"kind": "property",
					"name": "msIsStereo3D",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "msStereo3DPackingMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onMSVideoOptimalLayoutChanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onMSVideoFrameStepCompleted",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msStereo3DRenderMode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "msIsLayoutOptimalForPlayback",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "msHorizontalMirror",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "onMSVideoFormatChanged",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "msZoom",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "msInsertVideoEffect",
					"parameters": [
						{
							"name": "activatableClassId",
							"type": "string"
						},
						{
							"name": "effectRequired",
							"type": "boolean"
						},
						{
							"name": "config",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msSetVideoRectangle",
					"parameters": [
						{
							"name": "left",
							"type": "number"
						},
						{
							"name": "top",
							"type": "number"
						},
						{
							"name": "right",
							"type": "number"
						},
						{
							"name": "bottom",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msFrameStep",
					"parameters": [
						{
							"name": "forward",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getVideoPlaybackQuality",
					"returns": "VideoPlaybackQuality"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturedoubletap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerhover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturehold\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgestureend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msgesturetap\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msinertiastart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mslostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"lostpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"gotpointercapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mspointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keydown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"move\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keyup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"reset\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"help\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusin\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"durationchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blur\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"emptied\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"seeking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplay\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"deactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetchanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsdelete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"losecapture\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"controlselect\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"submit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"layoutcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"canplaythrough\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"filterchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"datasetcomplete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"suspend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"errorupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousewheel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseWheelEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"volumechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cellchange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowexit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowsinserted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"propertychange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforepaste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dragstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforecopy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drag\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mouseover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pause\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousedown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"click\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"waiting\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"paste\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"moveend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"stalled\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mousemove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforeeditfocus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ratechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dblclick\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"contextmenu\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MouseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadedmetadata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"afterupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"play\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resizeend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"playing\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focusout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"dataavailable\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"readystatechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"keypress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "KeyboardEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadeddata\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"beforedeactivate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"activate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"movestart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"selectstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"focus\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "FocusEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"resize\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cut\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"select\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"drop\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"copy\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "DragEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"ended\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"scroll\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"rowenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"input\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"mscontentzoom\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSEventObj"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msmanipulationstatechanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"msneedkey\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MSMediaKeyNeededEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"MSVideoOptimalLayoutChanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"MSVideoFrameStepCompleted\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"MSVideoFormatChanged\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLVideoElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLVideoElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLVideoElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ClientRectList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "ClientRect"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "ClientRect"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ClientRectList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ClientRectList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ClientRectList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGMaskElement",
			"extends": [
				"SVGElement",
				"SVGUnitTypes",
				"SVGStylable",
				"SVGLangSpace",
				"SVGTests",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "maskUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "maskContentUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGMaskElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGMaskElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGMaskElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "External"
		},
		{
			"kind": "variable",
			"name": "External",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "External"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "External"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSGestureEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "offsetY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "translationY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "velocityExpansion",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "velocityY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "velocityAngular",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "translationX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "velocityX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "hwTimestamp",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "offsetX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "rotation",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "expansion",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "clientY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "screenY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "scale",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "gestureObject",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "clientX",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initGestureEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "offsetXArg",
							"type": "number"
						},
						{
							"name": "offsetYArg",
							"type": "number"
						},
						{
							"name": "translationXArg",
							"type": "number"
						},
						{
							"name": "translationYArg",
							"type": "number"
						},
						{
							"name": "scaleArg",
							"type": "number"
						},
						{
							"name": "expansionArg",
							"type": "number"
						},
						{
							"name": "rotationArg",
							"type": "number"
						},
						{
							"name": "velocityXArg",
							"type": "number"
						},
						{
							"name": "velocityYArg",
							"type": "number"
						},
						{
							"name": "velocityExpansionArg",
							"type": "number"
						},
						{
							"name": "velocityAngularArg",
							"type": "number"
						},
						{
							"name": "hwTimestampArg",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "MSGESTURE_FLAG_BEGIN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSGESTURE_FLAG_END",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSGESTURE_FLAG_CANCEL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSGESTURE_FLAG_INERTIA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSGESTURE_FLAG_NONE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSGestureEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSGestureEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSGestureEvent"
					},
					{
						"kind": "property",
						"name": "MSGESTURE_FLAG_BEGIN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSGESTURE_FLAG_END",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSGESTURE_FLAG_CANCEL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSGESTURE_FLAG_INERTIA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSGESTURE_FLAG_NONE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ErrorEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "colno",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "filename",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "error",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "lineno",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "initErrorEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "messageArg",
							"type": "string"
						},
						{
							"name": "filenameArg",
							"type": "string"
						},
						{
							"name": "linenoArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ErrorEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ErrorEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ErrorEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFilterElement",
			"extends": [
				"SVGElement",
				"SVGUnitTypes",
				"SVGStylable",
				"SVGLangSpace",
				"SVGURIReference",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "filterResX",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "filterUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "primitiveUnits",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "filterResY",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "method",
					"name": "setFilterRes",
					"parameters": [
						{
							"name": "filterResX",
							"type": "number"
						},
						{
							"name": "filterResY",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFilterElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFilterElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFilterElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TrackEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "track",
					"type": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TrackEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TrackEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TrackEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEMergeNodeElement",
			"extends": [
				"SVGElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEMergeNodeElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEMergeNodeElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEMergeNodeElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEFloodElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEFloodElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEFloodElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEFloodElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSGesture",
			"signatures": [
				{
					"kind": "property",
					"name": "target",
					"type": "Element"
				},
				{
					"kind": "method",
					"name": "addPointer",
					"parameters": [
						{
							"name": "pointerId",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stop",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSGesture",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSGesture"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSGesture"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextTrackCue",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "track",
					"type": "TextTrack"
				},
				{
					"kind": "property",
					"name": "endTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "text",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "pauseOnExit",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "id",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "startTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onexit",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "getCueAsHTML",
					"returns": "DocumentFragment"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"enter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"exit\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextTrackCue",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "startTime",
								"type": "number"
							},
							{
								"name": "endTime",
								"type": "number"
							},
							{
								"name": "text",
								"type": "string"
							}
						],
						"returns": "TextTrackCue"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextTrackCue"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSStreamReader",
			"extends": [
				"MSBaseReader"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "error",
					"type": "DOMError"
				},
				{
					"kind": "method",
					"name": "readAsArrayBuffer",
					"parameters": [
						{
							"name": "stream",
							"type": "MSStream"
						},
						{
							"name": "size",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readAsBlob",
					"parameters": [
						{
							"name": "stream",
							"type": "MSStream"
						},
						{
							"name": "size",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readAsDataURL",
					"parameters": [
						{
							"name": "stream",
							"type": "MSStream"
						},
						{
							"name": "size",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readAsText",
					"parameters": [
						{
							"name": "stream",
							"type": "MSStream"
						},
						{
							"name": "encoding",
							"optional": true,
							"type": "string"
						},
						{
							"name": "size",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSStreamReader",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSStreamReader"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSStreamReader"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMTokenList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "contains",
					"parameters": [
						{
							"name": "token",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "remove",
					"parameters": [
						{
							"name": "token",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "toggle",
					"parameters": [
						{
							"name": "token",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "add",
					"parameters": [
						{
							"name": "token",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMTokenList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMTokenList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMTokenList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEFuncAElement",
			"extends": [
				"SVGComponentTransferFunctionElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEFuncAElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEFuncAElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEFuncAElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFETileElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFETileElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFETileElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFETileElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEBlendElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in2",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "mode",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_DARKEN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_MULTIPLY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_NORMAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_SCREEN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FEBLEND_MODE_LIGHTEN",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEBlendElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEBlendElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEBlendElement"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_DARKEN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_MULTIPLY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_NORMAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_SCREEN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FEBLEND_MODE_LIGHTEN",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MessageChannel",
			"signatures": [
				{
					"kind": "property",
					"name": "port2",
					"type": "MessagePort"
				},
				{
					"kind": "property",
					"name": "port1",
					"type": "MessagePort"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MessageChannel",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MessageChannel"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MessageChannel"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEMergeElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEMergeElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEMergeElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEMergeElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TransitionEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "propertyName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "elapsedTime",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initTransitionEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "propertyNameArg",
							"type": "string"
						},
						{
							"name": "elapsedTimeArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TransitionEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TransitionEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TransitionEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MediaQueryList",
			"signatures": [
				{
					"kind": "property",
					"name": "matches",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "media",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "addListener",
					"parameters": [
						{
							"name": "listener",
							"type": "MediaQueryListListener"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeListener",
					"parameters": [
						{
							"name": "listener",
							"type": "MediaQueryListListener"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MediaQueryList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MediaQueryList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MediaQueryList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMError",
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMError"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CloseEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "wasClean",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "reason",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initCloseEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "wasCleanArg",
							"type": "boolean"
						},
						{
							"name": "codeArg",
							"type": "number"
						},
						{
							"name": "reasonArg",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CloseEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CloseEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CloseEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebSocket",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "protocol",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "bufferedAmount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onopen",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "extensions",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onclose",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "CloseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "binaryType",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "url",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "close",
					"parameters": [
						{
							"name": "code",
							"optional": true,
							"type": "number"
						},
						{
							"name": "reason",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "send",
					"parameters": [
						{
							"name": "data",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "OPEN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CLOSING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CONNECTING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CLOSED",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"open\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"close\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "CloseEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WebSocket",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "url",
								"type": "string"
							},
							{
								"name": "protocols",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "WebSocket"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "url",
								"type": "string"
							},
							{
								"name": "protocols",
								"optional": true,
								"type": {
									"kind": "array",
									"type": "string"
								}
							}
						],
						"returns": "WebSocket"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebSocket"
					},
					{
						"kind": "property",
						"name": "OPEN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CLOSING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CONNECTING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CLOSED",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEPointLightElement",
			"extends": [
				"SVGElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "z",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEPointLightElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEPointLightElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEPointLightElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ProgressEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "loaded",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "lengthComputable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "total",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initProgressEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "lengthComputableArg",
							"type": "boolean"
						},
						{
							"name": "loadedArg",
							"type": "number"
						},
						{
							"name": "totalArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ProgressEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ProgressEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ProgressEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBObjectStore",
			"signatures": [
				{
					"kind": "property",
					"name": "indexNames",
					"type": "DOMStringList"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "transaction",
					"type": "IDBTransaction"
				},
				{
					"kind": "property",
					"name": "keyPath",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "count",
					"parameters": [
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "add",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						},
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "clear",
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "createIndex",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						},
						{
							"name": "keyPath",
							"type": "string"
						},
						{
							"name": "optionalParameters",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBIndex"
				},
				{
					"kind": "method",
					"name": "put",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						},
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "openCursor",
					"parameters": [
						{
							"name": "range",
							"optional": true,
							"type": "any"
						},
						{
							"name": "direction",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "deleteIndex",
					"parameters": [
						{
							"name": "indexName",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "index",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "IDBIndex"
				},
				{
					"kind": "method",
					"name": "get",
					"parameters": [
						{
							"name": "key",
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "delete",
					"parameters": [
						{
							"name": "key",
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBObjectStore",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBObjectStore"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBObjectStore"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEGaussianBlurElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "stdDeviationX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "stdDeviationY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "method",
					"name": "setStdDeviation",
					"parameters": [
						{
							"name": "stdDeviationX",
							"type": "number"
						},
						{
							"name": "stdDeviationY",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEGaussianBlurElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEGaussianBlurElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEGaussianBlurElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFilterPrimitiveStandardAttributes",
			"extends": [
				"SVGStylable"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "SVGAnimatedLength"
				},
				{
					"kind": "property",
					"name": "result",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "interface",
			"name": "IDBVersionChangeEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "newVersion",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "oldVersion",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBVersionChangeEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBVersionChangeEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBVersionChangeEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBIndex",
			"signatures": [
				{
					"kind": "property",
					"name": "unique",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "keyPath",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "objectStore",
					"type": "IDBObjectStore"
				},
				{
					"kind": "method",
					"name": "count",
					"parameters": [
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "getKey",
					"parameters": [
						{
							"name": "key",
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "openKeyCursor",
					"parameters": [
						{
							"name": "range",
							"optional": true,
							"type": "IDBKeyRange"
						},
						{
							"name": "direction",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "get",
					"parameters": [
						{
							"name": "key",
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "openCursor",
					"parameters": [
						{
							"name": "range",
							"optional": true,
							"type": "IDBKeyRange"
						},
						{
							"name": "direction",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "IDBRequest"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBIndex",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBIndex"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBIndex"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "FileList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "File"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "File"
				}
			]
		},
		{
			"kind": "variable",
			"name": "FileList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "FileList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "FileList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBCursor",
			"signatures": [
				{
					"kind": "property",
					"name": "source",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "direction",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "key",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "primaryKey",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "advance",
					"parameters": [
						{
							"name": "count",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "delete",
					"returns": "IDBRequest"
				},
				{
					"kind": "method",
					"name": "continue",
					"parameters": [
						{
							"name": "key",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "update",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						}
					],
					"returns": "IDBRequest"
				},
				{
					"kind": "property",
					"name": "PREV",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "PREV_NO_DUPLICATE",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "NEXT",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "NEXT_NO_DUPLICATE",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBCursor",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBCursor"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBCursor"
					},
					{
						"kind": "property",
						"name": "PREV",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "PREV_NO_DUPLICATE",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "NEXT",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "NEXT_NO_DUPLICATE",
						"type": "string"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFESpecularLightingElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "kernelUnitLengthY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "surfaceScale",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "specularExponent",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "kernelUnitLengthX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "specularConstant",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFESpecularLightingElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFESpecularLightingElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFESpecularLightingElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "File",
			"extends": [
				"Blob"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "lastModifiedDate",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "File",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "File"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "File"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "URL",
			"signatures": [
				{
					"kind": "method",
					"name": "revokeObjectURL",
					"parameters": [
						{
							"name": "url",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createObjectURL",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": "ObjectURLOptions"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "URL",
			"type": "URL"
		},
		{
			"kind": "interface",
			"name": "IDBCursorWithValue",
			"extends": [
				"IDBCursor"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBCursorWithValue",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBCursorWithValue"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBCursorWithValue"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "XMLHttpRequestEventTarget",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "ontimeout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"timeout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "XMLHttpRequestEventTarget",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "XMLHttpRequestEventTarget"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "XMLHttpRequestEventTarget"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBEnvironment",
			"signatures": [
				{
					"kind": "property",
					"name": "msIndexedDB",
					"type": "IDBFactory"
				},
				{
					"kind": "property",
					"name": "indexedDB",
					"type": "IDBFactory"
				}
			]
		},
		{
			"kind": "interface",
			"name": "AudioTrackList",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onchange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onaddtrack",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "TrackEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onremovetrack",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "getTrackById",
					"parameters": [
						{
							"name": "id",
							"type": "string"
						}
					],
					"returns": "AudioTrack"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "AudioTrack"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "AudioTrack"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"change\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"addtrack\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "TrackEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"removetrack\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "AudioTrackList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "AudioTrackList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "AudioTrackList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSBaseReader",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadend",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onloadstart",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "result",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "LOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "EMPTY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DONE",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadend\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"loadstart\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGFEMorphologyElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "operator",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "radiusX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "radiusY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEMorphologyElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEMorphologyElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEMorphologyElement"
					},
					{
						"kind": "property",
						"name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEFuncRElement",
			"extends": [
				"SVGComponentTransferFunctionElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEFuncRElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEFuncRElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEFuncRElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowTimersExtension",
			"signatures": [
				{
					"kind": "method",
					"name": "msSetImmediate",
					"parameters": [
						{
							"name": "expression",
							"type": "any"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "clearImmediate",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "msClearImmediate",
					"parameters": [
						{
							"name": "handle",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "setImmediate",
					"parameters": [
						{
							"name": "expression",
							"type": "any"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "number"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGFEDisplacementMapElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in2",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "xChannelSelector",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "yChannelSelector",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "scale",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "SVG_CHANNEL_B",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_CHANNEL_R",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_CHANNEL_G",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_CHANNEL_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_CHANNEL_A",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEDisplacementMapElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEDisplacementMapElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEDisplacementMapElement"
					},
					{
						"kind": "property",
						"name": "SVG_CHANNEL_B",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_CHANNEL_R",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_CHANNEL_G",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_CHANNEL_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_CHANNEL_A",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "AnimationEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "animationName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "elapsedTime",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initAnimationEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "animationNameArg",
							"type": "string"
						},
						{
							"name": "elapsedTimeArg",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "AnimationEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "AnimationEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "AnimationEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGComponentTransferFunctionElement",
			"extends": [
				"SVGElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "tableValues",
					"type": "SVGAnimatedNumberList"
				},
				{
					"kind": "property",
					"name": "slope",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "exponent",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "amplitude",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "intercept",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "offset",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGComponentTransferFunctionElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGComponentTransferFunctionElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGComponentTransferFunctionElement"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSRangeCollection",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Range"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Range"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSRangeCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSRangeCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSRangeCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEDistantLightElement",
			"extends": [
				"SVGElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "azimuth",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "elevation",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEDistantLightElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEDistantLightElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEDistantLightElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEFuncBElement",
			"extends": [
				"SVGComponentTransferFunctionElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEFuncBElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEFuncBElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEFuncBElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBKeyRange",
			"signatures": [
				{
					"kind": "property",
					"name": "upper",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "upperOpen",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "lower",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "lowerOpen",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBKeyRange",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBKeyRange"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBKeyRange"
					},
					{
						"kind": "method",
						"name": "bound",
						"parameters": [
							{
								"name": "lower",
								"type": "any"
							},
							{
								"name": "upper",
								"type": "any"
							},
							{
								"name": "lowerOpen",
								"optional": true,
								"type": "boolean"
							},
							{
								"name": "upperOpen",
								"optional": true,
								"type": "boolean"
							}
						],
						"returns": "IDBKeyRange"
					},
					{
						"kind": "method",
						"name": "only",
						"parameters": [
							{
								"name": "value",
								"type": "any"
							}
						],
						"returns": "IDBKeyRange"
					},
					{
						"kind": "method",
						"name": "lowerBound",
						"parameters": [
							{
								"name": "bound",
								"type": "any"
							},
							{
								"name": "open",
								"optional": true,
								"type": "boolean"
							}
						],
						"returns": "IDBKeyRange"
					},
					{
						"kind": "method",
						"name": "upperBound",
						"parameters": [
							{
								"name": "bound",
								"type": "any"
							},
							{
								"name": "open",
								"optional": true,
								"type": "boolean"
							}
						],
						"returns": "IDBKeyRange"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowConsole",
			"signatures": [
				{
					"kind": "property",
					"name": "console",
					"type": "Console"
				}
			]
		},
		{
			"kind": "interface",
			"name": "IDBTransaction",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "oncomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "db",
					"type": "IDBDatabase"
				},
				{
					"kind": "property",
					"name": "mode",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "error",
					"type": "DOMError"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "objectStore",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "IDBObjectStore"
				},
				{
					"kind": "property",
					"name": "READ_ONLY",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "VERSION_CHANGE",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "READ_WRITE",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"complete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBTransaction",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBTransaction"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBTransaction"
					},
					{
						"kind": "property",
						"name": "READ_ONLY",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "VERSION_CHANGE",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "READ_WRITE",
						"type": "string"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "AudioTrack",
			"signatures": [
				{
					"kind": "property",
					"name": "kind",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "language",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "id",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "label",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "enabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "sourceBuffer",
					"type": "SourceBuffer"
				}
			]
		},
		{
			"kind": "variable",
			"name": "AudioTrack",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "AudioTrack"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "AudioTrack"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEConvolveMatrixElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "orderY",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "kernelUnitLengthY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "orderX",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "preserveAlpha",
					"type": "SVGAnimatedBoolean"
				},
				{
					"kind": "property",
					"name": "kernelMatrix",
					"type": "SVGAnimatedNumberList"
				},
				{
					"kind": "property",
					"name": "edgeMode",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "kernelUnitLengthX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "bias",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "targetX",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "targetY",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "divisor",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "SVG_EDGEMODE_WRAP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_EDGEMODE_DUPLICATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_EDGEMODE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_EDGEMODE_NONE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEConvolveMatrixElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEConvolveMatrixElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEConvolveMatrixElement"
					},
					{
						"kind": "property",
						"name": "SVG_EDGEMODE_WRAP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_EDGEMODE_DUPLICATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_EDGEMODE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_EDGEMODE_NONE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextTrackCueList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "TextTrackCue"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "TextTrackCue"
				},
				{
					"kind": "method",
					"name": "getCueById",
					"parameters": [
						{
							"name": "id",
							"type": "string"
						}
					],
					"returns": "TextTrackCue"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextTrackCueList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextTrackCueList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextTrackCueList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSKeyframesRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "cssRules",
					"type": "CSSRuleList"
				},
				{
					"kind": "method",
					"name": "findRule",
					"parameters": [
						{
							"name": "rule",
							"type": "string"
						}
					],
					"returns": "CSSKeyframeRule"
				},
				{
					"kind": "method",
					"name": "deleteRule",
					"parameters": [
						{
							"name": "rule",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendRule",
					"parameters": [
						{
							"name": "rule",
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSKeyframesRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSKeyframesRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSKeyframesRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFETurbulenceElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "baseFrequencyX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "numOctaves",
					"type": "SVGAnimatedInteger"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "baseFrequencyY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "stitchTiles",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "seed",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "SVG_STITCHTYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_STITCHTYPE_NOSTITCH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TURBULENCE_TYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TURBULENCE_TYPE_TURBULENCE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_STITCHTYPE_STITCH",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFETurbulenceElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFETurbulenceElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFETurbulenceElement"
					},
					{
						"kind": "property",
						"name": "SVG_STITCHTYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_STITCHTYPE_NOSTITCH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TURBULENCE_TYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TURBULENCE_TYPE_TURBULENCE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_STITCHTYPE_STITCH",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "TextTrackList",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "onaddtrack",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "TrackEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "TextTrack"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "TextTrack"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"addtrack\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "TrackEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextTrackList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextTrackList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextTrackList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEFuncGElement",
			"extends": [
				"SVGComponentTransferFunctionElement"
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEFuncGElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEFuncGElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEFuncGElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEColorMatrixElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "values",
					"type": "SVGAnimatedNumberList"
				},
				{
					"kind": "property",
					"name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEColorMatrixElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEColorMatrixElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEColorMatrixElement"
					},
					{
						"kind": "property",
						"name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFESpotLightElement",
			"extends": [
				"SVGElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "pointsAtY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "y",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "limitingConeAngle",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "specularExponent",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "pointsAtZ",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "z",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "pointsAtX",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFESpotLightElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFESpotLightElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFESpotLightElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WindowBase64",
			"signatures": [
				{
					"kind": "method",
					"name": "btoa",
					"parameters": [
						{
							"name": "rawString",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "atob",
					"parameters": [
						{
							"name": "encodedString",
							"type": "string"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "interface",
			"name": "IDBDatabase",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "version",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "objectStoreNames",
					"type": "DOMStringList"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "createObjectStore",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						},
						{
							"name": "optionalParameters",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "IDBObjectStore"
				},
				{
					"kind": "method",
					"name": "close",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "transaction",
					"parameters": [
						{
							"name": "storeNames",
							"type": "any"
						},
						{
							"name": "mode",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "IDBTransaction"
				},
				{
					"kind": "method",
					"name": "deleteObjectStore",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBDatabase",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBDatabase"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBDatabase"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMStringList",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "contains",
					"parameters": [
						{
							"name": "str",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMStringList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMStringList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMStringList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBOpenDBRequest",
			"extends": [
				"IDBRequest"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onupgradeneeded",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "IDBVersionChangeEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onblocked",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"success\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"upgradeneeded\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "IDBVersionChangeEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"blocked\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBOpenDBRequest",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBOpenDBRequest"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBOpenDBRequest"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLProgressElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "number",
					"description": "Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value."
				},
				{
					"kind": "property",
					"name": "max",
					"type": "number",
					"description": "Defines the maximum, or \"done\" value for a progress element."
				},
				{
					"kind": "property",
					"name": "position",
					"type": "number",
					"description": "Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar)."
				},
				{
					"kind": "property",
					"name": "form",
					"type": "HTMLFormElement",
					"description": "Retrieves a reference to the form that the object is embedded in."
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLProgressElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLProgressElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLProgressElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSLaunchUriCallback",
			"signatures": [
				{
					"kind": "call",
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGFEOffsetElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "dy",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "dx",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEOffsetElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEOffsetElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEOffsetElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSUnsafeFunctionCallback",
			"signatures": [
				{
					"kind": "call",
					"returns": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "TextTrack",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "language",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "mode",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "activeCues",
					"type": "TextTrackCueList"
				},
				{
					"kind": "property",
					"name": "cues",
					"type": "TextTrackCueList"
				},
				{
					"kind": "property",
					"name": "oncuechange",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "kind",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "onload",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "label",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "addCue",
					"parameters": [
						{
							"name": "cue",
							"type": "TextTrackCue"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeCue",
					"parameters": [
						{
							"name": "cue",
							"type": "TextTrackCue"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "ERROR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHOWING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOADED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NONE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HIDDEN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DISABLED",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cuechange\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"load\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "TextTrack",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "TextTrack"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "TextTrack"
					},
					{
						"kind": "property",
						"name": "ERROR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SHOWING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOADING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOADED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NONE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HIDDEN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DISABLED",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MediaQueryListListener",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "mql",
							"type": "MediaQueryList"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "IDBRequest",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "source",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "onsuccess",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "error",
					"type": "DOMError"
				},
				{
					"kind": "property",
					"name": "transaction",
					"type": "IDBTransaction"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "result",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"success\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBRequest",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBRequest"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBRequest"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MessagePort",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "close",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "postMessage",
					"parameters": [
						{
							"name": "message",
							"optional": true,
							"type": "any"
						},
						{
							"name": "ports",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "start",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MessagePort",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MessagePort"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MessagePort"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "FileReader",
			"extends": [
				"MSBaseReader"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "error",
					"type": "DOMError"
				},
				{
					"kind": "method",
					"name": "readAsArrayBuffer",
					"parameters": [
						{
							"name": "blob",
							"type": "Blob"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readAsDataURL",
					"parameters": [
						{
							"name": "blob",
							"type": "Blob"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readAsText",
					"parameters": [
						{
							"name": "blob",
							"type": "Blob"
						},
						{
							"name": "encoding",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "FileReader",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "FileReader"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "FileReader"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ApplicationCache",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "status",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ondownloading",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onupdateready",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncached",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onobsolete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onchecking",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onnoupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "swapCache",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "update",
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "CHECKING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNCACHED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UPDATEREADY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DOWNLOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "IDLE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "OBSOLETE",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"downloading\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"updateready\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"cached\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"obsolete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"checking\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"noupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ApplicationCache",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ApplicationCache"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ApplicationCache"
					},
					{
						"kind": "property",
						"name": "CHECKING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNCACHED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UPDATEREADY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DOWNLOADING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "IDLE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "OBSOLETE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "FrameRequestCallback",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "time",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "PopStateEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "state",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "initPopStateEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "stateArg",
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PopStateEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PopStateEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PopStateEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CSSKeyframeRule",
			"extends": [
				"CSSRule"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "keyText",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "style",
					"type": "CSSStyleDeclaration"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CSSKeyframeRule",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CSSKeyframeRule"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CSSKeyframeRule"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSFileSaver",
			"signatures": [
				{
					"kind": "method",
					"name": "msSaveBlob",
					"parameters": [
						{
							"name": "blob",
							"type": "any"
						},
						{
							"name": "defaultName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "msSaveOrOpenBlob",
					"parameters": [
						{
							"name": "blob",
							"type": "any"
						},
						{
							"name": "defaultName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MSStream",
			"signatures": [
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "msDetachStream",
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "msClose",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSStream",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSStream"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSStream"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSBlobBuilder",
			"signatures": [
				{
					"kind": "method",
					"name": "append",
					"parameters": [
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "endings",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getBlob",
					"parameters": [
						{
							"name": "contentType",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "Blob"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSBlobBuilder",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSBlobBuilder"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSBlobBuilder"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMSettableTokenList",
			"extends": [
				"DOMTokenList"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DOMSettableTokenList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMSettableTokenList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMSettableTokenList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "IDBFactory",
			"signatures": [
				{
					"kind": "method",
					"name": "open",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						},
						{
							"name": "version",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "IDBOpenDBRequest"
				},
				{
					"kind": "method",
					"name": "cmp",
					"parameters": [
						{
							"name": "first",
							"type": "any"
						},
						{
							"name": "second",
							"type": "any"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "deleteDatabase",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "IDBOpenDBRequest"
				}
			]
		},
		{
			"kind": "variable",
			"name": "IDBFactory",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "IDBFactory"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "IDBFactory"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSPointerEvent",
			"extends": [
				"MouseEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "rotation",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pressure",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pointerType",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "isPrimary",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "tiltY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "intermediatePoints",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "currentPoint",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "tiltX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "hwTimestamp",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pointerId",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initPointerEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "ctrlKeyArg",
							"type": "boolean"
						},
						{
							"name": "altKeyArg",
							"type": "boolean"
						},
						{
							"name": "shiftKeyArg",
							"type": "boolean"
						},
						{
							"name": "metaKeyArg",
							"type": "boolean"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						},
						{
							"name": "offsetXArg",
							"type": "number"
						},
						{
							"name": "offsetYArg",
							"type": "number"
						},
						{
							"name": "widthArg",
							"type": "number"
						},
						{
							"name": "heightArg",
							"type": "number"
						},
						{
							"name": "pressure",
							"type": "number"
						},
						{
							"name": "rotation",
							"type": "number"
						},
						{
							"name": "tiltX",
							"type": "number"
						},
						{
							"name": "tiltY",
							"type": "number"
						},
						{
							"name": "pointerIdArg",
							"type": "number"
						},
						{
							"name": "pointerType",
							"type": "any"
						},
						{
							"name": "hwTimestampArg",
							"type": "number"
						},
						{
							"name": "isPrimary",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getCurrentPoint",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getIntermediatePoints",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "MSPOINTER_TYPE_PEN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSPOINTER_TYPE_MOUSE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MSPOINTER_TYPE_TOUCH",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSPointerEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSPointerEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSPointerEvent"
					},
					{
						"kind": "property",
						"name": "MSPOINTER_TYPE_PEN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSPOINTER_TYPE_MOUSE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MSPOINTER_TYPE_TOUCH",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSManipulationEvent",
			"extends": [
				"UIEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "lastState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "currentState",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initMSManipulationEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "lastState",
							"type": "number"
						},
						{
							"name": "currentState",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_STOPPED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_ACTIVE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_INERTIA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_SELECTING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_COMMITTED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_PRESELECT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_DRAGGING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MANIPULATION_STATE_CANCELLED",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSManipulationEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSManipulationEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSManipulationEvent"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_STOPPED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_ACTIVE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_INERTIA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_SELECTING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_COMMITTED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_PRESELECT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_DRAGGING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MANIPULATION_STATE_CANCELLED",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "FormData",
			"signatures": [
				{
					"kind": "method",
					"name": "append",
					"parameters": [
						{
							"name": "name",
							"type": "any"
						},
						{
							"name": "value",
							"type": "any"
						},
						{
							"name": "blobName",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "FormData",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "FormData"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "FormData"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLDataListElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "options",
					"type": "HTMLCollection"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDataListElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDataListElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDataListElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEImageElement",
			"extends": [
				"SVGElement",
				"SVGLangSpace",
				"SVGFilterPrimitiveStandardAttributes",
				"SVGURIReference",
				"SVGExternalResourcesRequired"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "preserveAspectRatio",
					"type": "SVGAnimatedPreserveAspectRatio"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEImageElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEImageElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEImageElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "AbstractWorker",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SVGFECompositeElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "operator",
					"type": "SVGAnimatedEnumeration"
				},
				{
					"kind": "property",
					"name": "in2",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "k2",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "k1",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "k3",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "k4",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_OUT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_OVER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_XOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_IN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFECompositeElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFECompositeElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFECompositeElement"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_OUT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_OVER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_XOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_IN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ValidityState",
			"signatures": [
				{
					"kind": "property",
					"name": "customError",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "valueMissing",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "stepMismatch",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "rangeUnderflow",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "rangeOverflow",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "typeMismatch",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "patternMismatch",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "tooLong",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "valid",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ValidityState",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ValidityState"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ValidityState"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLTrackElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "kind",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "srclang",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "track",
					"type": "TextTrack"
				},
				{
					"kind": "property",
					"name": "label",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "default",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ERROR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOADING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOADED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NONE",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLTrackElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLTrackElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLTrackElement"
					},
					{
						"kind": "property",
						"name": "ERROR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOADING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOADED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NONE",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSApp",
			"signatures": [
				{
					"kind": "method",
					"name": "createFileFromStorageFile",
					"parameters": [
						{
							"name": "storageFile",
							"type": "any"
						}
					],
					"returns": "File"
				},
				{
					"kind": "method",
					"name": "createBlobFromRandomAccessStream",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "seeker",
							"type": "any"
						}
					],
					"returns": "Blob"
				},
				{
					"kind": "method",
					"name": "createStreamFromInputStream",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "inputStream",
							"type": "any"
						}
					],
					"returns": "MSStream"
				},
				{
					"kind": "method",
					"name": "terminateApp",
					"parameters": [
						{
							"name": "exceptionObject",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createDataPackage",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "execUnsafeLocalFunction",
					"parameters": [
						{
							"name": "unsafeFunction",
							"type": "MSUnsafeFunctionCallback"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getHtmlPrintDocumentSource",
					"parameters": [
						{
							"name": "htmlDoc",
							"type": "any"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "addPublicLocalApplicationUri",
					"parameters": [
						{
							"name": "uri",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createDataPackageFromSelection",
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getViewOpener",
					"returns": "MSAppView"
				},
				{
					"kind": "method",
					"name": "suppressSubdownloadCredentialPrompts",
					"parameters": [
						{
							"name": "suppress",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "execAsyncAtPriority",
					"parameters": [
						{
							"name": "asynchronousCallback",
							"type": "MSExecAtPriorityFunctionCallback"
						},
						{
							"name": "priority",
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isTaskScheduledAtPriorityOrHigher",
					"parameters": [
						{
							"name": "priority",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "execAtPriority",
					"parameters": [
						{
							"name": "synchronousCallback",
							"type": "MSExecAtPriorityFunctionCallback"
						},
						{
							"name": "priority",
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "createNewView",
					"parameters": [
						{
							"name": "uri",
							"type": "string"
						}
					],
					"returns": "MSAppView"
				},
				{
					"kind": "method",
					"name": "getCurrentPriority",
					"returns": "string"
				},
				{
					"kind": "property",
					"name": "NORMAL",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "HIGH",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "IDLE",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "CURRENT",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSApp",
			"type": "MSApp"
		},
		{
			"kind": "interface",
			"name": "SVGFEComponentTransferElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEComponentTransferElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEComponentTransferElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEComponentTransferElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SVGFEDiffuseLightingElement",
			"extends": [
				"SVGElement",
				"SVGFilterPrimitiveStandardAttributes"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "kernelUnitLengthY",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "surfaceScale",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "in1",
					"type": "SVGAnimatedString"
				},
				{
					"kind": "property",
					"name": "kernelUnitLengthX",
					"type": "SVGAnimatedNumber"
				},
				{
					"kind": "property",
					"name": "diffuseConstant",
					"type": "SVGAnimatedNumber"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SVGFEDiffuseLightingElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SVGFEDiffuseLightingElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SVGFEDiffuseLightingElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSCSSMatrix",
			"signatures": [
				{
					"kind": "property",
					"name": "m24",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m34",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "a",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "d",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m32",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m41",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m11",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "f",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "e",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m23",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m14",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m33",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m22",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m21",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "c",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m12",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "b",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m42",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m31",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m43",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m13",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "m44",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "multiply",
					"parameters": [
						{
							"name": "secondMatrix",
							"type": "MSCSSMatrix"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "skewY",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "setMatrixValue",
					"parameters": [
						{
							"name": "value",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "inverse",
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "rotateAxisAngle",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						},
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "toString",
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "rotate",
					"parameters": [
						{
							"name": "angleX",
							"type": "number"
						},
						{
							"name": "angleY",
							"optional": true,
							"type": "number"
						},
						{
							"name": "angleZ",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "translate",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "scale",
					"parameters": [
						{
							"name": "scaleX",
							"type": "number"
						},
						{
							"name": "scaleY",
							"optional": true,
							"type": "number"
						},
						{
							"name": "scaleZ",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				},
				{
					"kind": "method",
					"name": "skewX",
					"parameters": [
						{
							"name": "angle",
							"type": "number"
						}
					],
					"returns": "MSCSSMatrix"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSCSSMatrix",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "text",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "MSCSSMatrix"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSCSSMatrix"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Worker",
			"extends": [
				"AbstractWorker"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "onmessage",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "postMessage",
					"parameters": [
						{
							"name": "message",
							"type": "any"
						},
						{
							"name": "ports",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "terminate",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"message\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "MessageEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Worker",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "stringUrl",
								"type": "string"
							}
						],
						"returns": "Worker"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Worker"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSExecAtPriorityFunctionCallback",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MSGraphicsTrust",
			"signatures": [
				{
					"kind": "property",
					"name": "status",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "constrictionActive",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSGraphicsTrust",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSGraphicsTrust"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSGraphicsTrust"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SubtleCrypto",
			"signatures": [
				{
					"kind": "method",
					"name": "unwrapKey",
					"parameters": [
						{
							"name": "wrappedKey",
							"type": "ArrayBufferView"
						},
						{
							"name": "keyAlgorithm",
							"type": "any"
						},
						{
							"name": "keyEncryptionKey",
							"type": "Key"
						},
						{
							"name": "extractable",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "keyUsages",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "encrypt",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "key",
							"type": "Key"
						},
						{
							"name": "buffer",
							"optional": true,
							"type": "ArrayBufferView"
						}
					],
					"returns": "CryptoOperation"
				},
				{
					"kind": "method",
					"name": "importKey",
					"parameters": [
						{
							"name": "format",
							"type": "string"
						},
						{
							"name": "keyData",
							"type": "ArrayBufferView"
						},
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "extractable",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "keyUsages",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "wrapKey",
					"parameters": [
						{
							"name": "key",
							"type": "Key"
						},
						{
							"name": "keyEncryptionKey",
							"type": "Key"
						},
						{
							"name": "keyWrappingAlgorithm",
							"type": "any"
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "verify",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "key",
							"type": "Key"
						},
						{
							"name": "signature",
							"type": "ArrayBufferView"
						},
						{
							"name": "buffer",
							"optional": true,
							"type": "ArrayBufferView"
						}
					],
					"returns": "CryptoOperation"
				},
				{
					"kind": "method",
					"name": "deriveKey",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "baseKey",
							"type": "Key"
						},
						{
							"name": "derivedKeyType",
							"type": "any"
						},
						{
							"name": "extractable",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "keyUsages",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "digest",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "buffer",
							"optional": true,
							"type": "ArrayBufferView"
						}
					],
					"returns": "CryptoOperation"
				},
				{
					"kind": "method",
					"name": "exportKey",
					"parameters": [
						{
							"name": "format",
							"type": "string"
						},
						{
							"name": "key",
							"type": "Key"
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "generateKey",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "extractable",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "keyUsages",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						}
					],
					"returns": "KeyOperation"
				},
				{
					"kind": "method",
					"name": "sign",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "key",
							"type": "Key"
						},
						{
							"name": "buffer",
							"optional": true,
							"type": "ArrayBufferView"
						}
					],
					"returns": "CryptoOperation"
				},
				{
					"kind": "method",
					"name": "decrypt",
					"parameters": [
						{
							"name": "algorithm",
							"type": "any"
						},
						{
							"name": "key",
							"type": "Key"
						},
						{
							"name": "buffer",
							"optional": true,
							"type": "ArrayBufferView"
						}
					],
					"returns": "CryptoOperation"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SubtleCrypto",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SubtleCrypto"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SubtleCrypto"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Crypto",
			"extends": [
				"RandomSource"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "subtle",
					"type": "SubtleCrypto"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Crypto",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Crypto"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Crypto"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "VideoPlaybackQuality",
			"signatures": [
				{
					"kind": "property",
					"name": "totalFrameDelay",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "creationTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "totalVideoFrames",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "droppedVideoFrames",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "VideoPlaybackQuality",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "VideoPlaybackQuality"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "VideoPlaybackQuality"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "GlobalEventHandlers",
			"signatures": [
				{
					"kind": "property",
					"name": "onpointerenter",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointerout",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointerdown",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointerup",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointercancel",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointerover",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointermove",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onpointerleave",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerenter\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerout\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerdown\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerup\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointercancel\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerover\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointermove\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"pointerleave\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "PointerEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "Key",
			"signatures": [
				{
					"kind": "property",
					"name": "algorithm",
					"type": "Algorithm"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "extractable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "keyUsage",
					"type": {
						"kind": "array",
						"type": "string"
					}
				}
			]
		},
		{
			"kind": "variable",
			"name": "Key",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Key"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Key"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DeviceAcceleration",
			"signatures": [
				{
					"kind": "property",
					"name": "y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "x",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "z",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DeviceAcceleration",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DeviceAcceleration"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DeviceAcceleration"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "HTMLAllCollection",
			"extends": [
				"HTMLCollection"
			],
			"signatures": [
				{
					"kind": "method",
					"name": "namedItem",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Element"
				}
			]
		},
		{
			"kind": "variable",
			"name": "HTMLAllCollection",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLAllCollection"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLAllCollection"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "AesGcmEncryptResult",
			"signatures": [
				{
					"kind": "property",
					"name": "ciphertext",
					"type": "ArrayBuffer"
				},
				{
					"kind": "property",
					"name": "tag",
					"type": "ArrayBuffer"
				}
			]
		},
		{
			"kind": "variable",
			"name": "AesGcmEncryptResult",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "AesGcmEncryptResult"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "AesGcmEncryptResult"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NavigationCompletedEvent",
			"extends": [
				"NavigationEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "webErrorStatus",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "isSuccess",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NavigationCompletedEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "NavigationCompletedEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "NavigationCompletedEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MutationRecord",
			"signatures": [
				{
					"kind": "property",
					"name": "oldValue",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "previousSibling",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "addedNodes",
					"type": "NodeList"
				},
				{
					"kind": "property",
					"name": "attributeName",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "removedNodes",
					"type": "NodeList"
				},
				{
					"kind": "property",
					"name": "target",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "nextSibling",
					"type": "Node"
				},
				{
					"kind": "property",
					"name": "attributeNamespace",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MutationRecord",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MutationRecord"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MutationRecord"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MimeTypeArray",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Plugin"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Plugin"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						}
					],
					"returns": "Plugin"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MimeTypeArray",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MimeTypeArray"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MimeTypeArray"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "KeyOperation",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "oncomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "result",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"complete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "KeyOperation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "KeyOperation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "KeyOperation"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DOMStringMap"
		},
		{
			"kind": "variable",
			"name": "DOMStringMap",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DOMStringMap"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DOMStringMap"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DeviceOrientationEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "gamma",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "alpha",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "absolute",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "beta",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initDeviceOrientationEvent",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "bubbles",
							"type": "boolean"
						},
						{
							"name": "cancelable",
							"type": "boolean"
						},
						{
							"name": "alpha",
							"type": "number"
						},
						{
							"name": "beta",
							"type": "number"
						},
						{
							"name": "gamma",
							"type": "number"
						},
						{
							"name": "absolute",
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DeviceOrientationEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DeviceOrientationEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DeviceOrientationEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMediaKeys",
			"signatures": [
				{
					"kind": "property",
					"name": "keySystem",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "createSession",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "initData",
							"type": "Uint8Array"
						},
						{
							"name": "cdmData",
							"optional": true,
							"type": "Uint8Array"
						}
					],
					"returns": "MSMediaKeySession"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMediaKeys",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "keySystem",
								"type": "string"
							}
						],
						"returns": "MSMediaKeys"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMediaKeys"
					},
					{
						"kind": "method",
						"name": "isTypeSupported",
						"parameters": [
							{
								"name": "keySystem",
								"type": "string"
							},
							{
								"name": "type",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "boolean"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMediaKeyMessageEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "destinationURL",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "message",
					"type": "Uint8Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMediaKeyMessageEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSMediaKeyMessageEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMediaKeyMessageEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSHTMLWebViewElement",
			"extends": [
				"HTMLElement"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "documentTitle",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "src",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "canGoForward",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "canGoBack",
					"type": "boolean"
				},
				{
					"kind": "method",
					"name": "navigateWithHttpRequestMessage",
					"parameters": [
						{
							"name": "requestMessage",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "goBack",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "navigate",
					"parameters": [
						{
							"name": "uri",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stop",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "navigateToString",
					"parameters": [
						{
							"name": "contents",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "captureSelectedContentToDataPackageAsync",
					"returns": "MSWebViewAsyncOperation"
				},
				{
					"kind": "method",
					"name": "capturePreviewToBlobAsync",
					"returns": "MSWebViewAsyncOperation"
				},
				{
					"kind": "method",
					"name": "refresh",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "goForward",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "navigateToLocalStreamUri",
					"parameters": [
						{
							"name": "source",
							"type": "string"
						},
						{
							"name": "streamResolver",
							"type": "any"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "invokeScriptAsync",
					"parameters": [
						{
							"name": "scriptName",
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "MSWebViewAsyncOperation"
				},
				{
					"kind": "method",
					"name": "buildLocalStreamUri",
					"parameters": [
						{
							"name": "contentIdentifier",
							"type": "string"
						},
						{
							"name": "relativePath",
							"type": "string"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSHTMLWebViewElement",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSHTMLWebViewElement"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSHTMLWebViewElement"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "NavigationEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "uri",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "NavigationEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "NavigationEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "NavigationEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "RandomSource",
			"signatures": [
				{
					"kind": "method",
					"name": "getRandomValues",
					"parameters": [
						{
							"name": "array",
							"type": "ArrayBufferView"
						}
					],
					"returns": "ArrayBufferView"
				}
			]
		},
		{
			"kind": "interface",
			"name": "SourceBuffer",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "updating",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "appendWindowStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "appendWindowEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "buffered",
					"type": "TimeRanges"
				},
				{
					"kind": "property",
					"name": "timestampOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "audioTracks",
					"type": "AudioTrackList"
				},
				{
					"kind": "method",
					"name": "appendBuffer",
					"parameters": [
						{
							"name": "data",
							"type": "ArrayBuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "remove",
					"parameters": [
						{
							"name": "start",
							"type": "number"
						},
						{
							"name": "end",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "appendStream",
					"parameters": [
						{
							"name": "stream",
							"type": "MSStream"
						},
						{
							"name": "maxSize",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SourceBuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SourceBuffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SourceBuffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSInputMethodContext",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "oncandidatewindowshow",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "target",
					"type": "HTMLElement"
				},
				{
					"kind": "property",
					"name": "compositionStartOffset",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "oncandidatewindowhide",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "oncandidatewindowupdate",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "compositionEndOffset",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "getCompositionAlternatives",
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "method",
					"name": "getCandidateWindowClientRect",
					"returns": "ClientRect"
				},
				{
					"kind": "method",
					"name": "hasComposition",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "isCandidateWindowVisible",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"candidatewindowshow\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"candidatewindowhide\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"candidatewindowupdate\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSInputMethodContext",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSInputMethodContext"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSInputMethodContext"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DeviceRotationRate",
			"signatures": [
				{
					"kind": "property",
					"name": "gamma",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "alpha",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "beta",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DeviceRotationRate",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DeviceRotationRate"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DeviceRotationRate"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PluginArray",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "refresh",
					"parameters": [
						{
							"name": "reload",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "Plugin"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "Plugin"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "Plugin"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PluginArray",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PluginArray"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PluginArray"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMediaKeyError",
			"signatures": [
				{
					"kind": "property",
					"name": "systemCode",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_SERVICE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_HARDWARECHANGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_OUTPUT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_DOMAIN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MS_MEDIA_KEYERR_CLIENT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMediaKeyError",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSMediaKeyError"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMediaKeyError"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_SERVICE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_HARDWARECHANGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_OUTPUT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_DOMAIN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_UNKNOWN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MS_MEDIA_KEYERR_CLIENT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Plugin",
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "filename",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "version",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "description",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "MimeType"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "MimeType"
				},
				{
					"kind": "method",
					"name": "namedItem",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						}
					],
					"returns": "MimeType"
				}
			]
		},
		{
			"kind": "variable",
			"name": "Plugin",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "Plugin"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Plugin"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MediaSource",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "sourceBuffers",
					"type": "SourceBufferList"
				},
				{
					"kind": "property",
					"name": "duration",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "activeSourceBuffers",
					"type": "SourceBufferList"
				},
				{
					"kind": "method",
					"name": "addSourceBuffer",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						}
					],
					"returns": "SourceBuffer"
				},
				{
					"kind": "method",
					"name": "endOfStream",
					"parameters": [
						{
							"name": "error",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "removeSourceBuffer",
					"parameters": [
						{
							"name": "sourceBuffer",
							"type": "SourceBuffer"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MediaSource",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MediaSource"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MediaSource"
					},
					{
						"kind": "method",
						"name": "isTypeSupported",
						"parameters": [
							{
								"name": "type",
								"type": "string"
							}
						],
						"returns": "boolean"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "SourceBufferList",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "item",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "SourceBuffer"
				},
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "SourceBuffer"
				}
			]
		},
		{
			"kind": "variable",
			"name": "SourceBufferList",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "SourceBufferList"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "SourceBufferList"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "XMLDocument",
			"extends": [
				"Document"
			]
		},
		{
			"kind": "variable",
			"name": "XMLDocument",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "XMLDocument"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "XMLDocument"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "DeviceMotionEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "rotationRate",
					"type": "DeviceRotationRate"
				},
				{
					"kind": "property",
					"name": "acceleration",
					"type": "DeviceAcceleration"
				},
				{
					"kind": "property",
					"name": "interval",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "accelerationIncludingGravity",
					"type": "DeviceAcceleration"
				},
				{
					"kind": "method",
					"name": "initDeviceMotionEvent",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "bubbles",
							"type": "boolean"
						},
						{
							"name": "cancelable",
							"type": "boolean"
						},
						{
							"name": "acceleration",
							"type": "DeviceAccelerationDict"
						},
						{
							"name": "accelerationIncludingGravity",
							"type": "DeviceAccelerationDict"
						},
						{
							"name": "rotationRate",
							"type": "DeviceRotationRateDict"
						},
						{
							"name": "interval",
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "DeviceMotionEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "DeviceMotionEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "DeviceMotionEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MimeType",
			"signatures": [
				{
					"kind": "property",
					"name": "enabledPlugin",
					"type": "Plugin"
				},
				{
					"kind": "property",
					"name": "suffixes",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "description",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MimeType",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MimeType"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MimeType"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PointerEvent",
			"extends": [
				"MouseEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "width",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "rotation",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pressure",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pointerType",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "isPrimary",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "tiltY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "height",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "intermediatePoints",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "currentPoint",
					"type": "any"
				},
				{
					"kind": "property",
					"name": "tiltX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "hwTimestamp",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "pointerId",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "initPointerEvent",
					"parameters": [
						{
							"name": "typeArg",
							"type": "string"
						},
						{
							"name": "canBubbleArg",
							"type": "boolean"
						},
						{
							"name": "cancelableArg",
							"type": "boolean"
						},
						{
							"name": "viewArg",
							"type": "Window"
						},
						{
							"name": "detailArg",
							"type": "number"
						},
						{
							"name": "screenXArg",
							"type": "number"
						},
						{
							"name": "screenYArg",
							"type": "number"
						},
						{
							"name": "clientXArg",
							"type": "number"
						},
						{
							"name": "clientYArg",
							"type": "number"
						},
						{
							"name": "ctrlKeyArg",
							"type": "boolean"
						},
						{
							"name": "altKeyArg",
							"type": "boolean"
						},
						{
							"name": "shiftKeyArg",
							"type": "boolean"
						},
						{
							"name": "metaKeyArg",
							"type": "boolean"
						},
						{
							"name": "buttonArg",
							"type": "number"
						},
						{
							"name": "relatedTargetArg",
							"type": "EventTarget"
						},
						{
							"name": "offsetXArg",
							"type": "number"
						},
						{
							"name": "offsetYArg",
							"type": "number"
						},
						{
							"name": "widthArg",
							"type": "number"
						},
						{
							"name": "heightArg",
							"type": "number"
						},
						{
							"name": "pressure",
							"type": "number"
						},
						{
							"name": "rotation",
							"type": "number"
						},
						{
							"name": "tiltX",
							"type": "number"
						},
						{
							"name": "tiltY",
							"type": "number"
						},
						{
							"name": "pointerIdArg",
							"type": "number"
						},
						{
							"name": "pointerType",
							"type": "any"
						},
						{
							"name": "hwTimestampArg",
							"type": "number"
						},
						{
							"name": "isPrimary",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getCurrentPoint",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getIntermediatePoints",
					"parameters": [
						{
							"name": "element",
							"type": "Element"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PointerEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PointerEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PointerEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSDocumentExtensions",
			"signatures": [
				{
					"kind": "method",
					"name": "captureEvents",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "releaseEvents",
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "MutationObserver",
			"signatures": [
				{
					"kind": "method",
					"name": "observe",
					"parameters": [
						{
							"name": "target",
							"type": "Node"
						},
						{
							"name": "options",
							"type": "MutationObserverInit"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "takeRecords",
					"returns": {
						"kind": "array",
						"type": "MutationRecord"
					}
				},
				{
					"kind": "method",
					"name": "disconnect",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MutationObserver",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "callback",
								"type": {
									"kind": "function",
									"parameters": [
										{
											"name": "arr",
											"type": {
												"kind": "array",
												"type": "MutationRecord"
											}
										},
										{
											"name": "observer",
											"type": "MutationObserver"
										}
									],
									"returns": "any"
								}
							}
						],
						"returns": "MutationObserver"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MutationObserver"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSWebViewAsyncOperation",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "target",
					"type": "MSHTMLWebViewElement"
				},
				{
					"kind": "property",
					"name": "oncomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "error",
					"type": "DOMError"
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "readyState",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "result",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "start",
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "ERROR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_INVOKE_SCRIPT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPLETED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STARTED",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"complete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSWebViewAsyncOperation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSWebViewAsyncOperation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSWebViewAsyncOperation"
					},
					{
						"kind": "property",
						"name": "ERROR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_INVOKE_SCRIPT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPLETED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STARTED",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "ScriptNotifyEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "value",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "callingUri",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "ScriptNotifyEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "ScriptNotifyEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "ScriptNotifyEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerformanceNavigationTiming",
			"extends": [
				"PerformanceEntry"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "redirectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domComplete",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domainLookupStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "loadEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unloadEventEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "fetchStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "requestStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domInteractive",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "navigationStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "loadEventEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "connectStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "responseEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domLoading",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "redirectEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "redirectCount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "unloadEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domContentLoadedEventStart",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "domContentLoadedEventEnd",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerformanceNavigationTiming",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerformanceNavigationTiming"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerformanceNavigationTiming"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMediaKeyNeededEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "initData",
					"type": "Uint8Array"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMediaKeyNeededEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSMediaKeyNeededEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMediaKeyNeededEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "LongRunningScriptDetectedEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "stopPageScriptExecution",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "executionTime",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "LongRunningScriptDetectedEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "LongRunningScriptDetectedEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "LongRunningScriptDetectedEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSAppView",
			"signatures": [
				{
					"kind": "property",
					"name": "viewId",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "close",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "postMessage",
					"parameters": [
						{
							"name": "message",
							"type": "any"
						},
						{
							"name": "targetOrigin",
							"type": "string"
						},
						{
							"name": "ports",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSAppView",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSAppView"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSAppView"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PerfWidgetExternal",
			"signatures": [
				{
					"kind": "property",
					"name": "maxCpuSpeed",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "independentRenderingEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "irDisablingContentString",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "irStatusAvailable",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "performanceCounter",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "averagePaintTime",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "activeNetworkRequestCount",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "paintRequestsPerSecond",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "extraInformationEnabled",
					"type": "boolean"
				},
				{
					"kind": "property",
					"name": "performanceCounterFrequency",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "averageFrameTime",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "repositionWindow",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getRecentMemoryUsage",
					"parameters": [
						{
							"name": "last",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getMemoryUsage",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "resizeWindow",
					"parameters": [
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getProcessCpuUsage",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "removeEventListener",
					"parameters": [
						{
							"name": "eventType",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getRecentCpuUsage",
					"parameters": [
						{
							"name": "last",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "eventType",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "any"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getRecentFrames",
					"parameters": [
						{
							"name": "last",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getRecentPaintRequests",
					"parameters": [
						{
							"name": "last",
							"type": "number"
						}
					],
					"returns": "any"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PerfWidgetExternal",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PerfWidgetExternal"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PerfWidgetExternal"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "PageTransitionEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "persisted",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "variable",
			"name": "PageTransitionEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "PageTransitionEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "PageTransitionEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MutationCallback",
			"signatures": [
				{
					"kind": "call",
					"parameters": [
						{
							"name": "mutations",
							"type": {
								"kind": "array",
								"type": "MutationRecord"
							}
						},
						{
							"name": "observer",
							"type": "MutationObserver"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "interface",
			"name": "HTMLDocument",
			"extends": [
				"Document"
			]
		},
		{
			"kind": "variable",
			"name": "HTMLDocument",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "HTMLDocument"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "HTMLDocument"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "KeyPair",
			"signatures": [
				{
					"kind": "property",
					"name": "privateKey",
					"type": "Key"
				},
				{
					"kind": "property",
					"name": "publicKey",
					"type": "Key"
				}
			]
		},
		{
			"kind": "variable",
			"name": "KeyPair",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "KeyPair"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "KeyPair"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "MSMediaKeySession",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "sessionId",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "error",
					"type": "MSMediaKeyError"
				},
				{
					"kind": "property",
					"name": "keySystem",
					"type": "string"
				},
				{
					"kind": "method",
					"name": "close",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "update",
					"parameters": [
						{
							"name": "key",
							"type": "Uint8Array"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "MSMediaKeySession",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "MSMediaKeySession"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "MSMediaKeySession"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "UnviewableContentIdentifiedEvent",
			"extends": [
				"NavigationEvent"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "referrer",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "UnviewableContentIdentifiedEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "UnviewableContentIdentifiedEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "UnviewableContentIdentifiedEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "CryptoOperation",
			"extends": [
				"EventTarget"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "algorithm",
					"type": "Algorithm"
				},
				{
					"kind": "property",
					"name": "oncomplete",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onerror",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ErrorEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onprogress",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "onabort",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"kind": "property",
					"name": "key",
					"type": "Key"
				},
				{
					"kind": "property",
					"name": "result",
					"type": "any"
				},
				{
					"kind": "method",
					"name": "abort",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "finish",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "process",
					"parameters": [
						{
							"name": "buffer",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"complete\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "Event"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"error\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ErrorEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"progress\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "ProgressEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "\"abort\""
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "ev",
										"type": "UIEvent"
									}
								],
								"returns": "any"
							}
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "addEventListener",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "EventListener"
						},
						{
							"name": "useCapture",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "CryptoOperation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "CryptoOperation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "CryptoOperation"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLTexture",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLTexture",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLTexture"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLTexture"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "OES_texture_float"
		},
		{
			"kind": "variable",
			"name": "OES_texture_float",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "OES_texture_float"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "OES_texture_float"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLContextEvent",
			"extends": [
				"Event"
			],
			"signatures": [
				{
					"kind": "property",
					"name": "statusMessage",
					"type": "string"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WebGLContextEvent",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLContextEvent"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLContextEvent"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLRenderbuffer",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLRenderbuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLRenderbuffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLRenderbuffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLUniformLocation"
		},
		{
			"kind": "variable",
			"name": "WebGLUniformLocation",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLUniformLocation"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLUniformLocation"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLActiveInfo",
			"signatures": [
				{
					"kind": "property",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "property",
					"name": "type",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "size",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WebGLActiveInfo",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLActiveInfo"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLActiveInfo"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WEBGL_compressed_texture_s3tc",
			"signatures": [
				{
					"kind": "property",
					"name": "COMPRESSED_RGBA_S3TC_DXT1_EXT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPRESSED_RGBA_S3TC_DXT5_EXT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPRESSED_RGBA_S3TC_DXT3_EXT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPRESSED_RGB_S3TC_DXT1_EXT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WEBGL_compressed_texture_s3tc",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WEBGL_compressed_texture_s3tc"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WEBGL_compressed_texture_s3tc"
					},
					{
						"kind": "property",
						"name": "COMPRESSED_RGBA_S3TC_DXT1_EXT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPRESSED_RGBA_S3TC_DXT5_EXT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPRESSED_RGBA_S3TC_DXT3_EXT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPRESSED_RGB_S3TC_DXT1_EXT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLRenderingContext",
			"signatures": [
				{
					"kind": "property",
					"name": "drawingBufferWidth",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "drawingBufferHeight",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "canvas",
					"type": "HTMLCanvasElement"
				},
				{
					"kind": "method",
					"name": "getUniformLocation",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "WebGLUniformLocation"
				},
				{
					"kind": "method",
					"name": "bindTexture",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "texture",
							"type": "WebGLTexture"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bufferData",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBufferView"
						},
						{
							"name": "usage",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bufferData",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBuffer"
						},
						{
							"name": "usage",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bufferData",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "size",
							"type": "number"
						},
						{
							"name": "usage",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "depthMask",
					"parameters": [
						{
							"name": "flag",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getUniform",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "vertexAttrib3fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib3fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "linkProgram",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getSupportedExtensions",
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "method",
					"name": "bufferSubData",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bufferSubData",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttribPointer",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "size",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "normalized",
							"type": "boolean"
						},
						{
							"name": "stride",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "polygonOffset",
					"parameters": [
						{
							"name": "factor",
							"type": "number"
						},
						{
							"name": "units",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blendColor",
					"parameters": [
						{
							"name": "red",
							"type": "number"
						},
						{
							"name": "green",
							"type": "number"
						},
						{
							"name": "blue",
							"type": "number"
						},
						{
							"name": "alpha",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createTexture",
					"returns": "WebGLTexture"
				},
				{
					"kind": "method",
					"name": "hint",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getVertexAttrib",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "enableVertexAttribArray",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "depthRange",
					"parameters": [
						{
							"name": "zNear",
							"type": "number"
						},
						{
							"name": "zFar",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "cullFace",
					"parameters": [
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createFramebuffer",
					"returns": "WebGLFramebuffer"
				},
				{
					"kind": "method",
					"name": "uniformMatrix4fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniformMatrix4fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "framebufferTexture2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "attachment",
							"type": "number"
						},
						{
							"name": "textarget",
							"type": "number"
						},
						{
							"name": "texture",
							"type": "WebGLTexture"
						},
						{
							"name": "level",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteFramebuffer",
					"parameters": [
						{
							"name": "framebuffer",
							"type": "WebGLFramebuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "colorMask",
					"parameters": [
						{
							"name": "red",
							"type": "boolean"
						},
						{
							"name": "green",
							"type": "boolean"
						},
						{
							"name": "blue",
							"type": "boolean"
						},
						{
							"name": "alpha",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "compressedTexImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "border",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniformMatrix2fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniformMatrix2fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getExtension",
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "createProgram",
					"returns": "WebGLProgram"
				},
				{
					"kind": "method",
					"name": "deleteShader",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getAttachedShaders",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": {
						"kind": "array",
						"type": "WebGLShader"
					}
				},
				{
					"kind": "method",
					"name": "enable",
					"parameters": [
						{
							"name": "cap",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blendEquation",
					"parameters": [
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "border",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "pixels",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "image",
							"type": "HTMLImageElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "canvas",
							"type": "HTMLCanvasElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "video",
							"type": "HTMLVideoElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "pixels",
							"type": "ImageData"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createBuffer",
					"returns": "WebGLBuffer"
				},
				{
					"kind": "method",
					"name": "deleteTexture",
					"parameters": [
						{
							"name": "texture",
							"type": "WebGLTexture"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "useProgram",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib2fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib2fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "checkFramebufferStatus",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "frontFace",
					"parameters": [
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getBufferParameter",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "texSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "pixels",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "image",
							"type": "HTMLImageElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "canvas",
							"type": "HTMLCanvasElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "video",
							"type": "HTMLVideoElement"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "pixels",
							"type": "ImageData"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "copyTexImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "border",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getVertexAttribOffset",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "disableVertexAttribArray",
					"parameters": [
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blendFunc",
					"parameters": [
						{
							"name": "sfactor",
							"type": "number"
						},
						{
							"name": "dfactor",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "drawElements",
					"parameters": [
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "count",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isFramebuffer",
					"parameters": [
						{
							"name": "framebuffer",
							"type": "WebGLFramebuffer"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "uniform3iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform3iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Int32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "lineWidth",
					"parameters": [
						{
							"name": "width",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getShaderInfoLog",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "getTexParameter",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getParameter",
					"parameters": [
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getShaderPrecisionFormat",
					"parameters": [
						{
							"name": "shadertype",
							"type": "number"
						},
						{
							"name": "precisiontype",
							"type": "number"
						}
					],
					"returns": "WebGLShaderPrecisionFormat"
				},
				{
					"kind": "method",
					"name": "getContextAttributes",
					"returns": "WebGLContextAttributes"
				},
				{
					"kind": "method",
					"name": "vertexAttrib1f",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bindFramebuffer",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "framebuffer",
							"type": "WebGLFramebuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "compressedTexSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "data",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isContextLost",
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "uniform1iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform1iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Int32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getRenderbufferParameter",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "uniform2fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform2fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isTexture",
					"parameters": [
						{
							"name": "texture",
							"type": "WebGLTexture"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "getError",
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "shaderSource",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						},
						{
							"name": "source",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteRenderbuffer",
					"parameters": [
						{
							"name": "renderbuffer",
							"type": "WebGLRenderbuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stencilMask",
					"parameters": [
						{
							"name": "mask",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bindBuffer",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "buffer",
							"type": "WebGLBuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getAttribLocation",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "uniform3i",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blendEquationSeparate",
					"parameters": [
						{
							"name": "modeRGB",
							"type": "number"
						},
						{
							"name": "modeAlpha",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clear",
					"parameters": [
						{
							"name": "mask",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "blendFuncSeparate",
					"parameters": [
						{
							"name": "srcRGB",
							"type": "number"
						},
						{
							"name": "dstRGB",
							"type": "number"
						},
						{
							"name": "srcAlpha",
							"type": "number"
						},
						{
							"name": "dstAlpha",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stencilFuncSeparate",
					"parameters": [
						{
							"name": "face",
							"type": "number"
						},
						{
							"name": "func",
							"type": "number"
						},
						{
							"name": "ref",
							"type": "number"
						},
						{
							"name": "mask",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "readPixels",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						},
						{
							"name": "format",
							"type": "number"
						},
						{
							"name": "type",
							"type": "number"
						},
						{
							"name": "pixels",
							"type": "ArrayBufferView"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "scissor",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform2i",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getActiveAttrib",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "WebGLActiveInfo"
				},
				{
					"kind": "method",
					"name": "getShaderSource",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "generateMipmap",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "bindAttribLocation",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "index",
							"type": "number"
						},
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform1fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform1fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform2iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform2iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Int32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stencilOp",
					"parameters": [
						{
							"name": "fail",
							"type": "number"
						},
						{
							"name": "zfail",
							"type": "number"
						},
						{
							"name": "zpass",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform4fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform4fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib1fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib1fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "flush",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform4f",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteProgram",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isRenderbuffer",
					"parameters": [
						{
							"name": "renderbuffer",
							"type": "WebGLRenderbuffer"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "uniform1i",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getProgramParameter",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "getActiveUniform",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "index",
							"type": "number"
						}
					],
					"returns": "WebGLActiveInfo"
				},
				{
					"kind": "method",
					"name": "stencilFunc",
					"parameters": [
						{
							"name": "func",
							"type": "number"
						},
						{
							"name": "ref",
							"type": "number"
						},
						{
							"name": "mask",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "pixelStorei",
					"parameters": [
						{
							"name": "pname",
							"type": "number"
						},
						{
							"name": "param",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "disable",
					"parameters": [
						{
							"name": "cap",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib4fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib4fv",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "values",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "createRenderbuffer",
					"returns": "WebGLRenderbuffer"
				},
				{
					"kind": "method",
					"name": "isBuffer",
					"parameters": [
						{
							"name": "buffer",
							"type": "WebGLBuffer"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "stencilOpSeparate",
					"parameters": [
						{
							"name": "face",
							"type": "number"
						},
						{
							"name": "fail",
							"type": "number"
						},
						{
							"name": "zfail",
							"type": "number"
						},
						{
							"name": "zpass",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getFramebufferAttachmentParameter",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "attachment",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "uniform4i",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "sampleCoverage",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "invert",
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "depthFunc",
					"parameters": [
						{
							"name": "func",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texParameterf",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						},
						{
							"name": "param",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib3f",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "drawArrays",
					"parameters": [
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "first",
							"type": "number"
						},
						{
							"name": "count",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "texParameteri",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "pname",
							"type": "number"
						},
						{
							"name": "param",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "vertexAttrib4f",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						},
						{
							"name": "w",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getShaderParameter",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						},
						{
							"name": "pname",
							"type": "number"
						}
					],
					"returns": "any"
				},
				{
					"kind": "method",
					"name": "clearDepth",
					"parameters": [
						{
							"name": "depth",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "activeTexture",
					"parameters": [
						{
							"name": "texture",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "viewport",
					"parameters": [
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "detachShader",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform1f",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniformMatrix3fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniformMatrix3fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "transpose",
							"type": "boolean"
						},
						{
							"name": "value",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "deleteBuffer",
					"parameters": [
						{
							"name": "buffer",
							"type": "WebGLBuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "copyTexSubImage2D",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "level",
							"type": "number"
						},
						{
							"name": "xoffset",
							"type": "number"
						},
						{
							"name": "yoffset",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform3fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform3fv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Float32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "stencilMaskSeparate",
					"parameters": [
						{
							"name": "face",
							"type": "number"
						},
						{
							"name": "mask",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "attachShader",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						},
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "compileShader",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "clearColor",
					"parameters": [
						{
							"name": "red",
							"type": "number"
						},
						{
							"name": "green",
							"type": "number"
						},
						{
							"name": "blue",
							"type": "number"
						},
						{
							"name": "alpha",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isShader",
					"parameters": [
						{
							"name": "shader",
							"type": "WebGLShader"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "clearStencil",
					"parameters": [
						{
							"name": "s",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "framebufferRenderbuffer",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "attachment",
							"type": "number"
						},
						{
							"name": "renderbuffertarget",
							"type": "number"
						},
						{
							"name": "renderbuffer",
							"type": "WebGLRenderbuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "finish",
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform2f",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "renderbufferStorage",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "internalformat",
							"type": "number"
						},
						{
							"name": "width",
							"type": "number"
						},
						{
							"name": "height",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform3f",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						},
						{
							"name": "z",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "getProgramInfoLog",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "validateProgram",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isEnabled",
					"parameters": [
						{
							"name": "cap",
							"type": "number"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "vertexAttrib2f",
					"parameters": [
						{
							"name": "indx",
							"type": "number"
						},
						{
							"name": "x",
							"type": "number"
						},
						{
							"name": "y",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "isProgram",
					"parameters": [
						{
							"name": "program",
							"type": "WebGLProgram"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "method",
					"name": "createShader",
					"parameters": [
						{
							"name": "type",
							"type": "number"
						}
					],
					"returns": "WebGLShader"
				},
				{
					"kind": "method",
					"name": "bindRenderbuffer",
					"parameters": [
						{
							"name": "target",
							"type": "number"
						},
						{
							"name": "renderbuffer",
							"type": "WebGLRenderbuffer"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform4iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": {
								"kind": "array",
								"type": "number"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "uniform4iv",
					"parameters": [
						{
							"name": "location",
							"type": "WebGLUniformLocation"
						},
						{
							"name": "v",
							"type": "Int32Array"
						}
					],
					"returns": "void"
				},
				{
					"kind": "property",
					"name": "DEPTH_FUNC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_COMPONENT16",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "REPLACE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "REPEAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_ENABLED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BUFFER_BIT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_REF",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE26",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RGB565",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DITHER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CONSTANT_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "GENERATE_MIPMAP_HINT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "POINTS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DECR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INT_VEC3",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE28",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_CONSTANT_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BACK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_STENCIL_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNPACK_FLIP_Y_WEBGL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE9",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ARRAY_BUFFER_BINDING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_VIEWPORT_DIMS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_FRAMEBUFFER_OPERATION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE0",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE31",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE24",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HIGH_INT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_BINDING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FASTEST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_WRITEMASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ALIASED_POINT_SIZE_RANGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE12",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DST_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_EQUATION_RGB",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_COMPLETE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NEAREST_MIPMAP_NEAREST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE3",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_WRITEMASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CONTEXT_LOST_WEBGL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_VALUE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_MAG_FILTER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_CONSTANT_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_SRC_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NOTEQUAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_STENCIL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_VERTEX_UNIFORM_VECTORS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_COMPONENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_RED_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE20",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RED_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_BLUE_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SCISSOR_BOX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VENDOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRONT_AND_BACK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CONSTANT_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NEAREST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CULL_FACE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ALIASED_LINE_WIDTH_RANGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE19",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRONT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_CLEAR_VALUE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "GREEN_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE29",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE23",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_RENDERBUFFER_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_ATTACHMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE27",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BOOL_VEC2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "OUT_OF_MEMORY",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MIRRORED_REPEAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "POLYGON_OFFSET_UNITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_MIN_FILTER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_PASS_DEPTH_PASS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINE_LOOP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_MAT3",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE14",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINEAR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RGB5_A1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_SRC_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLE_COVERAGE_INVERT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DONT_CARE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_BINDING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_ALPHA_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_REF",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ZERO",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DECR_WRAP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLE_COVERAGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_FUNC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE30",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VIEWPORT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COLOR_WRITEMASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLE_COVERAGE_VALUE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_FAIL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_MAT4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_SHORT_4_4_4_4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE6",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_WIDTH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RGBA4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ALWAYS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_EQUATION_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COLOR_BUFFER_BIT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_BUFFER_BIT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_CLEAR_VALUE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_EQUATION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_GREEN_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NEAREST_MIPMAP_LINEAR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_TYPE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INCR_WRAP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_DST_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "HIGH_FLOAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BYTE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRONT_FACE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLE_ALPHA_TO_COVERAGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CCW",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE13",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_VERTEX_ATTRIBS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_WRAP_T",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_VEC2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LUMINANCE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "GREATER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INT_VEC2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VALIDATE_STATUS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_UNSUPPORTED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE5",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FUNC_SUBTRACT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_DST_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLER_CUBE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE_MINUS_DST_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LESS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_POSITIVE_X",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLUE_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_TEST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_STRIDE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DELETE_STATUS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE18",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "POLYGON_OFFSET_FACTOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_INT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_2D",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DST_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_MAT2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPRESSED_TEXTURE_FORMATS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_FRAGMENT_UNIFORM_VECTORS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_STENCIL_ATTACHMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LUMINANCE_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CW",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINEAR_MIPMAP_LINEAR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BUFFER_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLE_BUFFERS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE15",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ACTIVE_TEXTURE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_SHADER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE22",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERTEX_ATTRIB_ARRAY_POINTER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INCR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COMPILE_STATUS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE7",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_SHORT_5_5_5_1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RGBA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TRIANGLE_STRIP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COLOR_CLEAR_VALUE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BROWSER_DEFAULT_WEBGL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_ENUM",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SCISSOR_TEST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINE_STRIP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_FUNC",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_HEIGHT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE8",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TRIANGLES",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_VALUE_MASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE25",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LEQUAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE1",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_INDEX8",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FUNC_ADD",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_FAIL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_SRC_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BOOL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ALPHA_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOW_INT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE10",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SRC_COLOR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_VARYING_VECTORS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_DST_RGB",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_BINDING_CUBE_MAP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_INDEX",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_BINDING_2D",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIUM_INT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHADER_TYPE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "POLYGON_OFFSET_FILL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DYNAMIC_DRAW",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_PASS_DEPTH_FAIL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STREAM_DRAW",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_CUBE_MAP_TEXTURE_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE17",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TRIANGLE_FAN",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNPACK_ALIGNMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CURRENT_PROGRAM",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINES",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVALID_OPERATION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINEAR_MIPMAP_NEAREST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CLAMP_TO_EDGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_DEPTH_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_WRAP_S",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ELEMENT_ARRAY_BUFFER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_SHORT_5_6_5",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ACTIVE_UNIFORMS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_VEC3",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NO_ERROR",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ATTACHED_SHADERS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_ATTACHMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE11",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_TEST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ONE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STATIC_DRAW",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "GEQUAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BOOL_VEC4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "COLOR_ATTACHMENT0",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "PACK_ALIGNMENT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_TEXTURE_SIZE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_PASS_DEPTH_FAIL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CULL_FACE_MODE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE16",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_BACK_WRITEMASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SRC_ALPHA",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_SHORT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE21",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FUNC_REVERSE_SUBTRACT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHADING_LANGUAGE_VERSION",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "EQUAL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BOOL_VEC3",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLER_2D",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_TEXTURE_IMAGE_UNITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RENDERBUFFER_INTERNAL_FORMAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_VALUE_MASK",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ELEMENT_ARRAY_BUFFER_BINDING",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ARRAY_BUFFER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "DEPTH_RANGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NICEST",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "ACTIVE_ATTRIBUTES",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NEVER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FLOAT_VEC4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "CURRENT_VERTEX_ATTRIB",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "STENCIL_PASS_DEPTH_PASS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INVERT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINK_STATUS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "RGB",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INT_VEC4",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "TEXTURE2",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MEDIUM_FLOAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SRC_ALPHA_SATURATE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BUFFER_USAGE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SHORT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "NONE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "UNSIGNED_BYTE",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "INT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SUBPIXEL_BITS",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "KEEP",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "SAMPLES",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "FRAGMENT_SHADER",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LINE_WIDTH",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "BLEND_SRC_RGB",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "LOW_FLOAT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "VERSION",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WebGLRenderingContext",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLRenderingContext"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLRenderingContext"
					},
					{
						"kind": "property",
						"name": "DEPTH_FUNC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_COMPONENT16",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "REPLACE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "REPEAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_ENABLED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BUFFER_BIT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_REF",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE26",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RGB565",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DITHER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CONSTANT_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "GENERATE_MIPMAP_HINT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "POINTS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DECR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INT_VEC3",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE28",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_CONSTANT_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BACK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_STENCIL_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNPACK_FLIP_Y_WEBGL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE9",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ARRAY_BUFFER_BINDING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_VIEWPORT_DIMS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_FRAMEBUFFER_OPERATION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE0",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE31",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE24",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HIGH_INT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_BINDING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FASTEST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_WRITEMASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ALIASED_POINT_SIZE_RANGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE12",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DST_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_EQUATION_RGB",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_COMPLETE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NEAREST_MIPMAP_NEAREST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE3",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_WRITEMASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CONTEXT_LOST_WEBGL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_MAG_FILTER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_CONSTANT_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_SRC_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NOTEQUAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_STENCIL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_VERTEX_UNIFORM_VECTORS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_COMPONENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_RED_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE20",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RED_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_BLUE_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SCISSOR_BOX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VENDOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRONT_AND_BACK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CONSTANT_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NEAREST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CULL_FACE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ALIASED_LINE_WIDTH_RANGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE19",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRONT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_CLEAR_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "GREEN_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE29",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE23",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_RENDERBUFFER_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_ATTACHMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE27",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BOOL_VEC2",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "OUT_OF_MEMORY",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MIRRORED_REPEAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "POLYGON_OFFSET_UNITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_MIN_FILTER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_PASS_DEPTH_PASS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINE_LOOP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_MAT3",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE14",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINEAR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RGB5_A1",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_SRC_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLE_COVERAGE_INVERT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DONT_CARE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_BINDING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_ALPHA_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_REF",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ZERO",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DECR_WRAP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLE_COVERAGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_FUNC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE30",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VIEWPORT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COLOR_WRITEMASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLE_COVERAGE_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_FAIL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_MAT4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_SHORT_4_4_4_4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE6",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_WIDTH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RGBA4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ALWAYS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_EQUATION_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COLOR_BUFFER_BIT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_BUFFER_BIT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_CLEAR_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_EQUATION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_GREEN_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NEAREST_MIPMAP_LINEAR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_TYPE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INCR_WRAP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_DST_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "HIGH_FLOAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BYTE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRONT_FACE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLE_ALPHA_TO_COVERAGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CCW",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE13",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_VERTEX_ATTRIBS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_WRAP_T",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_VEC2",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LUMINANCE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "GREATER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INT_VEC2",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VALIDATE_STATUS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_UNSUPPORTED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE5",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FUNC_SUBTRACT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_DST_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLER_CUBE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE_MINUS_DST_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LESS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_POSITIVE_X",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLUE_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_TEST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_STRIDE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DELETE_STATUS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE18",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "POLYGON_OFFSET_FACTOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_INT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_2D",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DST_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_MAT2",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPRESSED_TEXTURE_FORMATS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_FRAGMENT_UNIFORM_VECTORS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_STENCIL_ATTACHMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LUMINANCE_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CW",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINEAR_MIPMAP_LINEAR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BUFFER_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLE_BUFFERS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE15",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ACTIVE_TEXTURE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_SHADER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE22",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERTEX_ATTRIB_ARRAY_POINTER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INCR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COMPILE_STATUS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE7",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_SHORT_5_5_5_1",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RGBA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TRIANGLE_STRIP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COLOR_CLEAR_VALUE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BROWSER_DEFAULT_WEBGL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_ENUM",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SCISSOR_TEST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINE_STRIP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_FUNC",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_HEIGHT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE8",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TRIANGLES",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_VALUE_MASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE25",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LEQUAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE1",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_INDEX8",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FUNC_ADD",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_FAIL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_SRC_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BOOL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ALPHA_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOW_INT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE10",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SRC_COLOR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_VARYING_VECTORS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_DST_RGB",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_BINDING_CUBE_MAP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_INDEX",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_BINDING_2D",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIUM_INT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SHADER_TYPE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "POLYGON_OFFSET_FILL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DYNAMIC_DRAW",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_PASS_DEPTH_FAIL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STREAM_DRAW",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_CUBE_MAP_TEXTURE_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE17",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TRIANGLE_FAN",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNPACK_ALIGNMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CURRENT_PROGRAM",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINES",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVALID_OPERATION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINEAR_MIPMAP_NEAREST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CLAMP_TO_EDGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_DEPTH_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_WRAP_S",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ELEMENT_ARRAY_BUFFER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_SHORT_5_6_5",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ACTIVE_UNIFORMS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_VEC3",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NO_ERROR",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ATTACHED_SHADERS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_ATTACHMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE11",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_TEST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ONE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STATIC_DRAW",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "GEQUAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BOOL_VEC4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "COLOR_ATTACHMENT0",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "PACK_ALIGNMENT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_TEXTURE_SIZE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_PASS_DEPTH_FAIL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CULL_FACE_MODE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE16",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_BACK_WRITEMASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SRC_ALPHA",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_SHORT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE21",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FUNC_REVERSE_SUBTRACT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SHADING_LANGUAGE_VERSION",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "EQUAL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BOOL_VEC3",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLER_2D",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_TEXTURE_IMAGE_UNITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RENDERBUFFER_INTERNAL_FORMAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_VALUE_MASK",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ELEMENT_ARRAY_BUFFER_BINDING",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ARRAY_BUFFER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "DEPTH_RANGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NICEST",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "ACTIVE_ATTRIBUTES",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NEVER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FLOAT_VEC4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "CURRENT_VERTEX_ATTRIB",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "STENCIL_PASS_DEPTH_PASS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INVERT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINK_STATUS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "RGB",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INT_VEC4",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "TEXTURE2",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MEDIUM_FLOAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SRC_ALPHA_SATURATE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BUFFER_USAGE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SHORT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "NONE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "UNSIGNED_BYTE",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "INT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SUBPIXEL_BITS",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "KEEP",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "SAMPLES",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "FRAGMENT_SHADER",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LINE_WIDTH",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "BLEND_SRC_RGB",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "LOW_FLOAT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "VERSION",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLProgram",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLProgram",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLProgram"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLProgram"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "OES_standard_derivatives",
			"signatures": [
				{
					"kind": "property",
					"name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "OES_standard_derivatives",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "OES_standard_derivatives"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "OES_standard_derivatives"
					},
					{
						"kind": "property",
						"name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLFramebuffer",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLFramebuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLFramebuffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLFramebuffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLShader",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLShader",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLShader"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLShader"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "OES_texture_float_linear"
		},
		{
			"kind": "variable",
			"name": "OES_texture_float_linear",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "OES_texture_float_linear"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "OES_texture_float_linear"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLObject"
		},
		{
			"kind": "variable",
			"name": "WebGLObject",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLObject"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLObject"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLBuffer",
			"extends": [
				"WebGLObject"
			]
		},
		{
			"kind": "variable",
			"name": "WebGLBuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLBuffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLBuffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "WebGLShaderPrecisionFormat",
			"signatures": [
				{
					"kind": "property",
					"name": "rangeMin",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "rangeMax",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "precision",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WebGLShaderPrecisionFormat",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "WebGLShaderPrecisionFormat"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "WebGLShaderPrecisionFormat"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "EXT_texture_filter_anisotropic",
			"signatures": [
				{
					"kind": "property",
					"name": "TEXTURE_MAX_ANISOTROPY_EXT",
					"type": "number"
				},
				{
					"kind": "property",
					"name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
					"type": "number"
				}
			]
		},
		{
			"kind": "variable",
			"name": "EXT_texture_filter_anisotropic",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"returns": "EXT_texture_filter_anisotropic"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "EXT_texture_filter_anisotropic"
					},
					{
						"kind": "property",
						"name": "TEXTURE_MAX_ANISOTROPY_EXT",
						"type": "number"
					},
					{
						"kind": "property",
						"name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
						"type": "number"
					}
				]
			}
		},
		{
			"kind": "variable",
			"name": "Option",
			"type": {
				"kind": "constructor",
				"parameters": [
					{
						"name": "text",
						"optional": true,
						"type": "string"
					},
					{
						"name": "value",
						"optional": true,
						"type": "string"
					},
					{
						"name": "defaultSelected",
						"optional": true,
						"type": "boolean"
					},
					{
						"name": "selected",
						"optional": true,
						"type": "boolean"
					}
				],
				"returns": "HTMLOptionElement"
			}
		},
		{
			"kind": "variable",
			"name": "Image",
			"type": {
				"kind": "constructor",
				"parameters": [
					{
						"name": "width",
						"optional": true,
						"type": "number"
					},
					{
						"name": "height",
						"optional": true,
						"type": "number"
					}
				],
				"returns": "HTMLImageElement"
			}
		},
		{
			"kind": "variable",
			"name": "Audio",
			"type": {
				"kind": "constructor",
				"parameters": [
					{
						"name": "src",
						"optional": true,
						"type": "string"
					}
				],
				"returns": "HTMLAudioElement"
			}
		},
		{
			"kind": "variable",
			"name": "ondragend",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onkeydown",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "KeyboardEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondragover",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onkeyup",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "KeyboardEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onreset",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmouseup",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondragstart",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondrag",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "screenX",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onmouseover",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondragleave",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "history",
			"type": "History"
		},
		{
			"kind": "variable",
			"name": "pageXOffset",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "name",
			"type": "string"
		},
		{
			"kind": "variable",
			"name": "onafterprint",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpause",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onbeforeprint",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "top",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "onmousedown",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onseeked",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "opener",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "onclick",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "innerHeight",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onwaiting",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ononline",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondurationchange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "frames",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "onblur",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "FocusEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onemptied",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onseeking",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "oncanplay",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "outerWidth",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onstalled",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmousemove",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "innerWidth",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onoffline",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "length",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "screen",
			"type": "Screen"
		},
		{
			"kind": "variable",
			"name": "onbeforeunload",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "BeforeUnloadEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onratechange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onstorage",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "StorageEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onloadstart",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondragenter",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onsubmit",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "self",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "document",
			"type": "Document"
		},
		{
			"kind": "variable",
			"name": "onprogress",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "ProgressEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondblclick",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "pageYOffset",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "oncontextmenu",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onchange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onloadedmetadata",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onplay",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onerror",
			"type": "ErrorEventHandler"
		},
		{
			"kind": "variable",
			"name": "onplaying",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "parent",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "location",
			"type": "Location"
		},
		{
			"kind": "variable",
			"name": "oncanplaythrough",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onabort",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "UIEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onreadystatechange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "outerHeight",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onkeypress",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "KeyboardEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "frameElement",
			"type": "Element"
		},
		{
			"kind": "variable",
			"name": "onloadeddata",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onsuspend",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "window",
			"type": "Window"
		},
		{
			"kind": "variable",
			"name": "onfocus",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "FocusEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmessage",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MessageEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ontimeupdate",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onresize",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "UIEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onselect",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "UIEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "navigator",
			"type": "Navigator"
		},
		{
			"kind": "variable",
			"name": "styleMedia",
			"type": "StyleMedia"
		},
		{
			"kind": "variable",
			"name": "ondrop",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DragEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmouseout",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onended",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onhashchange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onunload",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onscroll",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "UIEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "screenY",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onmousewheel",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseWheelEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onload",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onvolumechange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "oninput",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "performance",
			"type": "Performance"
		},
		{
			"kind": "variable",
			"name": "onmspointerdown",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "animationStartTime",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onmsgesturedoubletap",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointerhover",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmsgesturehold",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointermove",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmsgesturechange",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmsgesturestart",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointercancel",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmsgestureend",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmsgesturetap",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointerout",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "msAnimationStartTime",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "applicationCache",
			"type": "ApplicationCache"
		},
		{
			"kind": "variable",
			"name": "onmsinertiastart",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointerover",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpopstate",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PopStateEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointerup",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpageshow",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PageTransitionEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "ondevicemotion",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DeviceMotionEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "devicePixelRatio",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "msCrypto",
			"type": "Crypto"
		},
		{
			"kind": "variable",
			"name": "ondeviceorientation",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "DeviceOrientationEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "doNotTrack",
			"type": "string"
		},
		{
			"kind": "variable",
			"name": "onmspointerenter",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpagehide",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PageTransitionEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onmspointerleave",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "any"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "function",
			"name": "alert",
			"parameters": [
				{
					"name": "message",
					"optional": true,
					"type": "any"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "scroll",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "focus",
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "scrollTo",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "print",
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "prompt",
			"parameters": [
				{
					"name": "message",
					"optional": true,
					"type": "string"
				},
				{
					"name": "_default",
					"optional": true,
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "toString",
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "open",
			"parameters": [
				{
					"name": "url",
					"optional": true,
					"type": "string"
				},
				{
					"name": "target",
					"optional": true,
					"type": "string"
				},
				{
					"name": "features",
					"optional": true,
					"type": "string"
				},
				{
					"name": "replace",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "Window"
		},
		{
			"kind": "function",
			"name": "scrollBy",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "confirm",
			"parameters": [
				{
					"name": "message",
					"optional": true,
					"type": "string"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "close",
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "postMessage",
			"parameters": [
				{
					"name": "message",
					"type": "any"
				},
				{
					"name": "targetOrigin",
					"type": "string"
				},
				{
					"name": "ports",
					"optional": true,
					"type": "any"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "showModalDialog",
			"parameters": [
				{
					"name": "url",
					"optional": true,
					"type": "string"
				},
				{
					"name": "argument",
					"optional": true,
					"type": "any"
				},
				{
					"name": "options",
					"optional": true,
					"type": "any"
				}
			],
			"returns": "any"
		},
		{
			"kind": "function",
			"name": "blur",
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "getSelection",
			"returns": "Selection"
		},
		{
			"kind": "function",
			"name": "getComputedStyle",
			"parameters": [
				{
					"name": "elt",
					"type": "Element"
				},
				{
					"name": "pseudoElt",
					"optional": true,
					"type": "string"
				}
			],
			"returns": "CSSStyleDeclaration"
		},
		{
			"kind": "function",
			"name": "msCancelRequestAnimationFrame",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "matchMedia",
			"parameters": [
				{
					"name": "mediaQuery",
					"type": "string"
				}
			],
			"returns": "MediaQueryList"
		},
		{
			"kind": "function",
			"name": "cancelAnimationFrame",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "msIsStaticHTML",
			"parameters": [
				{
					"name": "html",
					"type": "string"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "msMatchMedia",
			"parameters": [
				{
					"name": "mediaQuery",
					"type": "string"
				}
			],
			"returns": "MediaQueryList"
		},
		{
			"kind": "function",
			"name": "requestAnimationFrame",
			"parameters": [
				{
					"name": "callback",
					"type": "FrameRequestCallback"
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "msRequestAnimationFrame",
			"parameters": [
				{
					"name": "callback",
					"type": "FrameRequestCallback"
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "removeEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "string"
				},
				{
					"name": "listener",
					"type": "EventListener"
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "dispatchEvent",
			"parameters": [
				{
					"name": "evt",
					"type": "Event"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "attachEvent",
			"parameters": [
				{
					"name": "event",
					"type": "string"
				},
				{
					"name": "listener",
					"type": "EventListener"
				}
			],
			"returns": "boolean"
		},
		{
			"kind": "function",
			"name": "detachEvent",
			"parameters": [
				{
					"name": "event",
					"type": "string"
				},
				{
					"name": "listener",
					"type": "EventListener"
				}
			],
			"returns": "void"
		},
		{
			"kind": "variable",
			"name": "localStorage",
			"type": "Storage"
		},
		{
			"kind": "variable",
			"name": "status",
			"type": "string"
		},
		{
			"kind": "variable",
			"name": "onmouseleave",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "screenLeft",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "offscreenBuffering",
			"type": "any"
		},
		{
			"kind": "variable",
			"name": "maxConnectionsPerServer",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onmouseenter",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "MouseEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "clipboardData",
			"type": "DataTransfer"
		},
		{
			"kind": "variable",
			"name": "defaultStatus",
			"type": "string"
		},
		{
			"kind": "variable",
			"name": "clientInformation",
			"type": "Navigator"
		},
		{
			"kind": "variable",
			"name": "closed",
			"type": "boolean"
		},
		{
			"kind": "variable",
			"name": "onhelp",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "Event"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "external",
			"type": "External"
		},
		{
			"kind": "variable",
			"name": "event",
			"type": "MSEventObj"
		},
		{
			"kind": "variable",
			"name": "onfocusout",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "FocusEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "screenTop",
			"type": "number"
		},
		{
			"kind": "variable",
			"name": "onfocusin",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "FocusEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "function",
			"name": "showModelessDialog",
			"parameters": [
				{
					"name": "url",
					"optional": true,
					"type": "string"
				},
				{
					"name": "argument",
					"optional": true,
					"type": "any"
				},
				{
					"name": "options",
					"optional": true,
					"type": "any"
				}
			],
			"returns": "Window"
		},
		{
			"kind": "function",
			"name": "navigate",
			"parameters": [
				{
					"name": "url",
					"type": "string"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "resizeBy",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "item",
			"parameters": [
				{
					"name": "index",
					"type": "any"
				}
			],
			"returns": "any"
		},
		{
			"kind": "function",
			"name": "resizeTo",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "createPopup",
			"parameters": [
				{
					"name": "arguments",
					"optional": true,
					"type": "any"
				}
			],
			"returns": "MSPopupWindow"
		},
		{
			"kind": "function",
			"name": "toStaticHTML",
			"parameters": [
				{
					"name": "html",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "execScript",
			"parameters": [
				{
					"name": "code",
					"type": "string"
				},
				{
					"name": "language",
					"optional": true,
					"type": "string"
				}
			],
			"returns": "any"
		},
		{
			"kind": "function",
			"name": "msWriteProfilerMark",
			"parameters": [
				{
					"name": "profilerMarkName",
					"type": "string"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "moveTo",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "moveBy",
			"parameters": [
				{
					"name": "x",
					"optional": true,
					"type": "number"
				},
				{
					"name": "y",
					"optional": true,
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "showHelp",
			"parameters": [
				{
					"name": "url",
					"type": "string"
				},
				{
					"name": "helpArg",
					"optional": true,
					"type": "any"
				},
				{
					"name": "features",
					"optional": true,
					"type": "string"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "captureEvents",
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "releaseEvents",
			"returns": "void"
		},
		{
			"kind": "variable",
			"name": "sessionStorage",
			"type": "Storage"
		},
		{
			"kind": "function",
			"name": "clearTimeout",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "setTimeout",
			"parameters": [
				{
					"name": "handler",
					"type": "any"
				},
				{
					"name": "timeout",
					"optional": true,
					"type": "any"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "clearInterval",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "setInterval",
			"parameters": [
				{
					"name": "handler",
					"type": "any"
				},
				{
					"name": "timeout",
					"optional": true,
					"type": "any"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "msSetImmediate",
			"parameters": [
				{
					"name": "expression",
					"type": "any"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "clearImmediate",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "msClearImmediate",
			"parameters": [
				{
					"name": "handle",
					"type": "number"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "setImmediate",
			"parameters": [
				{
					"name": "expression",
					"type": "any"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "number"
		},
		{
			"kind": "function",
			"name": "btoa",
			"parameters": [
				{
					"name": "rawString",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "function",
			"name": "atob",
			"parameters": [
				{
					"name": "encodedString",
					"type": "string"
				}
			],
			"returns": "string"
		},
		{
			"kind": "variable",
			"name": "msIndexedDB",
			"type": "IDBFactory"
		},
		{
			"kind": "variable",
			"name": "indexedDB",
			"type": "IDBFactory"
		},
		{
			"kind": "variable",
			"name": "console",
			"type": "Console"
		},
		{
			"kind": "variable",
			"name": "onpointerenter",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointerout",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointerdown",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointerup",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointercancel",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointerover",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointermove",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "variable",
			"name": "onpointerleave",
			"type": {
				"kind": "function",
				"parameters": [
					{
						"name": "ev",
						"type": "PointerEvent"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mouseleave\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mouseenter\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"help\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"focusout\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"focusin\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerenter\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerout\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerdown\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerup\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointercancel\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerover\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointermove\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pointerleave\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PointerEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dragend\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"keydown\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dragover\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"keyup\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"reset\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mouseup\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dragstart\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"drag\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mouseover\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dragleave\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"afterprint\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pause\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"beforeprint\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mousedown\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"seeked\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"click\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"waiting\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"online\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"durationchange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"blur\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"emptied\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"seeking\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"canplay\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"stalled\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mousemove\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"offline\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"beforeunload\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "BeforeUnloadEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"ratechange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"storage\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "StorageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"loadstart\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dragenter\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"submit\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"progress\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "ProgressEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"dblclick\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"contextmenu\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"change\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"loadedmetadata\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"play\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"playing\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"canplaythrough\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"abort\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"readystatechange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"keypress\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "KeyboardEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"loadeddata\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"suspend\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"focus\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "FocusEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"message\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MessageEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"timeupdate\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"resize\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"select\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"drop\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DragEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mouseout\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"ended\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"hashchange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"unload\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"scroll\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "UIEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mousewheel\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "MouseWheelEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"load\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"volumechange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"input\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "Event"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerdown\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgesturedoubletap\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerhover\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgesturehold\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointermove\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgesturechange\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgesturestart\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointercancel\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgestureend\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msgesturetap\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerout\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"msinertiastart\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerover\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"popstate\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PopStateEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerup\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pageshow\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"devicemotion\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DeviceMotionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"deviceorientation\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "DeviceOrientationEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerenter\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"pagehide\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "PageTransitionEvent"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "\"mspointerleave\""
				},
				{
					"name": "listener",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "ev",
								"type": "any"
							}
						],
						"returns": "any"
					}
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "addEventListener",
			"parameters": [
				{
					"name": "type",
					"type": "string"
				},
				{
					"name": "listener",
					"type": "EventListener"
				},
				{
					"name": "useCapture",
					"optional": true,
					"type": "boolean"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "importScripts",
			"parameters": [
				{
					"name": "urls",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "string"
					}
				}
			],
			"returns": "void"
		},
		{
			"kind": "variable",
			"name": "ActiveXObject",
			"type": {
				"kind": "constructor",
				"parameters": [
					{
						"name": "s",
						"type": "string"
					}
				],
				"returns": "any"
			}
		},
		{
			"kind": "interface",
			"name": "ITextWriter",
			"signatures": [
				{
					"kind": "method",
					"name": "Write",
					"parameters": [
						{
							"name": "s",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "WriteLine",
					"parameters": [
						{
							"name": "s",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "Close",
					"returns": "void"
				}
			]
		},
		{
			"kind": "variable",
			"name": "WScript",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "method",
						"name": "Echo",
						"parameters": [
							{
								"name": "s",
								"type": "any"
							}
						],
						"returns": "void"
					},
					{
						"kind": "property",
						"name": "StdErr",
						"type": "ITextWriter"
					},
					{
						"kind": "property",
						"name": "StdOut",
						"type": "ITextWriter"
					},
					{
						"kind": "property",
						"name": "Arguments",
						"type": {
							"kind": "object",
							"signatures": [
								{
									"kind": "property",
									"name": "length",
									"type": "number"
								},
								{
									"kind": "method",
									"name": "Item",
									"parameters": [
										{
											"name": "n",
											"type": "number"
										}
									],
									"returns": "string"
								}
							]
						}
					},
					{
						"kind": "property",
						"name": "ScriptFullName",
						"type": "string"
					},
					{
						"kind": "method",
						"name": "Quit",
						"parameters": [
							{
								"name": "exitCode",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "number"
					}
				]
			}
		}
	]
}